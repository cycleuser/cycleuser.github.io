<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CycleUser - Duke</title><link href="/" rel="alternate"></link><link href="/feeds/duke.atom.xml" rel="self"></link><id>/</id><updated>2017-04-16T00:00:00+08:00</updated><entry><title>Introduction of STA663</title><link href="/introduction-of-sta663.html" rel="alternate"></link><published>2017-04-16T00:00:00+08:00</published><updated>2017-04-16T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-16:/introduction-of-sta663.html</id><summary type="html">&lt;h1&gt;基于 Python 的计算机统计学&lt;/h1&gt;
&lt;h1&gt;简介&lt;/h1&gt;
&lt;p&gt;这一套课件实际上是一些相当粗糙的讲座笔记的草稿，基于 IPython notebook ，这门课程从 2015 年春季开始的，针对硕士生的统计学课程，&lt;a href="https://stat.duke.edu/courses/statistical-computing-and-computation"&gt;课程地址原本在这里，但是这个链接实际上已经不能访问了&lt;/a&gt;。译者注：现在的链接&lt;a href="http://people.duke.edu/~ccc14/sta-663/index.html"&gt;可能应该是在这个链接&lt;/a&gt;。这个课程主要介绍的内容是在&lt;strong&gt;优化&lt;/strong&gt;和&lt;strong&gt;模拟&lt;/strong&gt;这两方面的各种算法的开发，这些内容也是计算统计学的核心内容。各种各样的算法和数据集的复杂度都会逐渐增加，（一维 -&amp;gt; 多维，固定 -&amp;gt; 自适应，线性 -&amp;gt; 并行 -&amp;gt; 大规模并行，少量数据 -&amp;gt; 巨量数据），这是为了让学这门课的学生能够掌握并联系下面这些内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;练习可重现的分析（reproducible analysis）&lt;/li&gt;
&lt;li&gt;掌握基本的数据管理和处理技能&lt;/li&gt;
&lt;li&gt;使用 Python 语言来进行统计计算&lt;/li&gt;
&lt;li&gt;使用数学和统计学的链接库来提高效率&lt;/li&gt;
&lt;li&gt;能够理解和优化线性代码（serial code）&lt;/li&gt;
&lt;li&gt;能够掌握不同的并行开发范式并高效利用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;算法上，主要集中在以下两方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优化（Optimization …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;基于 Python 的计算机统计学&lt;/h1&gt;
&lt;h1&gt;简介&lt;/h1&gt;
&lt;p&gt;这一套课件实际上是一些相当粗糙的讲座笔记的草稿，基于 IPython notebook ，这门课程从 2015 年春季开始的，针对硕士生的统计学课程，&lt;a href="https://stat.duke.edu/courses/statistical-computing-and-computation"&gt;课程地址原本在这里，但是这个链接实际上已经不能访问了&lt;/a&gt;。译者注：现在的链接&lt;a href="http://people.duke.edu/~ccc14/sta-663/index.html"&gt;可能应该是在这个链接&lt;/a&gt;。这个课程主要介绍的内容是在&lt;strong&gt;优化&lt;/strong&gt;和&lt;strong&gt;模拟&lt;/strong&gt;这两方面的各种算法的开发，这些内容也是计算统计学的核心内容。各种各样的算法和数据集的复杂度都会逐渐增加，（一维 -&amp;gt; 多维，固定 -&amp;gt; 自适应，线性 -&amp;gt; 并行 -&amp;gt; 大规模并行，少量数据 -&amp;gt; 巨量数据），这是为了让学这门课的学生能够掌握并联系下面这些内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;练习可重现的分析（reproducible analysis）&lt;/li&gt;
&lt;li&gt;掌握基本的数据管理和处理技能&lt;/li&gt;
&lt;li&gt;使用 Python 语言来进行统计计算&lt;/li&gt;
&lt;li&gt;使用数学和统计学的链接库来提高效率&lt;/li&gt;
&lt;li&gt;能够理解和优化线性代码（serial code）&lt;/li&gt;
&lt;li&gt;能够掌握不同的并行开发范式并高效利用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;算法上，主要集中在以下两方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优化（Optimization）&lt;ul&gt;
&lt;li&gt;牛顿-拉普森算法（Newton-Raphson，NR算法），函数式编程和向量化&lt;/li&gt;
&lt;li&gt;积分算法（Quadrature），自适应方法&lt;/li&gt;
&lt;li&gt;梯度下降法（Gradient descent），用于多个变量的情况&lt;/li&gt;
&lt;li&gt;广义线性模型算法（Solving GLMs），多变量 + C/C++  的接口&lt;/li&gt;
&lt;li&gt;期望最大化算法，多变量 + 有限混合模型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;仿真和重采样（Simulation and resampling0&lt;ul&gt;
&lt;li&gt;Bootstrap法，并行编程的基础&lt;/li&gt;
&lt;li&gt;"Map（映射）"和"Reduce（归约），适用于针对大规模数据的统计&lt;/li&gt;
&lt;li&gt;蒙特卡罗模拟算法（Monte Carlo simulations），更大规模的并行编程&lt;/li&gt;
&lt;li&gt;MCMC算法（马尔可夫链蒙特卡罗(Markov Chain Monte Carlo)），多重采样，使用 GPU 进行编程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我（原作者）相信在 Duke 大学本专业内，这应该是第一次基于 Python 来讲的这门课，所以这门课会非常有意思。这也意味着教这门课需要准备很多新内容，我（原作者）就直接从已有的各种公有领域的 IPython notebook 里面来摘抄了。&lt;/p&gt;</content><category term="Duke"></category><category term="Translation"></category><category term="Lesson"></category><category term="Programming"></category><category term="Python"></category></entry></feed>