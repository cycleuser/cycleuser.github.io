<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CycleUser</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2022-01-01T16:59:00+08:00</updated><entry><title>空间数据的可视化和分析</title><link href="/kong-jian-shu-ju-de-ke-shi-hua-he-fen-xi.html" rel="alternate"></link><published>2022-01-01T16:59:00+08:00</published><updated>2022-01-01T16:59:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2022-01-01:/kong-jian-shu-ju-de-ke-shi-hua-he-fen-xi.html</id><summary type="html">&lt;p&gt;&lt;a href="https://courses.spatialthoughts.com/spatial-data-viz.html"&gt;本文英文原版地址&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;使用 QGIS 处理空间数据集&lt;/h3&gt;
&lt;h4&gt;英文原作者：Ujaval Gandhi&lt;/h4&gt;
&lt;h4&gt;中文翻译：CycleUser&lt;/h4&gt;
&lt;h1&gt;导论&lt;/h1&gt;
&lt;p&gt;本课程对位置数据集的使用进行简要介绍。课程会涉及到一系列的使用场景和应用工具，让你能亲自上手体验地图数据的可视化，并从中提取深层信息。这门课假设你对地理信息系统、遥感都一无所知，也适合所有学科的从业人员。我们这里所有练习都用开源软件&lt;a href="https://qgis.org/en/site/"&gt;QGIS&lt;/a&gt; ，所以此课程也适合用于学习QGIS。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/1lFjSnJbUuxVpAu5qk4mu1A"&gt;点击下载课程幻灯片 提取码: nfr8 &lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;软件&lt;/h1&gt;
&lt;p&gt;本课程使用的版本是 QGIS LTR version 3.16 （长期支持版本），具体的安装可以参考&lt;a href="https://courses.spatialthoughts.com/install-qgis-ltr.html"&gt;QGIS-LTR 安装指南&lt;/a&gt; 。【译者注：也可以自行探索，这一步挺简单的。需要注意的就是尽量用默认设置，别自己乱改安装路径导致环境变量设置不对等等自作孽。】&lt;/p&gt;
&lt;h1&gt;获取数据集&lt;/h1&gt;
&lt;p&gt;课程的练习中要用到一系列的数据集，都存放在一起来。下载之后，里面有所有的图层文件、项目文件等等，建议将这些文件到&lt;code&gt;Downloads&lt;/code&gt;文件夹下。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/19v8StzMObZUX-K5gk3V7OQ"&gt;点击下载课程数据集 提取码 …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://courses.spatialthoughts.com/spatial-data-viz.html"&gt;本文英文原版地址&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;使用 QGIS 处理空间数据集&lt;/h3&gt;
&lt;h4&gt;英文原作者：Ujaval Gandhi&lt;/h4&gt;
&lt;h4&gt;中文翻译：CycleUser&lt;/h4&gt;
&lt;h1&gt;导论&lt;/h1&gt;
&lt;p&gt;本课程对位置数据集的使用进行简要介绍。课程会涉及到一系列的使用场景和应用工具，让你能亲自上手体验地图数据的可视化，并从中提取深层信息。这门课假设你对地理信息系统、遥感都一无所知，也适合所有学科的从业人员。我们这里所有练习都用开源软件&lt;a href="https://qgis.org/en/site/"&gt;QGIS&lt;/a&gt; ，所以此课程也适合用于学习QGIS。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/1lFjSnJbUuxVpAu5qk4mu1A"&gt;点击下载课程幻灯片 提取码: nfr8 &lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;软件&lt;/h1&gt;
&lt;p&gt;本课程使用的版本是 QGIS LTR version 3.16 （长期支持版本），具体的安装可以参考&lt;a href="https://courses.spatialthoughts.com/install-qgis-ltr.html"&gt;QGIS-LTR 安装指南&lt;/a&gt; 。【译者注：也可以自行探索，这一步挺简单的。需要注意的就是尽量用默认设置，别自己乱改安装路径导致环境变量设置不对等等自作孽。】&lt;/p&gt;
&lt;h1&gt;获取数据集&lt;/h1&gt;
&lt;p&gt;课程的练习中要用到一系列的数据集，都存放在一起来。下载之后，里面有所有的图层文件、项目文件等等，建议将这些文件到&lt;code&gt;Downloads&lt;/code&gt;文件夹下。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/19v8StzMObZUX-K5gk3V7OQ"&gt;点击下载课程数据集 提取码: gld7 &lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;完成准备工作&lt;/h1&gt;
&lt;p&gt;准备工作需要一小时。在开始练习前，理解空间数据如何建模非常重要，还要了解坐标参考系统。&lt;/p&gt;
&lt;h2&gt;关于地理信息系统的一个使用简介视频&lt;/h2&gt;
&lt;p&gt;为了对地理信息系统的基本概念有一个初步了解，可以观看下面的视频和对应幻灯片。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=yfLjnK569XY"&gt;&lt;img alt="Video" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/intro_to_gis.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yfLjnK569XY"&gt;点击播放本节视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pan.baidu.com/s/1fgK5anzqC_J3AkOq3QcZag"&gt;点击下载对应幻灯片 提取码: 4hic &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;做个测试&lt;/h2&gt;
&lt;p&gt;看完了上面的视频和幻灯片后，可以做一下下面的测试，来试试你对地理信息系统的初步了解。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forms.gle/p79Ssyte91NHZtkp6"&gt;原版地理信息系统基本概念测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;地理信息系统简介的基础测试&lt;/h5&gt;
&lt;p&gt;这个小测验是检测你对地理信息系统基础知识的掌握情况。
- 每道题一分。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列哪一个不是矢量数据格式（Vector data format）? 
    a. Shapefile
    b. GeoPackage
    c. GeoTIFF
    d. CSV&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;地理信息系统是用于下列哪些功能的软件工具？
    a. 创建地图
    b. 查看地理空间数据
    c. 分析空间数据
    d. 创建空间数据通道
    e. 以上全都对&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假如你要创建一个非洲地图，你可以选择下列哪种坐标参考系？（多选）
    a. Africa Lambert Conformal Conic
    b. Africa Albers Equal Area
    c. Equal Earth
    d. WGS84 Lat/Lon&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列哪种数据类型可以用来表示地下水位？
    a. 点向量层，展示每个取样位置的水位
    b. 栅格数据层，整个区域的每个像素都插值表示水位
    c. 线向量层，展示水位的轮廓线
    d. 以上全都对&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在WGS84坐标系中，班加罗尔（Bangalore）的经纬度坐标是 12.9716° N, 77.5946° E，哪一个是Y坐标？
    a. 12.9716
    b. 77.5946&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;猜一猜GPS坐标为 35.6762° N, 139.6503° E 的是下面哪座城市？
    a. 澳大利亚悉尼
    b. 日本东京
    c. 巴西里约热内卢
    d. 加拿大温哥华&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参考系'EPSG:4326' 中的 EPSG 是什么的缩写？
    a. European Petroleum Survey Group
    b. Earth Projection Standard Group
    c. European Projection Survey Group&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保角投影（如墨卡托）保留了以下哪种特性？
    a. 形状
    b. 面积
    c. 距离
    d. 以上全都对&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下图中红色方框所示位置的UTM分区应该是哪个？
&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/q8.jpg"&gt;
    a. 34
    b. 34S
    c. 34N
    d. 34J&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列关于'Geoid' 命题为真的是：
    a. 近似地球的平均海平面
    b. 是使用精确地表高程测量得到的表面
    c. 是使用重力测量推测出的数学表面
    d. 以上全都对&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;参考答案：&lt;/h5&gt;
&lt;p&gt;c; d; ab; d; a; b; a; a; b; d&lt;/p&gt;
&lt;h1&gt;理解空间数据&lt;/h1&gt;
&lt;h2&gt;为什么要在意位置？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“Everything is related to everything else, but near things are more related than distant things. 所有事物都和其他的事物相联系，而近距离事物之间的联系比远距离的更紧密。” - Waldo Tobler’s &lt;a href="https://en.wikipedia.org/wiki/Tobler%27s_first_law_of_geography"&gt;《地理学第一定律（First Law of Geography）》&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当对现实世界进行建模和分析的时候，位置是一个关键的因子。非空间模型无法准确反映现实世界中发生的过程和互动。例如对&lt;a href="https://medium.com/geoai/using-forest-based-classification-regression-to-model-and-estimate-house-values-5a0e26682c42"&gt;预测房价&lt;/a&gt; 的问题中，空间预测模型的效果就远胜过非空间模型。&lt;/p&gt;
&lt;h2&gt;位置数据随处可见&lt;/h2&gt;
&lt;p&gt;现在获取位置数据对个人或者企业都很容易。空间数据为数据增加了额外的维度，能够揭示出原本不显著的模式。&lt;/p&gt;
&lt;p&gt;个体有了手机上的定位传感器，就可以将他们的数据附加上位置信息。智能手机拍摄的照片就有内嵌的位置信息。如果选择加入位置信息，用户就可以持续地存储和访问他们的位置历史。&lt;/p&gt;
&lt;p&gt;很多企业也有各种各样的位置数据，顾客地址、网站访客的IP地址、销售区域、供应链条等等。对于其他的一些商业活动，比如出租车服务商、餐饮快递、物流等都产生了大量的位置数据，能用来挖掘出情报。&lt;/p&gt;
&lt;p&gt;物联网设备也在收集传感器数据的同时持续采集位置数据。&lt;/p&gt;
&lt;p&gt;政府机构也在越来越多地采集和分享基于位置的数据。这些与城市基础设施、人口普查、激光雷达和航空图像等等相关的数据，正在被大量采集。很多政府都提供了开放数据共享政策，使得这些数据可以供个人和企业使用。&lt;/p&gt;
&lt;h2&gt;空间数据模型 Spatial Data Model&lt;/h2&gt;
&lt;p&gt;空间数据的模型包含两个部分：&lt;strong&gt;几何（geometry）&lt;/strong&gt; + &lt;strong&gt;性质（properties）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;几何（Geometry）&lt;/em&gt; (形状 Shape) 是通过坐标和坐标参考系统定义的； &lt;em&gt;性质（Properties）&lt;/em&gt; (属性 Attributes) 是用数据和数据类型来定义的。&lt;/p&gt;
&lt;p&gt;下面就是将班加罗尔这个城市表示成一个点：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; {
      &amp;quot;type&amp;quot;: &amp;quot;Feature&amp;quot;,
      &amp;quot;geometry&amp;quot;: {
        &amp;quot;type&amp;quot;: &amp;quot;Point&amp;quot;,
        &amp;quot;coordinates&amp;quot;: [ 77.58270263671875, 12.963074139604124]
      },
      &amp;quot;properties&amp;quot;: {
        &amp;quot;id&amp;quot;: 1,
        &amp;quot;name&amp;quot;: &amp;quot;Bengaluru&amp;quot;
      }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上面的格式使用的是 &lt;a href="https://geojson.org/"&gt;GeoJson 格式&lt;/a&gt; 。点的几何坐标使用了X (经度 Longitude) 和 Y (纬度 Latitude)两者来定义。这个点都被分配了两个属性，第一个 &lt;em&gt;id&lt;/em&gt; 的值是 &lt;code&gt;1&lt;/code&gt;，而 &lt;em&gt;name&lt;/em&gt; 就设置成城市名字 &lt;code&gt;Bengaluru&lt;/code&gt;。GeoJson 格式只支持一个坐标参考系统（WGS84），所以这里不需要在具体指定。&lt;/p&gt;
&lt;h2&gt;空间数据格式&lt;/h2&gt;
&lt;p&gt;前面已经讲了表征空间数据的最基本的方法。实际上有很多种数据格式能表征空间数据，这些数据格式有个字适合的不同应用。大多数情况下，空间数据格式就是对已有数据格式的扩展。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;非空间数据&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;空间数据&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;文本&lt;/td&gt;
&lt;td align="left"&gt;csv, json, xml&lt;/td&gt;
&lt;td align="left"&gt;csv, geojson, gml, kml&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;二进制/压缩包&lt;/td&gt;
&lt;td align="left"&gt;pdf, xls, zip&lt;/td&gt;
&lt;td align="left"&gt;shapefile, geopdf, geopackage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;图像&lt;/td&gt;
&lt;td align="left"&gt;tiff, jpg, png&lt;/td&gt;
&lt;td align="left"&gt;geotiff, jpeg2000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;数据库&lt;/td&gt;
&lt;td align="left"&gt;SQLite, PostgreSQL, Oracle&lt;/td&gt;
&lt;td align="left"&gt;Spatialite, PostGIS, Oracle Spatial&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;空间数据类型&lt;/h2&gt;
&lt;p&gt;空间数据一般可以分成两类，矢量数据（Vector）和栅格数据（Raster）。在网络上提供相关服务的这些数据一般都是被切成一个个小的块（切片，tiles），这些就可以作为第三类来分出来。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;子类&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;样例&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;矢量&lt;/td&gt;
&lt;td align="left"&gt;点&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;传感器观测数据, 位置&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;线&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;GPS 轨迹, 道路, 河流, 轮廓线条&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;多边形&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;行政区划, 建筑&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;点云&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;激光雷达测量 LIDAR surveys&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;栅格&lt;/td&gt;
&lt;td align="left"&gt;照片&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;航拍和无人机照片&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;网格 Grids&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;卫星图像, 高程数据&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;网状结构 Mesh&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;气候和科学观测数据&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;切片&lt;/td&gt;
&lt;td align="left"&gt;栅格数据切片层&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;网络地图&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;矢量数据切片层&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;网络地图&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;地图投影和坐标参考系统&lt;/h2&gt;
&lt;p&gt;如果说空间数据有什么特殊之处，那一定就是坐标参考系统（Coordinate Reference System，缩写为 CRS）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;地图投影（Map Projection）&lt;/em&gt; 将地球从立体球型（三维）投射成平面形状（二维）。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;坐标参考系（Coordinate Reference System，CRS）&lt;/em&gt; 就定义了这个投影得到的二维地图如何关联到地球上的真实位置。&lt;/p&gt;
&lt;p&gt;在&lt;a href="https://docs.qgis.org/testing/en/docs/gentle_gis_introduction/coordinate_reference_systems.html"&gt;QGIS 官方文档&lt;/a&gt; 中提供了对这一话题的详细介绍。&lt;/p&gt;
&lt;p&gt;目前市面上有几百种不同的地图投影和对应的坐标参考系，每一种都有不同的性质和用途。最重要的是要记住，每一种投影都或多或少在某些方面存在畸变。有一篇 &lt;a href="https://bl.ocks.org/syntagmatic/ba569633d51ebec6ec6e"&gt;地图投影集锦&lt;/a&gt; 提供了常见投影方案的可视化介绍。更进一步的相关信息可以参考 Jochen Albrecht 所写的&lt;a href="http://www.geo.hunter.cuny.edu/~jochen/gtech201/lectures/lec6concepts/map%20coordinate%20systems/how%20to%20choose%20a%20projection.htm"&gt;指南：选择一个投影&lt;/a&gt;. 另外一篇 &lt;a href="https://onlinelibrary.wiley.com/doi/full/10.1111/tgis.12636"&gt;最近发表的文章&lt;/a&gt; 表明了投影选择对面积和体积计算的影响。&lt;/p&gt;
&lt;p&gt;那么你要选择什么投影方案呢？这可能是一个很宏大且复杂的话题，而且答案通常是，看情况。但接下来的这些内容会帮到你。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;全球地图&lt;/strong&gt;: 如果你要绘制的是全球地图，目前的主流选择是使用&lt;a href="http://equal-earth.com/"&gt;Equal Earth&lt;/a&gt; 投影。这种投影的附加优势就是保持了面积，所以对于需要等面积网格进行全球规模分析的场景来说是很好的选择。相比于其他的投影方案，比如 &lt;a href="https://en.wikipedia.org/wiki/Gall%E2%80%93Peters_projection"&gt;Gall-Peters 投影&lt;/a&gt;等等，&lt;a href="http://equal-earth.com/"&gt;Equal Earth&lt;/a&gt;在视觉上效果也更好些。新版本的 QGIS 已经内置了对多种 Equal Earth 坐标参考系的支持. 如果你用的是旧版本，可以通过下面的字符串来 &lt;a href="https://docs.qgis.org/testing/en/docs/user_manual/working_with_projections/working_with_projections.html#custom-coordinate-reference-system"&gt;自定义坐标参考系（Custom CRS）&lt;/a&gt; ：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;+proj=eqearth +datum=WGS84 +wktext
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="The Equal Earth Projection" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/equal-earth.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The Equal Earth Projection&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;国家地图&lt;/strong&gt;: 很多国家都制定了某个特定版本的坐标参考系统，目的是最小化本国内的畸变。可以通过访问对应国家的相关机构来获取相关信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;局部和区域地图&lt;/strong&gt;: 和国家层面的坐标参考系类似，很多国家都还有州、省一级的坐标参考系。另外，通用横轴墨卡托变换（Universal Transverse Mercator，UTM）为全球任意地区都提供了良好的坐标参考系。在每个区域内的畸变都是最小的。如果你的研究去包含在某个UTM区域内，使用UTM是分析和制图的好选择。
&lt;img alt="UTM Zones of the world" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/utm_zones.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UTM Zones of the world&lt;/p&gt;
&lt;h1&gt;QGIS 简介&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://qgis.org/"&gt;QGIS&lt;/a&gt; 是一个自由、开源软件，可以用于创建、编辑、可视化、分析和出版地理空间数据。QGIS支持Windows、macOS和Linux。本课程使用的是QGIS的长期支持版（Long Term Release，缩写为LTR），可以在&lt;a href="https://qgis.org/en/site/forusers/download.html"&gt;QGIS 官网下载页面&lt;/a&gt; 下载安装包。&lt;/p&gt;
&lt;h2&gt;插件（Plugins）&lt;/h2&gt;
&lt;p&gt;QGIS为开发者提供了插件这种非常简单的方式来扩展软件核心功能。安装和管理插件，需要在 QGIS 的菜单中选择&lt;strong&gt;Plugins → Manage and Install Plugins..&lt;/strong&gt;，然后切换到 &lt;em&gt;All&lt;/em&gt; 标签，然后搜索要安装的插件。找到之后，选中，然后点击&lt;em&gt;Install Plugin&lt;/em&gt; 就安装了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/plugins.png"&gt;&lt;/p&gt;
&lt;p&gt;本课程中，我们使用的是下面两个插件，需要大家来安装一下：
* QuickMapServices
* QuickOSM&lt;/p&gt;
&lt;h1&gt;可视化&lt;/h1&gt;
&lt;h2&gt;点&lt;/h2&gt;
&lt;p&gt;对空间数据的最简单表述方式就是使用表格。一个地理位置可以表示成一对坐标，经度和纬度，然后再加上与之相关的其他属性信息。很多空间数据都是这样的形式，比如Excel表格、CSV逗号分隔符文本，数据库表格等。&lt;/p&gt;
&lt;h3&gt;练习：将空气质量投在地图上&lt;/h3&gt;
&lt;p&gt;世界上很多国家和地区都面对着空气质量变差的问题。要更好地理解这个问题，首先的一步是持续收集各地的空气质量数据，很多机构都有这类数据的收集和公开，比如&lt;a href="https://openaq.org/"&gt;OpenAQ&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;我们使用 &lt;a href="https://blissair.com/what-is-pm-2-5.htm"&gt;PM2.5 浓度数据&lt;/a&gt; 中一天的数据，然后对其进行投图。目的是将表格数据转换成位置数据的可视化。&lt;/p&gt;
&lt;p&gt;本次练习中，我们使用的是2021年12月30奥地利当天的数据，下载自&lt;a href="https://openaq.org/#/countries?_k=dmlk2k"&gt;OpenAQ Data Download&lt;/a&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在编辑器中打开下载的文件 &lt;code&gt;measurements.csv&lt;/code&gt; 然后看一下。&lt;code&gt;value&lt;/code&gt;是测量值，&lt;code&gt;latitude&lt;/code&gt; 是纬度，&lt;code&gt;longitude&lt;/code&gt;是经度。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载的这种&lt;code&gt;csv&lt;/code&gt;格式的文件可以算作是一种&lt;strong&gt;分隔符文档Delimited Text&lt;/strong&gt;，可以在QGIS里面通过&lt;em&gt;Data Source Manager&lt;/em&gt;来进行导入。在QGIS主界面点击&lt;em&gt;Open Data Source Manager&lt;/em&gt; 按钮即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览到下载的&lt;code&gt;measurements.csv&lt;/code&gt;文件打。在 &lt;em&gt;Data Source Manager&lt;/em&gt; 里面选择&lt;em&gt;Delimited Text&lt;/em&gt;，然后在&lt;em&gt;File name&lt;/em&gt;里面定位到目标文件，在&lt;em&gt;Geometry Definition&lt;/em&gt;里面选择&lt;em&gt;Point coordinates&lt;/em&gt;，设置 &lt;code&gt;longitude&lt;/code&gt; 为 &lt;em&gt;X Field&lt;/em&gt;， &lt;code&gt;latitude&lt;/code&gt;为 &lt;em&gt;Y Field&lt;/em&gt;，然后选择 &lt;code&gt;EPSG 4326 - WGS 84&lt;/code&gt; 作为&lt;em&gt;Geometry CRS&lt;/em&gt;，点击&lt;em&gt;Add&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后就能看到表格数据加载到QGIS的画布上了，成了一个空间数据层。使用 &lt;em&gt;Identify&lt;/em&gt; 按钮来查看各个点，就能看到对应的各项数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点的分布在城市周围，但图上现在还没添加城市地图，所以就要加一个地图层（base-map layer）。这里使用&lt;strong&gt;QuickMapServices&lt;/strong&gt; 这个插件来加载多种地图，点击 &lt;strong&gt;Web → QuickMapServices → OSM → OSM Standard&lt;/strong&gt; 图层.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：如果你想要用其他的地图图层，到 &lt;strong&gt;Web → QuickMapServices → Settings&lt;/strong&gt; 中，切换到 &lt;strong&gt;More services&lt;/strong&gt;，点击 &lt;code&gt;Get Contributed Pack&lt;/code&gt;，然后点击 &lt;strong&gt;Save&lt;/strong&gt;保存即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新图层就添加到左侧的 &lt;em&gt;Layers&lt;/em&gt; 面板中了，也同时呈现在了画布&lt;em&gt;Canvas&lt;/em&gt;中。现在你就能看到数据点出现在城区地图上面了。接下来咱们点击 &lt;em&gt;Open the Layer Styling Panel&lt;/em&gt; 来让数据点看着更好一点。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这回咱要根据每个点的观测到的 &lt;code&gt;value&lt;/code&gt; 来对其进行着色。选择&lt;code&gt;Graduated&lt;/code&gt;着色器，然后将 &lt;code&gt;value&lt;/code&gt;设置为 &lt;em&gt;Value&lt;/em&gt; 列。将&lt;em&gt;Classes&lt;/em&gt; 到分类数设置为&lt;code&gt;6&lt;/code&gt; 然后点击 &lt;em&gt;Classify&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：默认的分类模式是&lt;em&gt;Equal Count&lt;/em&gt; - 这对于咱们的练习来说也能用。 关于数据分类的更多内容可以参考 &lt;a href="https://docs.qgis.org/testing/en/docs/user_manual/working_with_vector/vector_properties.html?#graduated-renderer"&gt;QGIS 官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq7.png"&gt;&lt;/p&gt;
&lt;p&gt;要让分类范围再有更多的意义，可以将它们和常用范围联系起来。
&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq_naqi.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来调整，将图例&lt;em&gt;Legend&lt;/em&gt; 调整成人类可读性更好的分类名称，可以双击每一个类别的范围然后来修改。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：这里的区间包含上界，不包含下界。所以如果一个区间是 30-60，包含的就是所有 &amp;gt;30 而&amp;lt;=60的值。具体的细节可以参考&lt;a href="https://github.com/qgis/QGIS/issues/29852"&gt;QGIS的这个Issue&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于你修改了分类那对应的可视化方案也要调整了。正好把空气质量调整成对应的模式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;另外还可以调整一下配色，这里就将原来的单色调成红黄绿三色&lt;code&gt;RdYlGn&lt;/code&gt; (Red-Yellow-Green) 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这里就发现有问题了，默认的是高值变成绿，低值是红了。我们希望的正好是反过来，所以点击刚才的下来菜单，然后选择&lt;em&gt;Invert Color Ramp&lt;/em&gt;来反转配色。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解下来就是要在点上添加字符标签来。切换到&lt;em&gt;Labels&lt;/em&gt; 标签，如下图所示。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择 &lt;code&gt;Single labels&lt;/code&gt; 然后设置 &lt;code&gt;value&lt;/code&gt; 为 &lt;em&gt;Value&lt;/em&gt;，下拉，再选择格式化树枝 &lt;em&gt;Formatted numbers&lt;/em&gt; ，将小数点 &lt;em&gt;Decimal places&lt;/em&gt; 设置为 &lt;code&gt;0&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq13.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后写换到&lt;em&gt;Background&lt;/em&gt; 标签页，选中 &lt;em&gt;Draw background&lt;/em&gt; 后调整 &lt;em&gt;Size X&lt;/em&gt; 和 &lt;em&gt;Size Y&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq14.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在下面找到 &lt;em&gt;Fill color&lt;/em&gt; 部分，我们希望将每处填充上和圆点一样的颜色。点击 &lt;em&gt;Data defined override&lt;/em&gt; 按钮然后选择 &lt;em&gt;Edit&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq15.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;双击 &lt;code&gt;@symbol_color&lt;/code&gt; 变量，加入到表达式中，然后点击&lt;code&gt;OK&lt;/code&gt;按钮确认。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq16.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在就会发现两者颜色匹配了，然后切换到 &lt;em&gt;Placement&lt;/em&gt; 选项卡，选择&lt;em&gt;Offset from point&lt;/em&gt;，设置 &lt;em&gt;Offset Y&lt;/em&gt; 为 &lt;code&gt;-5&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq17.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最后，点击进入 &lt;em&gt;Callouts&lt;/em&gt; 标签页，然后选中 &lt;em&gt;Draw callouts&lt;/em&gt; 使得所选的方块标签与对应的数据点之间连起来以便于区分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq18.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在就点击&lt;em&gt;Save Project&lt;/em&gt; 按钮来把这个项目保存成 &lt;code&gt;air_quality.qgz&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq19.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在标签看着都还挺清晰，但有的太近了，很拥挤。可以手动调整标签位置来解决这个问题。在工具栏区域右键任意位置打开&lt;em&gt;Label Toolbar&lt;/em&gt;，如下图所示。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq20.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击&lt;em&gt;Move a Label&lt;/em&gt; 按钮，然后在出现的 &lt;em&gt;Auxiliary Storage&lt;/em&gt; 提示界面上点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq21.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于上面激活了 &lt;em&gt;Move a Label&lt;/em&gt; 按钮，现在可以点击任意一个标签来选中。然后想把它挪到哪里就点到那里即可。弄完之后，再次保存项目。现在就可以导出做好的地图了，到菜单中的&lt;strong&gt;Project → New Print Layout…&lt;/strong&gt;，名字留空，直接点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq22.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输出图幅可以将各种元素都放在一起成为一个静态地图，包括标签、图例、指北针、比例尺等等。可以在&lt;strong&gt;Add Item → Add Map&lt;/strong&gt;中来添加地图。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq23.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果你没看到完整地图扩展范围，可以点击 &lt;em&gt;Set Map Extent to Match Main Canvas Extent&lt;/em&gt; 按钮，位置在工具栏中 &lt;code&gt;Map 1&lt;/code&gt;的&lt;em&gt;Item Properties&lt;/em&gt;的下面。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq24.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来，添加一个 &lt;em&gt;Rectangle&lt;/em&gt; ，来存放地图切片、比例尺和属性信息等等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq25.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将这个小矩形放到图幅右上角，设置&lt;em&gt;Corner radius&lt;/em&gt; 为&lt;code&gt;10&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq26.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后在这个小矩形中添加一个 &lt;em&gt;Label&lt;/em&gt; 。输入你的地图名字&lt;code&gt;Average PM2.5 Concentration (µg/m3)&lt;/code&gt; 以及日期&lt;code&gt;15 February, 2022&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq27.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;还是在这个矩形中，再添加一个标签&lt;em&gt;Label&lt;/em&gt; ，设置文本为 &lt;code&gt;Data Source: Central Pollution Control Board, EPA AirNow DOS. Downloaded from OpenAQ.org&lt;/code&gt;。然后还要添加图例来解释图上的符号和颜色等等。到菜单栏中，找到&lt;strong&gt;Add Item → Add Legend&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq28.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拖动方框来插入图例到白色矩形中。然后再找到&lt;em&gt;Item Properties&lt;/em&gt; 标签页来关闭 &lt;em&gt;Auto update&lt;/em&gt;，移除 &lt;code&gt;OpenStreetMap monochrome&lt;/code&gt; 图层，然后设置 &lt;code&gt;openaq&lt;/code&gt;群标签为隐藏&lt;em&gt;Hidden&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq29.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;图例默认位置是淑芝的，单独一列。可以将其改成多列，弄成水平。滚轮找到&lt;em&gt;Columns&lt;/em&gt;区域，然后设置&lt;em&gt;Count&lt;/em&gt; 为&lt;code&gt;2&lt;/code&gt;，再选中 &lt;em&gt;Split layers&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq30.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;em&gt;Main Properties&lt;/em&gt;部分，输入一个比例尺的标题&lt;em&gt;Title&lt;/em&gt; ，比如 &lt;code&gt;Air Quality Index Category&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq31.png"&gt;&lt;/p&gt;
&lt;p&gt;彻底设置满意了，就可以将地图输出了。如果你想放在网站上，就可以用图像&lt;strong&gt;Image&lt;/strong&gt; 来导出。如果你以后可能要用矢量图编辑软件来修改，就可以考虑存成 &lt;strong&gt;SVG&lt;/strong&gt; 格式，这样你就可以使用 &lt;a href="https://inkscape.org/"&gt;InkScape&lt;/a&gt;来编辑了。不过一般更通用的可能还是PDF格式。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Credit: Atanas Entchev" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/shp_to_pdf.png"&gt;&lt;/p&gt;
&lt;p&gt;Credit: Atanas Entchev&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所以接下来就用PDF格式来导出吧。导出之前，切换到布局&lt;em&gt;Layout&lt;/em&gt;标签页。我们使用的是OpenStreetMap 的位图地图作为底层。这是使用对缩放有依赖的切片地图绘制的。所以有必要设置一个较高的导出分辨率，以便获得更清晰的更高分辨率的切片地图。另外导出的分辨率&lt;em&gt;Export resolution&lt;/em&gt; 可以设置到 &lt;code&gt;100&lt;/code&gt; dpi，更高当然也行。菜单栏中找到 &lt;strong&gt;Layout → Export as PDF&lt;/strong&gt;然后试试吧。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq32.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在导出选项&lt;em&gt;PDF Export Options&lt;/em&gt; 中选中 &lt;em&gt;Create Geospatial PDF (GeoPDF)&lt;/em&gt;，这个GeoPDF 是一种增强的PDF格式，具有空间感知，并且保留了图层和属性信息。点击&lt;em&gt;Save&lt;/em&gt; 将该文件保存为&lt;code&gt;air_quality.pdf&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq33.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果你在兼容的阅读其中打开对应的这个新生成的PDF文件，比如使用&lt;a href="https://get.adobe.com/reader/"&gt;Adobe Acrobat&lt;/a&gt;，你就能看到各个图层的元素，还可以读取特征属性，计算距离等等。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Adobe Reader 中，针对 GeoPDF 可以在工具-测量&lt;em&gt;Tools → Measure&lt;/em&gt;中启用测量工具。更多信息参考&lt;a href="https://helpx.adobe.com/in/acrobat/using/grids-guides-measurements-pdfs.html#measure_the_height_width_or_area_of_objects"&gt;Adobe 官方网站&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq34.png"&gt;&lt;/p&gt;
&lt;h2&gt;线条 Lines&lt;/h2&gt;
&lt;p&gt;路、桥、铁轨等很多交通设施，以及河流、溪水等自然景物，都可以用线条来建模。其它一些抽象概念，比如轮廓、轨迹等等也可以使用线性特征来建模。用于存储线条数据集的一般有Shapefiles、GeoJSON、GPX等文件格式。&lt;/p&gt;
&lt;h3&gt;练习：GPS轨迹可视化&lt;/h3&gt;
&lt;p&gt;如今生活里，GPS轨迹随处可见。大多数智能手机都内置了GPS系统，人们普遍用GPS来记录跑步或者骑行等户外活动。网约车公司也在乘客乘坐期间记录里程来计费。快递和物流公司从他们的快件中存储并分析了大规模的GPS数据来推导出位置智能（location intelligence）。&lt;/p&gt;
&lt;p&gt;这个练习中，我们使用的是一个开源的&lt;a href="https://www.basicairdata.eu/projects/android/android-gps-logger/"&gt;GPS位置记录APP&lt;/a&gt; ，可以运行在Android设备上。如果你用的是iOS设备，推荐你可以试试另一个开源应用&lt;a href="https://apps.apple.com/app/open-gpx-tracker/id984503772"&gt;Open GPX Tracker&lt;/a&gt;。存储GPS轨迹的默认格式是&lt;a href="https://en.wikipedia.org/wiki/GPS_Exchange_Format"&gt;GPS Exchange Format (GPX)&lt;/a&gt;。这实际上是一种基于XML的文本格式，允许在一个文件中存储点、轨迹和路径。本次练习使用的是&lt;code&gt;sample_gps_track.gpx&lt;/code&gt; 文件，目的是要创建一个动态的GIF图来展示整个行程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;code&gt;sample_gps_track.gpx&lt;/code&gt; 文件拖动添加到QGIS的画布上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于文件中有多条数据类型，程序会弹出一个窗口询问你选择要添加的图层（layers）。这时先按住 &lt;em&gt;Shift&lt;/em&gt; 键不放，然后同时选中&lt;code&gt;track_points&lt;/code&gt;和 &lt;code&gt;tracks&lt;/code&gt;这两项，然后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后要添加地图，对这种情况来说，暗一点的背景地图视觉效果比较好。在菜单栏中找到&lt;strong&gt;Web → QuickMapServices → CartoDB → Dark Matter&lt;/strong&gt;，点击后就在画布上添加了地图了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击 &lt;code&gt;sample_gps_track points&lt;/code&gt; 图层旁边的小方块，去掉勾选，在画布中就看不到这些点了。选中&lt;code&gt;sample_gps_track tracks&lt;/code&gt; 图层，然后点击 &lt;em&gt;Open the Layer Styling Panel&lt;/em&gt;。将颜色&lt;em&gt;Color&lt;/em&gt; 改成蓝色&lt;code&gt;Blue&lt;/code&gt; ，然后设置线宽度&lt;em&gt;Width&lt;/em&gt; 为&lt;code&gt;0.5&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;再选中 &lt;code&gt;sample_gps_track points&lt;/code&gt; 图层使之可见。在&lt;em&gt;Layer Styling Panel&lt;/em&gt;中，选择简单符号&lt;em&gt;Simple marker&lt;/em&gt; 。把点的大小&lt;em&gt;Size&lt;/em&gt; 设为&lt;code&gt;1&lt;/code&gt; 。选择一个浅蓝色作为填充色&lt;em&gt;Fill color&lt;/em&gt;，然手设置轮廓颜色&lt;em&gt;Stroke color&lt;/em&gt;为透明&lt;code&gt;Transparent Stroke&lt;/code&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们希望点动起来，所以要给他加一个辉光效果（glow effect）。右键&lt;code&gt;gps_points&lt;/code&gt;图层，然后选择复制图层&lt;em&gt;Duplicate Layer&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在图层面板&lt;em&gt;Layers&lt;/em&gt;中将复制出来的图层拖动到图层栈的最顶层。在复制的&lt;code&gt;sample_gps_track points_copy&lt;/code&gt; 的&lt;em&gt;Layer Styling Panel&lt;/em&gt;，选择一种明亮色彩作为&lt;em&gt;Color&lt;/em&gt;，然后增加尺寸到 &lt;code&gt;1.5&lt;/code&gt;，选中&lt;em&gt;Draw Effects&lt;/em&gt; ，然后点击旁边小星星样子的 &lt;em&gt;Effects&lt;/em&gt; 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后出现&lt;em&gt;Effects Properties&lt;/em&gt; 面板，选中 &lt;em&gt;Outer Glow&lt;/em&gt;，设置&lt;em&gt;Spread&lt;/em&gt; 和&lt;em&gt;Blue radius&lt;/em&gt;都为 &lt;code&gt;2.0&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在就可以让点动起来了。右键&lt;code&gt;sample_gps_track points_copy&lt;/code&gt;图层后选中属性&lt;em&gt;Properties&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps9.png"&gt;&lt;/p&gt;
&lt;p&gt;10.切换到&lt;em&gt;Temportal&lt;/em&gt; 标签，勾选上&lt;em&gt;Temportal&lt;/em&gt; 小方块。然后将设置&lt;em&gt;Configuration&lt;/em&gt;调整为&lt;code&gt;Single Field with Date/Time&lt;/code&gt;。设置&lt;em&gt;Field&lt;/em&gt;为时间&lt;code&gt;time&lt;/code&gt; ，然后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在你会发现刚刚修改的图层旁边出现了一个小时钟图标，这就表示这个图层可以通过&lt;em&gt;Temporal Controller&lt;/em&gt;来控制了。接下来，右键&lt;code&gt;sample_gps_track points&lt;/code&gt;图层点击&lt;em&gt;Properties&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重复上一次的设置操作。不过这回将设置&lt;em&gt;Configuration&lt;/em&gt;调整为&lt;em&gt;Accumulate features over time&lt;/em&gt;。这样设置是要让已经过去的时间点依然在图层上能显示出来。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在主界面的&lt;em&gt;Map Navigation Toolbar&lt;/em&gt;中找到&lt;em&gt;Temporal Controller Panel&lt;/em&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps13.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击之后， &lt;em&gt;Temporal Controller&lt;/em&gt; 面板就会出现在画布地图顶端了。点击像播放按钮一样的&lt;em&gt;Animated temportal navigation&lt;/em&gt; 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps14.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来，点击刷新形状的&lt;em&gt;Set to Full Range&lt;/em&gt;按钮来自动加载起止时间。将步长 &lt;em&gt;Step&lt;/em&gt; 设置为 &lt;code&gt;1&lt;/code&gt;，然后单位选择成秒 &lt;em&gt;seconds&lt;/em&gt;，点击右上角齿轮图标&lt;em&gt;Temporal Settings&lt;/em&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps15.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将帧率 &lt;em&gt;Frame rate&lt;/em&gt; 设置为 &lt;code&gt;10&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps16.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置完后返回刚刚的界面，选中循环&lt;em&gt;Loop&lt;/em&gt;，然后点击播放按钮 &lt;em&gt;Play&lt;/em&gt; 。你就能看到画布上的地图现实旅行过程了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps17.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将每个点所对应的时间显示在地图上应该挺有用，到菜单栏中找到&lt;strong&gt;View → Decorations → Title Label…&lt;/strong&gt;来设置。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps18.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在标题备注设置&lt;em&gt;Title Label Decoration&lt;/em&gt;中，点击插入表达式按钮 &lt;em&gt;Insert an Expression&lt;/em&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps19.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;地图的当前时间存储在&lt;code&gt;@map_start_time&lt;/code&gt;这个变量中，可以使用&lt;code&gt;format_date()&lt;/code&gt;函数将其转换成更可读的时间戳。但要注意 GPS系统的时间使用的是世界时(universal time，UTC)，所以要用&lt;code&gt;to_interval()&lt;/code&gt; 函数将其转换到 UTC+8:00 才对应了北京地区的时区，输入下面的表达式：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;format_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;@map_start_time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to_interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;8 hours&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yyyy-MM-dd hh:mm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps20.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击字体选项&lt;em&gt;Font&lt;/em&gt; ，把字号调整到 &lt;code&gt;24&lt;/code&gt;，设置背景色&lt;em&gt;Background bar color&lt;/em&gt; 为白色&lt;code&gt;White&lt;/code&gt;，点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps21.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在你再播放动画，时间戳就会随着动画中对应点的行进更新了。点击导出动画&lt;em&gt;Export Animation&lt;/em&gt; 按钮可以将动画逐帧保存。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps22.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在弹出的&lt;em&gt;Export Map Animation&lt;/em&gt; 对话框中，选择输出目录&lt;em&gt;Output directory&lt;/em&gt;。这个文静可能有超过500秒的长度，所以可以降低帧数,将步长&lt;em&gt;Step&lt;/em&gt; 设置为&lt;code&gt;5&lt;/code&gt;。然后点击保存&lt;em&gt;Save&lt;/em&gt; ，QGIS就会在你选的文件夹中输出一系列图片了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps23.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有了多张的逐帧图片后，就可以使用一些类似 &lt;a href="https://ezgif.com/"&gt;ezgif.com&lt;/a&gt; 的工具来创建GIF动图了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps24.png"&gt;&lt;/p&gt;
&lt;h2&gt;多边形&lt;/h2&gt;
&lt;p&gt;区域就用多边形来建模。一般用来表示行政区划、建筑物、地块等等。多边形在几何上就是用一系列的坐标来表示的。由于形状可能会非常复杂，多边形要有更加繁琐的几何解释，所以很少使用简单的CSV文件格式。GeoJSON和 ShapeFiles 是存储多边形数据集的常用文件格式。&lt;/p&gt;
&lt;h3&gt;练习：人口普查数据可视化&lt;/h3&gt;
&lt;p&gt;人口普查数据是一个国家二级数据的一个主要来源。很多空间分析都需要人口普查数据中的详细人口学信息。&lt;/p&gt;
&lt;p&gt;Census data is usually published as tables by aggregating the raw numbers to an administrative region - typically a &lt;em&gt;census block&lt;/em&gt;. To map these tables, one needs to know the &lt;em&gt;geometry&lt;/em&gt; of these regions - which are supplied separately as boundary files. Both of these can be joined to create a polygon layer that can be visualized and mapped. See on how this process is carried out in QGIS.&lt;/p&gt;
&lt;p&gt;人口普查数据一般都是按照行政区发布成一个个表格，表格里是对原始数据的汇总，这样一个行政区就成了一个人口区&lt;em&gt;census block&lt;/em&gt;。要将这样的表格可视化成地图，就需要知道这些区域的几何形态，也就是边界文件。人口数据和行政区划结合到一起就可以制作出一个多边形图层，这个图层就能放到地图上进行可视化了。这个过程在QGIS中的操作可以参考&lt;a href="https://www.qgistutorials.com/en/docs/3/performing_table_joins.html"&gt;这个教程&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;这个练习使用的是&lt;a href="https://sedac.ciesin.columbia.edu/data/set/india-india-village-level-geospatial-socio-econ-1991-2001"&gt;India Village-Level Geospatial Socio-Economic Data Set&lt;/a&gt; 这一数据集，由美国航天局社会经济数据和应用中心（NASA Socioeconomic Data and Applications Center，SEDAC）出版公布。此数据集中结合了村/镇一级的边界与印度人口普查的初级人口普查摘要（PCA）和村庄目录（VD）数据系列，使用 ShapeFiles 格式发布。&lt;/p&gt;
&lt;p&gt;这个练习中使用的是印度Karnataka州的ShapeFile数据，将Gulbarga地区的识字率投在地图上。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;code&gt;india-village-census-2001-KA.shp&lt;/code&gt; 文件拖动到QGIS画布上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这样在图层面板&lt;em&gt;Layers&lt;/em&gt;中就加入了新图层&lt;code&gt;india-village-census-2001-KA&lt;/code&gt;。使用&lt;em&gt;Identify&lt;/em&gt;工具来点击任意一个多边形来查看属性值。每一列的定义都在数据的附加文档中有解释。我们要找的是识字率，对应的后缀&lt;code&gt;_LIT&lt;/code&gt; 就很有用。&lt;code&gt;P_LIT&lt;/code&gt; 这列表示的是识字人口，而&lt;code&gt;TOT_P&lt;/code&gt;表示的是总人口&lt;em&gt;Total Population&lt;/em&gt;，借助这两样我们接下来就要计算识字率。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来要从这个图层的众多多边形中选中属于&lt;em&gt;Gulbarga&lt;/em&gt; 地区的子集。家在&lt;code&gt;gulbarga_district.shp&lt;/code&gt; 。数据中 &lt;code&gt;DT_CEN_CD&lt;/code&gt; 这一列包含的就是对应区域的ID。可以用这个 ID来过滤多边形区域，&lt;em&gt;Gulbarga&lt;/em&gt; 地区的这个ID是4。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在图层&lt;em&gt;Layers&lt;/em&gt;面板中，拖拽 &lt;code&gt;gulbarga_district&lt;/code&gt; 图层到 &lt;code&gt;india-village-census-2001-KA&lt;/code&gt; 图层下面。右键 &lt;code&gt;india-village-census-2001-KA&lt;/code&gt;图层然后选中&lt;em&gt;Filter&lt;/em&gt;进行筛选。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入表达式&lt;code&gt;DISTRICT = 4&lt;/code&gt; 来选择&lt;em&gt;Gulbarga&lt;/em&gt; 地区对应的部分，点击 &lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这时候在&lt;code&gt;india-village-census-2001-KA&lt;/code&gt; 图层旁边就能看到一个小漏斗图标，表示有一个筛选被施加在该图层上。同时地图画布上也会更新，只显示所筛选区域的多边形。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来我们要创建一个热力图&lt;em&gt;thematic&lt;/em&gt; 来展示该区域的识字率。这种场景下创建热力图（thematic (choropleth) map），需要对要投图的值进行标准化（normalize）。常见的错误是在这种地图上使用总数而非比率。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;点击&lt;em&gt;Open the Layer Styling Panel&lt;/em&gt;，选中&lt;em&gt;Graduated&lt;/em&gt; 着色器。在&lt;em&gt;Value&lt;/em&gt;列中点击表达式按钮 &lt;em&gt;Expression&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入下面的表达式，由于我们要投图的是识字率，就可以通过识字人口除以总人口来实现标准化。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;100&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;P_LIT&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TOT_P&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中一个配色方案和分类模式&lt;em&gt;Mode&lt;/em&gt;，然后点击分类按钮&lt;em&gt;Classify&lt;/em&gt;。这里可以选择下拉Color ramp然后选中&lt;em&gt;Invert color ramp&lt;/em&gt; 使得高值深色低值浅色。点击&lt;em&gt;Apply&lt;/em&gt;应用后，就能看到多边形已经根据识字率着色了。这样就很明显能看出各地区的识字率差异。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;将数据分类的方案有很多种，具体可以参考&lt;a href="https://gisgeography.com/choropleth-maps-data-classification/"&gt;这篇文章&lt;/a&gt; ，文中对各种分类模式的优劣进行了点评。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不过，如果你放大，就会发现多边形图层中间有空缺的地方。这是因为 you的城市没有对应的数据表格，因此就被排除在图层之外了。有这样的孔洞看着不太好，可以设计一种办法来插值推测这些缺少数据的值。选中 &lt;code&gt;gulbarga_district&lt;/code&gt; 图层，将 &lt;em&gt;Symbol layer type&lt;/em&gt;设置为 &lt;code&gt;Line pattern fill&lt;/code&gt;，其他参数随便设置就好。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后你会发现这里面没有交叉的填充样式。这很好办，只要用两个相互垂直的线条填充就可以实现了。在刚才的&lt;em&gt;Layer Styling Panel&lt;/em&gt;标签页中点击 &lt;em&gt;Duplicate the current layer&lt;/em&gt; 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在新添加的线条填充上设置旋转角度&lt;em&gt;Rotation&lt;/em&gt; 值为&lt;code&gt;-45.00&lt;/code&gt; 或者&lt;code&gt;135.00&lt;/code&gt;，然后就会发现图中空白的位置已经被十字交叉填充了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在你就有了一个对该区域的识字率的可视化地图了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census13.png"&gt;&lt;/p&gt;
&lt;h2&gt;栅格数据（Raster）-照片（Photos）&lt;/h2&gt;
&lt;p&gt;风筝、热气球、飞机、直升机以及无人机等等空中设备的传感器获取的图像，是绘制地图的重要信息来源。这些图像通常都是位图（basemap），为其他空间数据提供了基础。从这些位图中也可以提取特征信息，再建立模型成为矢量数据。&lt;/p&gt;
&lt;p&gt;最常用的图像格式是 GeoTiff。一个 GeoTiff 文件包含了附加的元数据（metadata），允许用户将像素的行列位置与现实世界的经纬度位置进行对应。常规的照片也可以转换成这样带有空间感知的山歌数据，这种过程就叫做&lt;a href="https://en.wikipedia.org/wiki/Georeferencing"&gt;地理配准 GeoReferencing&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;练习：查看无人机图像&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://openaerialmap.org/"&gt;OpenAerialMap&lt;/a&gt; 是一个提供无人机图像的分享和下载服务的开放网站。本次练习使用的是 WeRobotics 提供的加德满都大学操场（Kathmandu University Grounds）的照片。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;code&gt;kathmandu_drone_imagery.tif&lt;/code&gt; 文件拖动到 QGIS 地图画布中，使用缩放和平移来查看这张图。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/drone1.png"&gt; &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在图像右下角，会发现坐标参考系（CRS）是 EPSG:32645，表示的是UTM分区45N。选中&lt;em&gt;Identify&lt;/em&gt; 工具然后在图片中四处点击。你会发现这个图像包含红绿蓝三色通道。坐标系是投影坐标（projected coordinates0而非地理坐标（geographic coordinates）。也就是公里网格模式，横轴&lt;em&gt;X (Easting)&lt;/em&gt;向东，纵轴&lt;em&gt;Y (Northing)&lt;/em&gt;向北。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/drone2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这张图经过了地理坐标配准，所以可以配合其他空间图层一起查看。菜单栏中选中 &lt;strong&gt;Web → QuickMapServices → OSM → OSM Standard&lt;/strong&gt;，就将叠瓦地图切片添加到图层面板&lt;em&gt;Layers&lt;/em&gt; ，你就能发现这两者之间位置是匹配的，因为原图已经进行过对准。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/drone3.png"&gt;&lt;/p&gt;
&lt;h2&gt;栅格数据（Raster）-卫星图像（Satellite Images）&lt;/h2&gt;
&lt;p&gt;地球外面有几百颗观测卫星在持续捕获地球表面的图像。全球很多航空机构都将这些数据公开分享了出来。这些数据集对科学家、研究人员、政府和商业机构等等来说都是无比珍贵的。&lt;/p&gt;
&lt;p&gt;和常规照片不同，卫星图像往往包含很多的波段信息，而常规照片往往只有红绿蓝三通道的信息。卫星图像的信息丰富就为利用机器学习模型来辨别不同物体提供了便利。例如，人工草坪和真正的草坪可能看着都是绿色的，但二者对红外光的反射差距非常显著。所以使用多光谱（multi-spectral）图像所提供的附加信息就能轻松分别出来。&lt;/p&gt;
&lt;h3&gt;练习：观看和使用哨兵2（Sentinel-2）卫星影像并建立拼接&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sentinel.esa.int/web/sentinel/missions/sentinel-2"&gt;哨兵2 Sentinel-2&lt;/a&gt; 是欧洲航天局（European Space Agency， ESA）发射的两颗卫星。所提供图像的像素分辨率是 10米。这个分辨率不如无人机和航拍的图像分辨率，但在城市和地区层次的分析上还是足够好了。更重要的是，这个系列的数据是用12个不同的波段拍摄的，这对于科学目的但应用来说非常重要。对每个地理位置，这套数据每隔5天采集一次，因此可以对全球进行连续观测。而且欧洲航天局将所有相关数据都公开了。&lt;/p&gt;
&lt;p&gt;此次练习中加载的是2020年2月18日班加罗尔（Bangalore）的数据。&lt;code&gt;sentinel-2&lt;/code&gt;文件夹下面有四个JPEG2000格式的文件，分别是红（B4）、绿（B3）、蓝（B2）和近红外（B8）四个波段。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将4个图像文件拖拽到QGIS地图画布上。放大到任意区域，在&lt;em&gt;Attributes Toolbar&lt;/em&gt;中选择&lt;em&gt;Identify&lt;/em&gt; 工具，然后点击图像。在&lt;em&gt;Identify Results&lt;/em&gt; 窗口中，设置&lt;em&gt;View&lt;/em&gt;为&lt;code&gt;Table&lt;/code&gt;，然后对比同一对象在不同波段下的反射率差别。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来可以将多个波段结合起来成为一个图像然后一起来进行可视化。这就叫「彩色合成 &lt;em&gt;Color Composites&lt;/em&gt;」。要将多个图像合并到一处，找到&lt;strong&gt;Processing → Toolbox&lt;/strong&gt;然后选中&lt;strong&gt;GDAL → Raster miscellaneous → Build virtual raster&lt;/strong&gt;。双击启动拼接工具。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中全部的4个图层作为输入层&lt;em&gt;Input layers&lt;/em&gt; ，然后选中 &lt;em&gt;Place each input file into a separate band&lt;/em&gt;（将每个输入文件作为单独波段）。接下来点击运行&lt;em&gt;Run&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这样，在图层&lt;em&gt;Layers&lt;/em&gt;中，就出现了拼合出来的新图层 &lt;code&gt;Virtual&lt;/code&gt; 。这一图层包含有四个不同波段，要注意其中的波段排列顺序是字母顺序的，所以获得的图片当中的四个通道（Band）与原图的对应关系如下所示：&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;strong&gt;Virtual Raster Band&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;Image&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Band 1&lt;/td&gt;
&lt;td align="left"&gt;B02 (Blue)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Band 2&lt;/td&gt;
&lt;td align="left"&gt;B03 (Green)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Band 3&lt;/td&gt;
&lt;td align="left"&gt;B04 (Red)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Band 4&lt;/td&gt;
&lt;td align="left"&gt;B08 (NIR)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;首先我们进行「真彩色合成&lt;em&gt;RGB Color Composite&lt;/em&gt;」。这也常被称作「自然彩色合成&lt;em&gt;Natural Color Composite&lt;/em&gt;」，因为这种图像和人在肉眼观看的效果是一样的。设置&lt;code&gt;Band 3&lt;/code&gt;、 &lt;code&gt;Band 2&lt;/code&gt; 、 &lt;code&gt;Band 1&lt;/code&gt; 作为对应的 &lt;em&gt;Red&lt;/em&gt;、&lt;em&gt;Green&lt;/em&gt; 、&lt;em&gt;Blue&lt;/em&gt; 三个通道。然后将&lt;em&gt;Min/Max Value Settings&lt;/em&gt;设置为&lt;code&gt;Cumulative count cut&lt;/code&gt;。然后就会发现画布上的图像呈现出自然的色彩。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来要试试的是另一种可视化方案，也就是「假彩色合成&lt;em&gt;False Color Composite&lt;/em&gt;」。这里我们创建一个近红外、红、绿的假彩色合成（&lt;em&gt;NRG Color Composite&lt;/em&gt; ）。也就是将近红外波段设置为R通道，红光波段设置为G通道，绿光波段设置为B通道。这种合成方式强调了红光下的植被，能够更容易地进行植被解译。注意，水体和植被在自然彩色合成下几乎是一样的颜色，而在NRG假彩色合成下就很好区分了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite5.png"&gt;&lt;/p&gt;
&lt;h2&gt;点云（Point Clouds）&lt;/h2&gt;
&lt;p&gt;现代的地图绘制技术包括使用激光雷达传感器（LiDAR sensor）的各种航拍手段。LiDAR是“Light Detection and Ranging”的缩写。这种传感器使用激光脉冲来测量物体距离地面的距离。对每个发出的脉冲，系统都计算对象的X、Y、Z坐标。这个数据对空间数据来说并不新奇，但在一块小区域内使用这样的方法可以获得上百万的点，常规的观看和处理工具就不适用了。这样的点云（&lt;em&gt;Point Cloud&lt;/em&gt;）一般使用的是LAS或者LAZ的文件格式进行存储的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Credit: Cargyrak, Wikipedia" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/lidar.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Credit: Cargyrak, Wikipedia&lt;/p&gt;
&lt;h3&gt;练习：观看航拍的点云&lt;/h3&gt;
&lt;p&gt;英国环境食品与农村事务部（UK’s Department of Environment Food &amp;amp; Rural Affairs (DEFRA) ）提供了全国范围的LiDAR数据和产品，可以从&lt;a href="https://environment.data.gov.uk/"&gt;Defra 数据服务平台&lt;/a&gt; 来获得。本次练习使用LAZ格式的牛津大学点云数据集。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/verma/plasio"&gt;Plasio&lt;/a&gt; 是一个基于浏览器的 LAS/LAZ 格式点云查看器，访问&lt;a href="https://plas.io/"&gt;plas.io&lt;/a&gt;，点击&lt;em&gt;Browse&lt;/em&gt; 然后定位到&lt;code&gt;SP5008_P_10967_20161130_20161130.laz&lt;/code&gt;文件，点击&lt;em&gt;Open&lt;/em&gt;打开。要注意这么小的区域有超过三百五十万个数据点。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pointcloud1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据加载后，在右边的面板中滚动，找到&lt;em&gt;Intensity Source&lt;/em&gt; 部分，下拉选项，选中&lt;code&gt;Heightmap Grayscale&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pointcloud2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用鼠标左键和滚轮来缩放与平移视图，探索一下数据集吧。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pointcloud3.png"&gt;&lt;/p&gt;
&lt;h2&gt;栅格数据（Raster） - 高程数据（Elevation Data）&lt;/h2&gt;
&lt;p&gt;栅格数据很适合对连续对象进行建模，比如高程。栅格中的每个像素的值就是该点的高程。这是一种对地标建模的简单高效的方法。这种栅格数据也就是数字高程模型（Digital Elevation Model，DEM）。&lt;/p&gt;
&lt;p&gt;具体来说，数字高程模型还可以分为两个基本类别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数字地表模型（Digital Surface Model，DSM）：表示地球真实表面，包括植被覆盖和建筑物等等。&lt;/li&gt;
&lt;li&gt;数字地形模型（Digital Terrain Model，DTM）：表示裸地表和自然地形。DTM一般是基于DSM实用算法或人工处理而得到。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;练习：查看和对比 DSM 与 DTM&lt;/h3&gt;
&lt;p&gt;英国环境食品与农村事务部（UK’s Department of Environment Food &amp;amp; Rural Affairs (DEFRA) ）提供了全国范围的高程数据产品，可以从&lt;a href="https://environment.data.gov.uk/"&gt;Defra 数据服务平台&lt;/a&gt; 来获得。本次练习使用ASC格式的牛津大学高程数据：&lt;code&gt;dsm_F0195499_20161130_20161130_mm_units.asc&lt;/code&gt; 和&lt;code&gt;dtm_F0195499_20161130_20161130_mm_units.asc&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.asc&lt;/code&gt;文件是一种基于文本的 ASCII 编码的栅格文件格式。这种文件的数据格式很简单，头部介绍栅格信息，像素值就是对应的行列值。如果你使用文字编辑器打开，可能就像下面的样子。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cols          2000
nrows         2000
xllcorner     450000
yllcorner     208000
cellsize      1
NODATA_value  -9999
-9999 -9999 -9999 -9999 -9999 -9999 ...
...
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;头文件提供的信息中包含有左下角（11）的X、Y坐标。知道这个位置的坐标对，以及图像尺寸和坐标参考系（Coordinate Reference System，CRS），可以对整个图像进行地理配准了。关于坐标参考系的相关信息包含在元数据&lt;a href="https://ckan.publishing.service.gov.uk/harvest/object/2533c88a-ccf2-41d7-8ac7-704c46bfd177/html"&gt;metadata&lt;/a&gt; ，设置为&lt;em&gt;EPSG:27700 British National Grid&lt;/em&gt;。接下来就有足够的信息来查看这些栅格数据了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 QGIS，在加载数据之前，我们要先设置项目坐标参考系与栅格数据的坐标参考系一致。在菜单栏中找到&lt;strong&gt;Project → Properties&lt;/strong&gt;进行设置。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;切换到&lt;em&gt;CRS&lt;/em&gt; 标签页，然后搜索&lt;code&gt;EPSG:27700&lt;/code&gt;，选中后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;code&gt;dsm_F0195499_20161130_20161130_mm_units.asc&lt;/code&gt; 文件拖动到试图中。选中&lt;em&gt;Identify&lt;/em&gt; 然后在图像上点击任意位置。就会看到对应的&lt;em&gt;Band 1&lt;/em&gt; 就是对应像素位置的高程，单位是千米.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击 &lt;em&gt;Open the Layer Styling Panel&lt;/em&gt;，选中单波段假彩色 &lt;code&gt;Singleband pseudocolor&lt;/code&gt; 着色器。扩展到最小最大值设置&lt;em&gt;Min / Max Value Settings&lt;/em&gt;部分，选择 &lt;em&gt;Cumulative count cut&lt;/em&gt;。 Select a color ramp of your choice. Once the style is applied you will be able to see the building outlines, trees, riverbed etc clearly.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来将&lt;code&gt;dtm_F0195499_20161130_20161130_mm_units.asc&lt;/code&gt; 也拖到视图里。要对这两者进行对比，可以考虑使用同样的参数进行可视化。好在QGIS提供了一种简单办法复用图层设置，右键要复制设置的源图层&lt;code&gt;dsm_F0195499_20161130_20161130_mm_units&lt;/code&gt; 后选中 &lt;strong&gt;Styles → Copy Style&lt;/strong&gt;即可复制已经做好的图层设置。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后选中目标图层 &lt;code&gt;dtm_F0195499_20161130_20161130_mm_units&lt;/code&gt;，右键，然后&lt;strong&gt;Styles → Paste Style&lt;/strong&gt;，就可以把刚刚复制的图层粘贴上去了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;来回切换 DSM 和 DTM 的图层顺序就可以对比二者来。你会发现 DTM只包含了地表的高程，没有任何其他的自然或者人造物。&lt;a href="https://courses.spatialthoughts.com/images/spatial_data_viz/elevation7.gif"&gt;View Animated GIF ↗&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation7.png"&gt;&lt;/p&gt;
&lt;h1&gt;分析&lt;/h1&gt;
&lt;h2&gt;练习：Uber交通分析&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://movement.uber.com/"&gt;Uber&lt;/a&gt;提供了超过一百亿次打车出行的匿名数据，旨在帮助全球的城市规划。这些数据都已经免费公开课下载。该数据集中包含了旅行时间和每段路上的速度等信息。&lt;/p&gt;
&lt;p&gt;本次练习使用的是班加罗尔（Bangalore）的 &lt;a href="https://movement.uber.com/explore/bangalore/travel-times/query?lang=hi-IN"&gt;旅行时间数据 Travel Times data&lt;/a&gt;来分析交通模式，发现30分钟车程可达地区。这种地图也叫做&lt;a href="https://en.wikipedia.org/wiki/Isochrone_map"&gt;等时线地图 Isochrone Map&lt;/a&gt; ，可以用于城市规划。&lt;/p&gt;
&lt;p&gt;这份数据有两部分，首先是一个GeoJSON文件&lt;code&gt;bangalore_wards.json&lt;/code&gt;描绘了城市内各区域的边界，另外有一个CSV文件&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate.csv&lt;/code&gt;包含了城市各区域和一天中各时段的旅行时间，日期是2019年的第三季度（789三个月）。&lt;a href="https://d3i4yxtzktqr9n.cloudfront.net/web-movement/76002ded222a46a02ae89f207e91e335.pdf"&gt;一份白皮书&lt;/a&gt;讲述了创建这些数据的方法。&lt;/p&gt;
&lt;p&gt;CSV格式文件的内容如下所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;strong&gt;sourceid&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;dstid&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;hod&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;mean_travel_time&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;…&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;55&lt;/td&gt;
&lt;td align="left"&gt;111&lt;/td&gt;
&lt;td align="left"&gt;8&lt;/td&gt;
&lt;td align="left"&gt;2026.76&lt;/td&gt;
&lt;td align="left"&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;22&lt;/td&gt;
&lt;td align="left"&gt;25&lt;/td&gt;
&lt;td align="left"&gt;13&lt;/td&gt;
&lt;td align="left"&gt;770.07&lt;/td&gt;
&lt;td align="left"&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;…&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;…&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;sourceid&lt;/strong&gt; 和 &lt;strong&gt;dstid&lt;/strong&gt; 指的是出发地和目的地的区块ID。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hod&lt;/strong&gt;: hour-of-day，一天中的时间，从0-23。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mean_travel_time&lt;/strong&gt;: 平均旅行时间，秒为单位，从所有旅行中提取。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;班加罗尔城区中有 198 个分区。CSV文件中包含任意两区之间的成对的旅行时间。总共的记录时间会有198 x 198 x 24 = 940896条。但由于在特定时间内不是所有的区都有充足的行程发生，就存在对应的空白。因此实际上这个数据是818263列。这数据规模还是挺大的，需要用一些分析方法来提取其中的正确数据集。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中&lt;code&gt;bangalore_wards.json&lt;/code&gt;拖拽到QGIS的地图画布。然后夹在一个街景地图作为地图层，在菜单栏找到&lt;strong&gt;Web → QuickMapServices → OSM → OSM Standard&lt;/strong&gt;，加载之后，点击 &lt;em&gt;Open Data Source Manager&lt;/em&gt; 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;切换到&lt;em&gt;Delimited Text&lt;/em&gt; 按钮，找到&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate.csv&lt;/code&gt; 文件并选中。由于CSV文件只是表格数据，选择&lt;em&gt;No geometry (attribute only table)&lt;/em&gt; 选项然后点击添加&lt;em&gt;Add&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CSV倒入后，图层界面&lt;em&gt;Layers&lt;/em&gt; 下面就有了 &lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt; 这一项，右键然后选中&lt;em&gt;Show Feature Count&lt;/em&gt;。全部的列数就出现在旁边了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于本次练习，要计算全部从&lt;a href="https://g.page/spatialthoughts?share"&gt;Spatial Thoughts office&lt;/a&gt;出发30分钟内车程能到达的位置。在地图上找到对应区域，可以选中&lt;em&gt;Identify&lt;/em&gt; 按钮来选择&lt;code&gt;bangalore_wards&lt;/code&gt;图层并点击，然后该地的位置结果就会出现，位于&lt;em&gt;JP Nagar&lt;/em&gt; 区，&lt;em&gt;MOVEMENT_ID&lt;/em&gt; 为&lt;strong&gt;193&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来可以筛选将这个区域作为目的地的行程记录。还可以限制分析范围在早高峰上午9-10点钟这个时间段内。右键&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt; 层然后选中筛选&lt;em&gt;Filter&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入下面的筛选表达式，然后点击 &lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;dstid&amp;quot; = 193 AND &amp;quot;hod&amp;quot; = 9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在返回到QGIS的主窗口，你会发现数据项目数已经缩减到了&lt;em&gt;197&lt;/em&gt;。这是因为城市中一共只有198个区，那以&lt;code&gt;193&lt;/code&gt;号位置为目的地的自然只有其他197个，也就是1个目的地，197个出发地。现在到&lt;em&gt;Attributes&lt;/em&gt;工具栏中使用&lt;em&gt;Open Attribute Table&lt;/em&gt; 打开各图层的属性表格。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在我们在图层 &lt;code&gt;bangalore_wards&lt;/code&gt;中有各区范围，在层&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt;中有表格信息。现在就可以使用一个公用属性（common attribute）来将属性信息连接起来。此处的 &lt;strong&gt;MOVEMENT_ID&lt;/strong&gt; 列来自 &lt;code&gt;bangalore_wards&lt;/code&gt; 图层，而 &lt;strong&gt;sourceid&lt;/strong&gt; 列来自 &lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt; ，这两个都是分区id，可以连接起来。这个操作就叫&lt;em&gt;Table Join&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在对两个图层进行联合（join）之前，要保证两列中的数值严格一直。比如看上去一样，可能有不同的数据类型。因为GeoJSON格式不允许指定属性的数值类型，所有的值都是存储成字符串&lt;em&gt;String&lt;/em&gt;，也就是文本。但当导入CSV到QGIS的时候，QGIS会智能地将这些列的类型根据值来进行解析，因此就会给&lt;strong&gt;sourceid&lt;/strong&gt;这列解析成整数&lt;em&gt;Integer&lt;/em&gt;。所以我们需要将GeoJSON里的列数据也转换到整数。在菜单栏中找到&lt;strong&gt;Processing → Toolbox&lt;/strong&gt;，搜索&lt;em&gt;Vector Table → Field Calculator&lt;/em&gt;算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择&lt;code&gt;bangalore_wards&lt;/code&gt; 作为输入层&lt;em&gt;Input Layer&lt;/em&gt;，将要合并的&lt;code&gt;Field name&lt;/code&gt;值为&lt;code&gt;joinfield&lt;/code&gt; ，然后选择&lt;em&gt;Result field type&lt;/em&gt; 作为整数&lt;code&gt;Integer&lt;/code&gt;，输入 &lt;code&gt;"MOVEMENT_ID"&lt;/code&gt;作为表达式。点击&lt;em&gt;…&lt;/em&gt; 按钮，就在&lt;em&gt;Calculated&lt;/em&gt;旁，然后选中&lt;em&gt;Save to File..&lt;/em&gt;，输入文件名，将文件保存成&lt;code&gt;bangalore_wards_fixed.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;，关闭&lt;code&gt;Field Calculator&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;经过上面的步骤，在图层&lt;em&gt;Layers&lt;/em&gt; 中就多了&lt;code&gt;bangalore_wards_fixed&lt;/code&gt; 这一个新图层了。现在就可以进行联接（join）操作了。在&lt;code&gt;Processing Toolbox&lt;/code&gt;里面搜索并找到&lt;em&gt;Join attributes by field value&lt;/em&gt;算法 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择刚刚生成的&lt;code&gt;bangalore_wards_fixed&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt; ，然后设&lt;em&gt;Table field&lt;/em&gt;为&lt;code&gt;joinfield&lt;/code&gt;。选择&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt;作为第二输入层&lt;em&gt;Input layer 2&lt;/em&gt;，并选择&lt;em&gt;Table field 2&lt;/em&gt;作为&lt;code&gt;sourceid&lt;/code&gt; 。将&lt;em&gt;Joined layer&lt;/em&gt; 命名为&lt;code&gt;uber_travel_times.gpkg&lt;/code&gt;然后点击&lt;em&gt;Run&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在一个新的 &lt;code&gt;uber_travel_times&lt;/code&gt;图层就出现在图层面板&lt;em&gt;Layers&lt;/em&gt;中了。接下来对其进行可视化的调整。点击&lt;em&gt;Open the Layer Styling Panel&lt;/em&gt;，选择&lt;code&gt;Graduated&lt;/code&gt;着色器，设置&lt;em&gt;Value&lt;/em&gt;为&lt;code&gt;mean_travel_time&lt;/code&gt;。选择一个配色方案然后点击&lt;em&gt;Classify&lt;/em&gt;进行分类。就能看到随着距离目的地越远颜色就越深。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber13.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;咱们想要提取和分析的是小于三十分钟的，所以还需要进一步处理一下。切换到&lt;em&gt;Single symbol&lt;/em&gt; 着色器，右键&lt;code&gt;uber_travel_times&lt;/code&gt; 图层选择 &lt;em&gt;Filter&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber14.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入下面的表达式，选择所有平均旅程时间（mean travel time）小于等于1800秒也就是30分钟的(30 minutes) 。另外还要包含目的区域本身。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;mean_travel_time&amp;quot; &amp;lt;= 1800 OR &amp;quot;MOVEMENT_ID&amp;quot; = 193
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber15.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在这个图层就显示的是我们感兴趣的区域的众多多边形了。接下来咱们将这些多边形合并成一个多边形。在处理工具箱&lt;code&gt;Processing Toolbox&lt;/code&gt;中搜索&lt;em&gt;Dissolve&lt;/em&gt;算法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber16.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择&lt;code&gt;uber_travel_times&lt;/code&gt; 作为输入图层&lt;em&gt;Input layer&lt;/em&gt;。将融合的&lt;em&gt;Dissolved&lt;/em&gt;图层命名为 &lt;code&gt;30min_isochrone.gpkg&lt;/code&gt;，点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber17.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这样得到的新图层&lt;code&gt;30min_isochrone&lt;/code&gt; 就出现在图层面板&lt;em&gt;Layers&lt;/em&gt;中了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber18.png"&gt;&lt;/p&gt;
&lt;h2&gt;练习：分析地铁可及性&lt;/h2&gt;
&lt;p&gt;在规划城市基础设施的时候，尤其是以交通为导向的发展规划（Transit-Oriented Development，TOD），一项指标就是公共交通可及性。 &lt;a href="https://www.livemint.com/news/india/india-s-public-transport-challenge-1568355574941.html"&gt;LiveMint&lt;/a&gt;上面有一篇关于印度公共交通挑战的文章对印度全国的地铁可及性进行了分析。这个练习中也要实现一个类似的分析过程。&lt;/p&gt;
&lt;p&gt;通过这个分析，我们要确定在班加罗尔城中有多少人口生活在地铁站1km范围内。要解决这个问题，需要用到GIS的线条，结合多个离散数据源的相关信息。要进行这次的分析，首先要查询OpenStreetMap数据库来获得班加罗尔的地铁站位置。然后计算1km范围内的缓冲区域，再将其和基于WorldPop的人口网格（population grid）来完成人口分析。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到&lt;code&gt;bangalore.geojson&lt;/code&gt; 文件，拖拽到QGIS的地图画布上。这个多边形表示的就是城市边界。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来查询OpenStreetMap来获得该城市上的铁路车站。到菜单栏中找到 &lt;strong&gt;Vector → QuickOSM → QuickOSM&lt;/strong&gt;。OpenStreetMap 利用一个标签系统（tagging system）来记录物理特征的属性。这种标签和键值对的具体细节可以参考&lt;a href="https://wiki.openstreetmap.org/wiki/Map_Features"&gt;OpenStreetMap wiki&lt;/a&gt;。铁路车站的标签是&lt;code&gt;railway=station&lt;/code&gt;。在键名&lt;em&gt;Key&lt;/em&gt;处设置为&lt;code&gt;railway&lt;/code&gt;，键值&lt;em&gt;Value&lt;/em&gt;设为&lt;code&gt;station&lt;/code&gt;，地理位置过滤选项&lt;em&gt;In&lt;/em&gt;设置为&lt;em&gt;Bangalore&lt;/em&gt; 。扩展&lt;em&gt;Advanced&lt;/em&gt; 区域，只选中 &lt;em&gt;Node&lt;/em&gt; 和&lt;em&gt;Points&lt;/em&gt; 两个勾选框。点击运行查询&lt;em&gt;Run Query&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查询完成后，你就能看到新图层&lt;code&gt;railway_station_Bangalore&lt;/code&gt;已经加载到地图画布上了。这个图层中包含铁路车站和在建设中的车站。接下来就要进行筛选，只保留我们关注的地铁车站。右键该新图层，选择筛选&lt;em&gt;Filter&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;em&gt;Query Builder&lt;/em&gt; 输入下面的表达式，然后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：这里的使用的是&lt;code&gt;IS NOT&lt;/code&gt; ，而不是 &lt;code&gt;!=&lt;/code&gt;。这是因为这些列当中有位置为&lt;strong&gt;NULL&lt;/strong&gt;。而&lt;em&gt;NULL&lt;/em&gt; 并不是一个值，不能和其他值进行等于、不等于这样的比较。而&lt;code&gt;IS NOT&lt;/code&gt;可以适用于所有类型，能够有效验证项目是否匹配，就包括&lt;strong&gt;NULL&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;operator&amp;quot; = &amp;#39;BMRCL&amp;#39; AND 
&amp;quot;disused&amp;quot; IS NOT &amp;#39;yes&amp;#39; AND 
&amp;quot;disused:railway&amp;quot; IS NOT &amp;#39;station&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;已建成但未连接到整个体系的车站是由于中间的车站还在建设。所以在可视化解译中，要再对这部分车站进行清洗。点击&lt;em&gt;Select Features&lt;/em&gt;按钮，选择未连接的地铁站。然后点击&lt;em&gt;Open Attribute Table&lt;/em&gt;图标。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在属性表格中，切换到显示所选特征&lt;em&gt;Show selected Features&lt;/em&gt;。然后直邮要删除的个别特征会显示出来。 然后就会凸显出刚刚选中的。现在点击左上角小铅笔图标进入编辑模式&lt;em&gt;Toggle editing mode&lt;/em&gt; 然后点击小垃圾桶图标删除选中特征&lt;em&gt;Delete selected features&lt;/em&gt;。完成之后，再点击小铅笔图标 &lt;em&gt;Toggle editing mode&lt;/em&gt;，然后再点击&lt;em&gt;Save&lt;/em&gt;保存。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在地图就更新了，只保留了咱们想要的城区地铁站。接下来需要对这些站点应用一个缓冲处理&lt;em&gt;Buffer&lt;/em&gt;来获得距离地铁站1km范围内的区域。但咱们的地图用的是EPSG:4326 WGS84地理投影，用的单位是度分秒。要将单位从度分秒转化到公里网格，就必须将图层重新投影到一个合适的坐标参考系统（coordinate reference system，CRS）。到菜单栏中找到&lt;strong&gt;Processing → Toolbox&lt;/strong&gt;，搜索定位到&lt;strong&gt;Vector general → Reproject layer&lt;/strong&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择 &lt;code&gt;railway_station_Bangalore&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;。点击下图所示的小图标，目标坐标参考系&lt;em&gt;Target CRS&lt;/em&gt;选择&lt;code&gt;EPSG:32643 - WGS 84 UTM Zone 43N&lt;/code&gt;。将重命名的&lt;em&gt;Reprojected&lt;/em&gt;图层命名为&lt;code&gt;metro_stations_reprojected.gpkg&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重新投影的&lt;code&gt;metro_stations_reprojected&lt;/code&gt;图层创建好后，在&lt;strong&gt;Processing Toolbox&lt;/strong&gt;中搜索&lt;strong&gt;Vector geometry → Buffer&lt;/strong&gt;然后双击运行算法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;code&gt;metro_stations_reprojected&lt;/code&gt; 设做输入层&lt;em&gt;Input layer&lt;/em&gt;。设置&lt;em&gt;Distance&lt;/em&gt;为 &lt;code&gt;1 kilometer&lt;/code&gt;。选中&lt;em&gt;Dissolve result&lt;/em&gt; 选项，然后将&lt;em&gt;Buffered&lt;/em&gt; 输出图层命名为&lt;code&gt;metro_stations_buffer.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;来运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在图层中就出现了刚刚得到的距离地铁站范围1km的多边形组成的新图层&lt;code&gt;metro_stations_buffer&lt;/code&gt;了。图层上的一个个圆表示的就是距离地铁站圆心1km范围。地理处理完成了，我们接下来将得到的图层再转换回原来的坐标参考系。在&lt;strong&gt;Processing Toolbox&lt;/strong&gt;中搜索&lt;strong&gt;Vector general → Reproject layer&lt;/strong&gt;算法然后运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择刚刚生成的&lt;code&gt;metro_stations_buffer&lt;/code&gt;图层作为输入图层&lt;em&gt;Input layer&lt;/em&gt;，然后设置&lt;em&gt;Target CRS&lt;/em&gt;为&lt;code&gt;EPSG:4326 -WGS 84&lt;/code&gt;。将新生成的图层命名为 &lt;code&gt;metro_station_buffer_reprojected.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新图层 &lt;code&gt;metro_station_buffer_reprojected&lt;/code&gt;就被添加到画布上了，表示的是距离地铁站1km范围内的地方。之前已经有了&lt;code&gt;bangalore&lt;/code&gt; 图层表示整个城区范围。接下来要给这些图层添加人口数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop13.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到&lt;code&gt;ind_ppp_2000_KA.tif&lt;/code&gt;文件，拖拽到画布上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop14.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择 &lt;code&gt;ind_ppp_2000_KA&lt;/code&gt; 图层，然后使用 &lt;em&gt;Identify&lt;/em&gt;工具查看像素质。这个栅格图像的分辨率大约是100m x 100m，单一通道，每个像素的值是对应大小区域的估计人口。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop15.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将所有落在多边形的区域中的像素加到一起就能获得对应区域的总人口。这个操作也叫区域统计&lt;em&gt;Zonal Statistics&lt;/em&gt;。在&lt;strong&gt;Processing Toolbox&lt;/strong&gt;中搜索&lt;strong&gt;Raster analysis → Zonal statistics&lt;/strong&gt;算法。这个算法是对每个层增加了一个新属性，这个属性存储的是每个层当中包含在多边形中的总人口。双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop16.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择&lt;code&gt;bangalore&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;，将&lt;code&gt;ind_ppp_2000_KA&lt;/code&gt;作为栅格层&lt;em&gt;Raster layer&lt;/em&gt;。输入&lt;code&gt;population_&lt;/code&gt;作为输出列前缀&lt;em&gt;Output column prefix&lt;/em&gt;。我们感兴趣的只是总和&lt;strong&gt;Sum&lt;/strong&gt;，所以点击&lt;em&gt;Statistics to calculate&lt;/em&gt;旁边的&lt;code&gt;...&lt;/code&gt;，然后只选中&lt;code&gt;Sum&lt;/code&gt;。在&lt;em&gt;Zonal Statistics&lt;/em&gt; 中点击&lt;code&gt;...&lt;/code&gt; 然后将生成文件设置保存为 &lt;code&gt;banglore_pop.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop17.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;算法完成后，选择&lt;code&gt;metro_station_buffer_reprojected&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;。然后再&lt;em&gt;Zonal Statistics&lt;/em&gt; 中点击 &lt;code&gt;...&lt;/code&gt;将生成层保存为&lt;code&gt;metro_station_buffer_pop.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop18.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在地图画布上就出现了新生成的两个图层了。点击&lt;code&gt;banglore_pop&lt;/code&gt;然后使用&lt;em&gt;Identify&lt;/em&gt;工具，然后点击多边形。里面的&lt;strong&gt;population_sum&lt;/strong&gt; 就应该是人口了。可以📧然后选择复制属性值&lt;em&gt;Copy Attribute Value&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop19.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;QGIS 有一个内置计算器。点击界面左下角的&lt;em&gt;Locator&lt;/em&gt;窗体然后输入等号&lt;code&gt;=&lt;/code&gt;。将&lt;code&gt;metro_station_buffer_pop&lt;/code&gt;和&lt;code&gt;banglore_pop&lt;/code&gt;的人口总数粘贴进去，算出比值。得到的结果就是班加罗尔城市中住在地铁周围1km范围内的人口比例。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;= 100 * pasted value from from metro_station_buffer_pop / pasted value from banglore_pop 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop20.png"&gt;&lt;/p&gt;
&lt;h2&gt;练习：绿地分布&lt;/h2&gt;
&lt;p&gt;拥挤的城市区域中，公园之类的开放空间很有必要。这些场所不仅能改善环境提供娱乐设施，还对人的心理健康有正面影响。&lt;/p&gt;
&lt;p&gt;本次练习中，我们使用来自Bruhat Bengaluru Mahanagara Palike (BBMP)出版的公园列表，计算城市中每个分区的公园面积。这个数据可以通过 &lt;a href="http://opencity.in"&gt;OpenCity - Urban Data Portal&lt;/a&gt; 获取到PDF格式的文件。本课程原作者将PDF格式数据文件使用&lt;a href="https://www.zamzar.com/convert/pdf-to-xls/"&gt;Zamzar Online file conversion&lt;/a&gt;转换成了表格文件&lt;code&gt;BBMP_Parks.xlsx&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，本练习只考虑每个区域的公园总面积。但实际上公园质量也很重要，对此的相关分析可以参考&lt;a href="https://www.ichangemycity.com/pdf/parks-playgrounds-survey-report.pdf"&gt;Parks and Playgrounds Score of Bengaluru Report&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;code&gt;bangalore_wards.json&lt;/code&gt;文件拖拽到QGIS地图画布上。然后找到&lt;code&gt;BBMP_Parks.xlsx&lt;/code&gt;文件。QGIS也可以直接读取Excel文件。拽到画布上就可以，现在就有&lt;code&gt;bangalore_wards&lt;/code&gt;和&lt;code&gt;BBMP_Parks_Area&lt;/code&gt; 两个图层出现在图层面板&lt;em&gt;Layers&lt;/em&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中 &lt;code&gt;BBMP_Parks_Area&lt;/code&gt; 图层然后点击&lt;em&gt;Open Attribute Table&lt;/em&gt;。可以看到数据有超过900多行，每行都描述了一个公园和对应的面积，单位是平方米。我们不需要提取公园的地理位置坐标，但需要知道归属的区。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来可以按照各个区计算每个区一共有多少个公园。打开&lt;em&gt;Processing Toolbox&lt;/em&gt;然后搜索&lt;strong&gt;Vector analysis → Statistics by categories&lt;/strong&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中&lt;code&gt;BBMP_Parks_Area&lt;/code&gt;图层作为输入向量层&lt;em&gt;Input vector layer&lt;/em&gt;。选中&lt;code&gt;Area&lt;/code&gt;作为&lt;em&gt;Field to calculate statistics on&lt;/em&gt;. 由于要按区分辨，选中&lt;code&gt;Ward&lt;/code&gt;作为&lt;em&gt;Field(s) with categories&lt;/em&gt;。将生成的&lt;em&gt;Statistics by category&lt;/em&gt;层存储为&lt;code&gt;park_area_by_ward.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来每一个区都有一个对应的面积总和&lt;em&gt;sum&lt;/em&gt;，然后可以将其于一个空间图层联接起来。在&lt;code&gt;Processing Toolbox&lt;/code&gt;里面搜索&lt;em&gt;Join attributes by field value&lt;/em&gt;算法。选中&lt;code&gt;bangalore_wards&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;，然后设置&lt;code&gt;WARD_NO&lt;/code&gt;作为&lt;em&gt;Table field&lt;/em&gt;。选择&lt;code&gt;park_area_by_ward&lt;/code&gt;作为第二输入层&lt;em&gt;Input layer 2&lt;/em&gt;，设置&lt;code&gt;Ward&lt;/code&gt;为&lt;em&gt;Table field 2&lt;/em&gt;。这里的&lt;code&gt;park_area_by_ward&lt;/code&gt;包含很多列，但我们要用的只有&lt;em&gt;sum&lt;/em&gt;。所以选中&lt;code&gt;sum&lt;/code&gt;作为&lt;em&gt;Layer 2 fields to copy&lt;/em&gt;。将输出层命名为&lt;code&gt;bangalore_wards_park_area_joined.gpkg&lt;/code&gt;然后点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;可能会有警告提示你不是所有的特征都成功联接。这是因为Excel文件并不能包涵覆盖所有区域的全部数据。这对于咱们的练习分析目的来说没啥影响，不用担心。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新图层&lt;code&gt;bangalore_wards_park_area_joined&lt;/code&gt;就出现在图层面板&lt;em&gt;Layers&lt;/em&gt;了。在完成结果之前，可以将每一列都重命名一下使之更容易理解。在&lt;em&gt;Processing Toolbox&lt;/em&gt;里面搜索找到&lt;strong&gt;Vector table → Refactor fields&lt;/strong&gt; 算法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中不需要的列，然后用&lt;em&gt;Delete field&lt;/em&gt;移除。对于&lt;em&gt;sum&lt;/em&gt;列，输入&lt;code&gt;PARK_AREA&lt;/code&gt;作为名称&lt;em&gt;Field name&lt;/em&gt;。然后将&lt;em&gt;Refactored&lt;/em&gt;输出的文件名设置为&lt;code&gt;bangalore_wards_park_area.gpkg&lt;/code&gt;，点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;得到的新图层&lt;code&gt;bangalore_wards_park_area&lt;/code&gt;也能在图层面板&lt;em&gt;Layers&lt;/em&gt;里看到了。打开一下属性表格查看各分区的公园面积吧。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park8.png"&gt;&lt;/p&gt;
&lt;h2&gt;练习：选择最佳居住区&lt;/h2&gt;
&lt;p&gt;寻找最优区域是空间分析技术的常见实用场景。使用合适的模型，就可以将多种因素一起考虑，然后推断出排列顺序。这里我们使用的是一个真实的场景，要在一个城市中根据多个因素寻找最佳居住场所。&lt;/p&gt;
&lt;p&gt;本次练习所选用的优选因素如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;距离工作地必须在三十分钟车程范围内，办公地点设为&lt;a href="https://g.page/spatialthoughts?share"&gt;Spatial Thoughts office&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;距离地铁站点必须在1km范围内。&lt;/li&gt;
&lt;li&gt;要有公园，无公园的区域不考虑。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前面的练习已经为这次联系准备了数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;30min_isochrone.gpkg&lt;/code&gt; 图层表示的是距离工作地30分钟的区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metro_station_buffer_reprojected.gpkg&lt;/code&gt; 图层表示的是地铁周围1km范围。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bangalore_wards_park_area.gpkg&lt;/code&gt; 表示了每个区的公园面积。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来就把上面这几层都用上，交叉分析出来就可以了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;code&gt;30min_isochrone.gpkg&lt;/code&gt;、 &lt;code&gt;metro_station_buffer_reprojected.gpkg&lt;/code&gt;、&lt;code&gt;bangalore_wards_park_area.gpkg&lt;/code&gt;这三个文件拖拽到QGIS里面，然后在&lt;em&gt;Processing Toolbox&lt;/em&gt;里面搜索&lt;strong&gt;Vector overlay → Intersection&lt;/strong&gt;算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中&lt;code&gt;30min_isochrone&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;，选中&lt;code&gt;metro_station_buffer_reprojected&lt;/code&gt;作为叠覆层&lt;em&gt;Overlay layer&lt;/em&gt;。设置&lt;em&gt;Intersection&lt;/em&gt;交叉生成文件为&lt;code&gt;intersection.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;得到的&lt;code&gt;intersection&lt;/code&gt;图层表示符合地铁站1km和开车通勤时间30分钟内这两个条件。接下来要用第三个条件筛选。在&lt;em&gt;Processing Toolbox&lt;/em&gt;中搜索定位到&lt;strong&gt;Vector analysis → Overlap analysis&lt;/strong&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中&lt;code&gt;bangalore_wards_park_area.gpkg&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;。选中&lt;code&gt;intersection&lt;/code&gt;作为叠覆层&lt;em&gt;Overlay layer&lt;/em&gt;。将输出层&lt;em&gt;Output layer&lt;/em&gt;命名为&lt;code&gt;park_intersection_overlap.gpkg&lt;/code&gt;，然后点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;得到的新图层 &lt;code&gt;park_intersection_overlap&lt;/code&gt; 比原来的多了两列：&lt;code&gt;intersection_area&lt;/code&gt;和&lt;code&gt;intersection_pc&lt;/code&gt;。对每个多边形，现在知道每个区域与我们感兴趣区域的交叉比例。如果假设公园在每个区都是均匀分布，就一使用&lt;code&gt;intersection_pc&lt;/code&gt;这个参数计算公园比例。在&lt;em&gt;Processing Toolbox&lt;/em&gt;中搜索定位到&lt;em&gt;Vector Table → Field Calculator&lt;/em&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输出文件&lt;em&gt;Output file&lt;/em&gt;设置为&lt;code&gt;park_intersection_percentage_area.gpkg&lt;/code&gt;。将输出域名&lt;em&gt;Output field name&lt;/em&gt;设置为&lt;code&gt;perc_area&lt;/code&gt;。输入下面的表达式，然后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(&amp;quot;intersection_pc&amp;quot; * &amp;quot;PARK_AREA&amp;quot;)/100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本就差不多了，现在就知道兴趣区内每个地区的公园总面积了。可以排一下顺序。在&lt;em&gt;ProcessingWe Toolbox&lt;/em&gt;里面搜索定位到 &lt;em&gt;Vector Table → Add autoincremental field&lt;/em&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择&lt;code&gt;park_intersection_percentage_area&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;。输入&lt;code&gt;RANK&lt;/code&gt;作为&lt;em&gt;Field name&lt;/em&gt; ，输入&lt;code&gt;1&lt;/code&gt;作为&lt;em&gt;Start values at&lt;/em&gt;。扩展&lt;em&gt;Advanced parameter&lt;/em&gt;区域然后选&lt;code&gt;perc_area&lt;/code&gt;作为&lt;em&gt;Sort expression&lt;/em&gt;。去掉勾选&lt;em&gt;Sort ascending&lt;/em&gt;。将&lt;em&gt;Incremented&lt;/em&gt; 输出层命名为&lt;code&gt;bangalore_ward_rank.gpkg&lt;/code&gt;然后点击&lt;em&gt;Run&lt;/em&gt;保存。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;右键新生成的&lt;code&gt;bangalore_ward_rank&lt;/code&gt;图层选中筛选器&lt;em&gt;Filter&lt;/em&gt;。输入下面的表达式就获得前十个候选区域。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;RANK&amp;quot; &amp;lt;= 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来看到的就是排名最靠前的十个区域。点击&lt;em&gt;Open the Layer Styling Panel&lt;/em&gt; 切换到&lt;em&gt;Labels&lt;/em&gt;标签页。选择&lt;em&gt;Single labels&lt;/em&gt;然后设置&lt;code&gt;RANK&lt;/code&gt;作为&lt;em&gt;Value&lt;/em&gt;。这样地图上就显示出排序了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay10.png"&gt;&lt;/p&gt;
&lt;h1&gt;补充资料&lt;/h1&gt;
&lt;h2&gt;查看云优化的无人机图像&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://map.openaerialmap.org/#/39.220848083496094,-6.162059582511514,11/user/5ac4842b26964b0010033104"&gt;Zanzibar Mapping Initiative (ZMI)&lt;/a&gt;是坦桑尼亚科学和技术委员会（Tanzania Commission for Science and Technology ，COSTECH）和桑吉巴尔革命政府（Revolutionary Government of Zanzibar，RGoZ）的一项合作计划。这个计划正在拍摄无人机照片来为桑吉巴尔创建航拍地图，并通过&lt;a href="https://openaerialmap.org/"&gt;开放航拍计划 OpenAerialMap&lt;/a&gt;公开。&lt;/p&gt;
&lt;p&gt;针对这样的大规模图像的使用和分析，有一种新文件格式叫做&lt;a href="https://www.cogeo.org/"&gt;云优化的地理信息位图 Cloud-Optimized GeoTIFF (COG)&lt;/a&gt; 。作为一种「云优化」（&lt;em&gt;Cloud-optimized&lt;/em&gt; ）的GeoTIFF格式，和之前我们看到的常规GeoTIFF一样有地理信息，但不需要将所有图像下载到本地，你就可以读取图像的一部分（&lt;em&gt;portions&lt;/em&gt;），使用的是云端服务推流技术，客户端就是QGIS这类软件。这就使得对这类数据的读取和分析非常简单方便，不用下载很大的文件了。&lt;/p&gt;
&lt;p&gt;桑吉巴尔测绘计划的所有图像的收集和处理都是以云优化的GeoTIFF格式存储在亚马逊S3云上。接下来我们用QGIS来查看一下。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先要在 OpenAerialMap 上访问&lt;a href="https://map.openaerialmap.org/#/39.220848083496094,-6.162059582511514,11/user/5ac4842b26964b0010033104"&gt;Zanzibar Mapping Initiative (ZMI)&lt;/a&gt; 的用户页面。找到你要用的图像，右键&lt;code&gt;Download raw .tiff image file&lt;/code&gt;按钮，然后选中复制链接地址&lt;em&gt;Copy Link Address&lt;/em&gt;。本次练习使用的是&lt;a href="https://oin-hotosm.s3.amazonaws.com/5b00370f2b6a08001185f125/10/5b00370f2b6a08001185f130.tif"&gt;这个图像链接&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog1.jpg"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在QGIS中，点击&lt;em&gt;Open Data Source Manager&lt;/em&gt;，或者使用快捷键&lt;code&gt;Ctrl+L&lt;/code&gt; / &lt;code&gt;Cmd +L&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;切换到栅格&lt;em&gt;Raster&lt;/em&gt;标签，然后选中协议&lt;code&gt;Protocol: HTTP(S), cloud etc.&lt;/code&gt;作为数据源&lt;em&gt;Source type&lt;/em&gt;。输入刚刚的geotiff链接地址作为&lt;em&gt;URI&lt;/em&gt;。然后点击&lt;em&gt;Add&lt;/em&gt;添加。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始化下载之后，图像就可以在QGIS中呈现为一个新图层了。要注意每个图像的原始大小可能有几百兆字节，但加载的时候其实只传输了必要的一小部分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;em&gt;Identify&lt;/em&gt; 工具来点一点图像。你会发现这是一个四通道的无人机图像，四个通道就是红、绿、蓝、明度（Red, Green, Blue, Alpha）。你不仅可以查看图像，还可以查询图像的像素值。这酒喝常规的GeoTIFF格式文件一样。如果你使用的是XYZ切片图层，是绝对无法实现这个效果的。所以一个云优化的GeoTIFF格式提供了这一独一无二的功能，具有这种快速流式访问的独特优势，同时保留了源数据的完全性。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog5.png"&gt;&lt;/p&gt;
&lt;h1&gt;数据来源&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Delhi PM2.5 concentrations. Downloaded from &lt;a href="https://openaq.org/"&gt;OpenAQ&lt;/a&gt; &lt;a href="https://openaq.org/#/countries?_k=dmlk2k"&gt;data download&lt;/a&gt; service. Source data from Central Pollution Control Board (CPCB) India and EPAAirNow DOC.&lt;/li&gt;
&lt;li&gt;OSM Tile Layer, Bangalore Metro Stations : (c) OpenStreetMap contributors&lt;/li&gt;
&lt;li&gt;India Village-Level Geospatial Socio-Economic Data Set. Meiyappan, P., P. S. Roy, A. Soliman, T. Li, P. Mondal, S. Wang, and A. K. Jain. 2018. India Village-Level Geospatial Socio-Economic Data Set: 1991, 2001. Palisades, NY: NASA Socioeconomic Data and Applications Center (SEDAC). &lt;a href="https://doi.org/10.7927/H4CN71ZJ"&gt;https://doi.org/10.7927/H4CN71ZJ&lt;/a&gt;. Accessed 15 February 2020.&lt;/li&gt;
&lt;li&gt;Census 2001 Districts: Downloaded from &lt;a href="https://github.com/datameet/maps/tree/master/States"&gt;Datameet Spatial Data repository&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Oxford Point Cloud. DTM, and DSM. Downloaded from &lt;a href="https://environment.data.gov.uk/DefraDataDownload/"&gt;Defra Data Services Platform&lt;/a&gt;. Crown Copyright 2019&lt;/li&gt;
&lt;li&gt;Kathmandu University Ground Drone Imagery. Downloaded from &lt;a href="https://map.openaerialmap.org/#/85.53695037961006,27.61776421799196,20/user/59f0ecea31eff4000c3804fd/5a00c096bac48e5b1cf75232?_k=tkjpjw"&gt;OpenAerialMap&lt;/a&gt;. Captured by &lt;a href="https://werobotics.org/"&gt;WeRobotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zanzibar Cloud-Optimized GeoTiff and XYZ Layer. Accessed from &lt;a href="https://map.openaerialmap.org/#/39.220848083496094,-6.162059582511514,11/user/5ac4842b26964b0010033104"&gt;OpenAerialMap&lt;/a&gt;. Commission for Lands (COLA) ; Revolutionary Government of Zanzibar (RGoZ)&lt;/li&gt;
&lt;li&gt;Bangalore Sentinel-2 Imagery. Downloaded from &lt;a href="https://scihub.copernicus.eu/"&gt;Copernicus Open Access Hub&lt;/a&gt;. Copyright European Space Agency - ESA.&lt;/li&gt;
&lt;li&gt;Travel Times for Bangalore. Data retrieved from Uber Movement, (c) 2020 Uber Technologies, Inc., &lt;a href="https://movement.uber.com"&gt;https://movement.uber.com&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Bangalore Ward Maps Provided by &lt;a href="http://projects.datameet.org/Municipal_Spatial_Data/"&gt;Spatial Data of Municipalities (Maps) Project&lt;/a&gt; by Data{Meet}.&lt;/li&gt;
&lt;li&gt;Karnataka Population Grid 2020: Downloaded from &lt;a href="https://www.worldpop.org/geodata/summary?id=6527"&gt;WorldPop&lt;/a&gt; - School of Geography and Environmental Science, University of Southampton; Department of Geography and Geosciences, University of Louisville; Departement de Geographie, Universite de Namur) and Center for International Earth Science Information Network (CIESIN), Columbia University (2018). Global High Resolution Population Denominators Project - Funded by The Bill and Melinda Gates Foundation (OPP1134076). &lt;a href="https://dx.doi.org/10.5258/SOTON/WP00645"&gt;https://dx.doi.org/10.5258/SOTON/WP00645&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://opencity.in/documents/bbmp-list-of-parks-wardwise"&gt;BBMP: List of Parks - wardwise&lt;/a&gt;: Downloaded from OpenCity Urban Data Portal by Oorvani Foundation and DataMeet.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;授权协议&lt;/h1&gt;
&lt;p&gt;本课程材料采用&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;知识共享署名-非商业性4.0国际许可协议&lt;/a&gt;授权。你可以为任何非商业目的自由使用该材料。请适当注明原作者的名字。&lt;/p&gt;
&lt;p&gt;本中文翻译版本禁止商用。&lt;/p&gt;
&lt;p&gt;如果你想利用英文原版内容作为商业产品的一部分，需要 &lt;a href="https://spatialthoughts.com/contact/"&gt;联系英文原作者&lt;/a&gt; 询问价格和使用条款，获得&lt;em&gt;培训授权&lt;/em&gt;，付对应费用。&lt;/p&gt;
&lt;p&gt;© 2020 Ujaval Gandhi &lt;a href="https://spatialthoughts.com"&gt;www.spatialthoughts.com&lt;/a&gt;&lt;/p&gt;</content><category term="QGIS"></category><category term="GIS"></category><category term="QGIS"></category><category term="Python"></category><category term="Learning"></category><category term="Book"></category></entry><entry><title>春晚小品《每逢佳节被催婚》是说不得？</title><link href="/chun-wan-xiao-pin-mei-feng-jia-jie-bei-cui-hun-shi-shuo-bu-de.html" rel="alternate"></link><published>2021-02-13T00:00:00+08:00</published><updated>2021-02-13T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2021-02-13:/chun-wan-xiao-pin-mei-feng-jia-jie-bei-cui-hun-shi-shuo-bu-de.html</id><summary type="html">&lt;p&gt;怎么看待 2021 年春晚小品《每逢佳节被催婚》歧视胖丑，颜值唯上的歪曲价值观？&lt;/p&gt;
&lt;p&gt;春晚，以及类似的各种晚会、团拜会之类东西，受众本来就不是咱们普罗大众。
那是给肉食者看的，而众所周知：『肉食者鄙。』
随着时间的推移，肉食者中依然喜好这类『会』的，大概也越来越少，逐渐到只有其中一少部分特定年龄段的人。
这一少部分人，普遍是有所成就，在特定领域具有举足轻重的地位，又喜欢沉浸在自己『与民同乐』的氤氲氛围之中。
至于肉食者中其他年龄段，年高有德的『老而不逝』，青少年版本的就成了『奔涌的后浪』。&lt;/p&gt;
&lt;p&gt;所以，即便是在肉食者中，这类『晚会迷恋者』，也大概是比较低级的货色。&lt;/p&gt;
&lt;p&gt;这个低级体现在『做作』和『审美层次』等方面，并不是『社会资源和话语权的掌控』。&lt;/p&gt;
&lt;p&gt;在价值观和审美方向，受到这类低品质肉食者控制的所谓『晚会』、『团拜会』之类的东西就很自然体现出了这部分核心受众所特有的那种『风味癖好』。&lt;/p&gt;
&lt;p&gt;比如一定要一群青春靓丽的男女几十几百个地上去给舞蹈，然后要众多所谓 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;怎么看待 2021 年春晚小品《每逢佳节被催婚》歧视胖丑，颜值唯上的歪曲价值观？&lt;/p&gt;
&lt;p&gt;春晚，以及类似的各种晚会、团拜会之类东西，受众本来就不是咱们普罗大众。
那是给肉食者看的，而众所周知：『肉食者鄙。』
随着时间的推移，肉食者中依然喜好这类『会』的，大概也越来越少，逐渐到只有其中一少部分特定年龄段的人。
这一少部分人，普遍是有所成就，在特定领域具有举足轻重的地位，又喜欢沉浸在自己『与民同乐』的氤氲氛围之中。
至于肉食者中其他年龄段，年高有德的『老而不逝』，青少年版本的就成了『奔涌的后浪』。&lt;/p&gt;
&lt;p&gt;所以，即便是在肉食者中，这类『晚会迷恋者』，也大概是比较低级的货色。&lt;/p&gt;
&lt;p&gt;这个低级体现在『做作』和『审美层次』等方面，并不是『社会资源和话语权的掌控』。&lt;/p&gt;
&lt;p&gt;在价值观和审美方向，受到这类低品质肉食者控制的所谓『晚会』、『团拜会』之类的东西就很自然体现出了这部分核心受众所特有的那种『风味癖好』。&lt;/p&gt;
&lt;p&gt;比如一定要一群青春靓丽的男女几十几百个地上去给舞蹈，然后要众多所谓『有艺术地位』的艺术界名家打扮成『红嘴巴』的模样来『歌颂』点什么。&lt;/p&gt;
&lt;p&gt;最终还要在几个所谓『语言类』节目或者主持人的串词中间煽情一段，做出一种姿态，仿佛是『身在高处的大罗神仙在蟠桃宴互相敬酒的间隙要表演一下悲悯人间疾苦』。
就像是汪海林老师曾经提到过的，电视台购买电视剧钟情于流量明星的，也都是一些对特定性别特定面貌具有特定癖好的特定年龄段的特定群体。
那些人本来就只是根据自己的私欲行事，而基于大众的需求和认同从来都只是他们的『招牌』，背地里，他们甚至还可能要朝这块『招牌』吐吐口水，以彰显自己的『高层次』。
曾经，他们用臆想『代表』我们所喊出的那些他们爱听的口号，至今依然嘹亮。&lt;/p&gt;
&lt;p&gt;『我不下岗谁下岗？』
现在，在某些利益群体占据绝对优势的这些传媒平台，普通人依然被『边缘化』甚至『污名化』。
咱们都是普通人，不具有那种矫揉造作的姣好面貌，也不会唱那种婀娜谄媚的袅袅赞歌，更难以认同他们那种『别致』的审美和价值观。
能指望他们的什么『价值观』呢 ？
他们只有『正能量』罢了。
他们从来都不是我们。
他们是天龙人。
还有『小卫士』去捍卫他们。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/FuckZhihu/%E5%8A%B3%E5%8A%A8%E8%80%85%E4%B8%8D%E8%AE%B8%E7%AB%99%E8%B5%B7%E6%9D%A5.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/FuckZhihu/%E6%98%A5%E6%99%9A%E7%9A%84%E5%B0%8F%E5%93%81%E4%B8%8D%E8%AE%B8%E8%AF%84%E4%BB%B7.png"&gt;&lt;/p&gt;
&lt;p&gt;原回答被删除于 &lt;a href="https://www.zhihu.com/question/443997545/answer/1726738312"&gt;https://www.zhihu.com/question/443997545/answer/1726738312&lt;/a&gt; &lt;/p&gt;</content><category term="FuckZhihu"></category><category term="FuckChunWan"></category><category term="FuckZhihu"></category><category term="Shit"></category></entry><entry><title>用 macOS 来听收音机的一段折腾经历</title><link href="/yong-macos-lai-ting-shou-yin-ji-de-yi-duan-zhe-teng-jing-li.html" rel="alternate"></link><published>2020-08-18T00:00:00+08:00</published><updated>2020-08-18T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2020-08-18:/yong-macos-lai-ting-shou-yin-ji-de-yi-duan-zhe-teng-jing-li.html</id><summary type="html">&lt;h1&gt;童年乐趣&lt;/h1&gt;
&lt;p&gt;我从小就喜欢听东西。可能是由于视力比较差，看东西看不清又很痛苦，听东西就能让那时候年幼却很暴躁的我变得非常冷静。&lt;/p&gt;
&lt;p&gt;在三五岁的时候，每天最大的快乐就是听收音机，收听中央人民广播电台的“小喇叭”节目，等待着孙敬修老爷爷给讲故事。&lt;/p&gt;
&lt;p&gt;然后到了上中学的时候，听广播已经成了习惯，当时艰难地尝试着用短波收听各种奇妙的电台，现在回想起来，大部分都是日语、俄语。有时候还能听到那种非常“慷慨激昂”的大妈在讲述什么，估计是朝鲜语的电台。后来发生了 9-11 恐怖袭击以及伊拉克战争，于是通过电波我第一次听到了&lt;strong&gt;局座&lt;/strong&gt;的声音。&lt;/p&gt;
&lt;p&gt;来京读书之后，身边同学使用收音机的场景就逐渐收窄到了四六级考试而已。而我可能用的更多一些，因为当时特别喜欢听 FM887 和 FM915 的一些英语广播内容。那时候傻乎乎又贪图钱财的我，为了跑去中关村打工兼职而逃课，几乎没有去上过英语课。而凭借着日常的熏染，居然还练就了能勉强应对过去的英语听力，结果侥幸一次性通过了四六级。&lt;/p&gt;
&lt;p&gt;最近这一段时间，关节炎和结膜炎发作，行走不便，又不方便看东西，就又开始听收音机了。&lt;/p&gt;
&lt;p&gt;然而等我拿出来前一阵和同学一同购买的收音机，却发现播放次数不超过十次的机器居然坏掉了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Radio/1.JPG"&gt;&lt;/p&gt;
&lt;h1&gt;被坑经历&lt;/h1&gt;
&lt;p&gt;前一阵子 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;童年乐趣&lt;/h1&gt;
&lt;p&gt;我从小就喜欢听东西。可能是由于视力比较差，看东西看不清又很痛苦，听东西就能让那时候年幼却很暴躁的我变得非常冷静。&lt;/p&gt;
&lt;p&gt;在三五岁的时候，每天最大的快乐就是听收音机，收听中央人民广播电台的“小喇叭”节目，等待着孙敬修老爷爷给讲故事。&lt;/p&gt;
&lt;p&gt;然后到了上中学的时候，听广播已经成了习惯，当时艰难地尝试着用短波收听各种奇妙的电台，现在回想起来，大部分都是日语、俄语。有时候还能听到那种非常“慷慨激昂”的大妈在讲述什么，估计是朝鲜语的电台。后来发生了 9-11 恐怖袭击以及伊拉克战争，于是通过电波我第一次听到了&lt;strong&gt;局座&lt;/strong&gt;的声音。&lt;/p&gt;
&lt;p&gt;来京读书之后，身边同学使用收音机的场景就逐渐收窄到了四六级考试而已。而我可能用的更多一些，因为当时特别喜欢听 FM887 和 FM915 的一些英语广播内容。那时候傻乎乎又贪图钱财的我，为了跑去中关村打工兼职而逃课，几乎没有去上过英语课。而凭借着日常的熏染，居然还练就了能勉强应对过去的英语听力，结果侥幸一次性通过了四六级。&lt;/p&gt;
&lt;p&gt;最近这一段时间，关节炎和结膜炎发作，行走不便，又不方便看东西，就又开始听收音机了。&lt;/p&gt;
&lt;p&gt;然而等我拿出来前一阵和同学一同购买的收音机，却发现播放次数不超过十次的机器居然坏掉了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Radio/1.JPG"&gt;&lt;/p&gt;
&lt;h1&gt;被坑经历&lt;/h1&gt;
&lt;p&gt;前一阵子，我们几个人想尝试使用效果更好一点的收音机，于是参考了一些网上的推荐帖子（后来意识到这些帖子很可能都是营销手段，可见我们都很单纯很傻），于是一同买了若干台德劲DE1103 收音机。&lt;/p&gt;
&lt;p&gt;然而这真的是悲剧的开始，大家都是用了没有几次，就开始遇到各种各样的坑：这些 350 元一台的收音机陆续出现了屏幕不显示等各种问题。去联系了商家，结果卖家后来就开始了无线电静默，不再回复我们的任何消息。&lt;/p&gt;
&lt;p&gt;卖家居然根本不理人了，我们出离愤怒了，但也无可奈何。&lt;/p&gt;
&lt;h1&gt;尝试 SDR&lt;/h1&gt;
&lt;p&gt;接下来我们觉得很愧疚，因为作为平时被同学们称赞「动手能力强」的三十多岁的理学博士，居然去买了成品，而没有像老派黑客那样自己动手来探索一下。&lt;/p&gt;
&lt;p&gt;所以通过搜索，我们发现了&lt;a href="https://zhuanlan.zhihu.com/p/24217098"&gt;软件无线电 SDR&lt;/a&gt;，然后又进一步搜索，发现了最廉价的高性价比方案莫过于基于 RTL2832U+R820T2 的电视棒  RTL-SDR 方案，支持 GNU-radio，全波段覆盖。&lt;/p&gt;
&lt;p&gt;最重要的是这个组合真便宜，售价从几十元到数百元不等。相比之下 HackRF One 近千元的价格就很难被我们接受了，毕竟在读的时候每个月的博士补助只有 1500 元而已。&lt;/p&gt;
&lt;p&gt;在选购几十元的基本版还是选购数百元的到手即用版上，大家有了不同的观点。玩软件无线电的朋友给推荐了一个，为免广告嫌疑，只说一下搜索关键词：软件无线电 全波段RTL-SDR，然后销量最高的即是所推荐的。&lt;/p&gt;
&lt;p&gt;为了避免花费时间在焊接上，我就选购了售价在 200 元出头的一款到手即用版本，毕竟我眼睛现在各种难受，而且关节炎也让我行动不便，这种状态下要去自己焊接还是比较痛苦又不可靠的。&lt;/p&gt;
&lt;h1&gt;软件安装&lt;/h1&gt;
&lt;p&gt;购买后次日到手了，然而由于自身代码能力底下以及精力有限等原因，我目前懒得进行代码级和硬件上的探索了。。。之前吹牛的老派黑客精神顿时萎靡了。&lt;/p&gt;
&lt;p&gt;但还是我还是得探索如何能够在 Mac 上使用起来。&lt;/p&gt;
&lt;p&gt;搜索之后发现了Gqrx 这个项目，基于 GNU Radio， 用 Qt 做的图形界面，看上去挺简单的。&lt;/p&gt;
&lt;p&gt;然后我按照&lt;a href="http://gqrx.dk/download"&gt; Gqrx 下载页面&lt;/a&gt; 里面的链接下了应用文件，发现尼玛无法运行。然后尝试了一下使用 HomeBrew 安装，就成功了。&lt;/p&gt;
&lt;p&gt;以下步骤都针对当前的 macOS Catalina (10.15.6) 进行了测试，能够成功安装和运行 Gqrx。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew cask install gqrx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果没有报错，就可以把设备通过 USB 连接到 Mac 上面。然后在终端中输入 gqrx 然后回车，就可以运行了，会弹出如下界面，在其中选择设备为红色矩形所标注的 RTL2838UHIDIR，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Radio/hardware.png"&gt;&lt;/p&gt;
&lt;p&gt;接下来设置 input rate 为 1800000，然后设置声卡，我这里用的是一款外置声卡，所以选择的就是 M-Track，其他设置可以参考下图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Radio/config.png"&gt;&lt;/p&gt;
&lt;p&gt;之后点击 OK，如果没有报错，就会出现下面的界面了：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Radio/interface.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Radio/tune.png"&gt;
Filter 可以都设为 Normal，按 A 调整 Squelch ，然后陆续微调，直到声音质量能接受。&lt;/p&gt;
&lt;p&gt;Mode 随着使用的波段有所不同，我这里选择的是WFM（stereo），也就是双声道立体声，如果所在区域无法达到立体声的信号质量，也可以尝试WFM（Mono），这样能够获得更清晰的收听效果。&lt;/p&gt;
&lt;h1&gt;播放效果&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1rW41147tt?t=44"&gt;参考视频&lt;/a&gt;&lt;/p&gt;</content><category term="SDR"></category><category term="RTL-SDR"></category><category term="macOS"></category><category term="Radio"></category><category term="Hardware"></category></entry><entry><title>Install WeChat on Ubuntu</title><link href="/install-wechat-on-ubuntu.html" rel="alternate"></link><published>2020-01-22T23:59:00+08:00</published><updated>2020-01-22T23:59:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2020-01-22:/install-wechat-on-ubuntu.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir -p ~/temp &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/temp
&lt;span class="c1"&gt;# Download the Debs&lt;/span&gt;
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine_2.18-20_all.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine32_2.18-20_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine32-preloader_2.18-20_i386.deb
wget http://mirrors …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir -p ~/temp &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/temp
&lt;span class="c1"&gt;# Download the Debs&lt;/span&gt;
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine_2.18-20_all.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine32_2.18-20_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine32-preloader_2.18-20_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine-helper/deepin-wine-helper_1.2deepin8_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine-plugin/deepin-wine-plugin_1.0deepin2_amd64.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine-plugin/deepin-wine-plugin_1.0deepin2_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine-plugin-virtual/deepin-wine-plugin-virtual_1.0deepin3_all.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine-uninstaller/deepin-wine-uninstaller_0.1deepin2_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/u/udis86/udis86_1.72-2_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-fonts-wine_2.18-20_all.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-libwine_2.18-20_i386.deb
wget https://mirrors.aliyun.com/deepin/pool/main/libj/libjpeg-turbo/libjpeg62-turbo_1.5.1-2_amd64.deb
wget https://mirrors.aliyun.com/deepin/pool/main/libj/libjpeg-turbo/libjpeg62-turbo_1.5.1-2_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-libwine-dbg_2.18-20_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-libwine-dev_2.18-20_i386.deb
wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine-binfmt_2.18-20_all.deb
&lt;span class="c1"&gt;# &amp;#39;Add the i386 support&amp;#39;&lt;/span&gt;
sudo dpkg --add-architecture i386
&lt;span class="c1"&gt;# &amp;#39;Refresh the APT cache...&amp;#39;&lt;/span&gt;
sudo apt update
&lt;span class="c1"&gt;# &amp;#39;Install the debs...&amp;#39;&lt;/span&gt;
sudo dpkg -i *.deb
&lt;span class="c1"&gt;# if Errors occurs, try：sudo apt-get install -f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Story"></category><category term="Camera"></category><category term="Life"></category><category term="Story"></category><category term="Photo"></category></entry><entry><title>一段时光</title><link href="/yi-duan-shi-guang.html" rel="alternate"></link><published>2019-09-15T16:31:53+08:00</published><updated>2019-09-15T16:31:53+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2019-09-15:/yi-duan-shi-guang.html</id><summary type="html">&lt;p&gt;2019年6月23日，我终于毕业了。&lt;/p&gt;
&lt;p&gt;从 1995 年，到 2019 年，读了 24 年书。&lt;/p&gt;
&lt;p&gt;从 2007 年，到 2019 年，在 CUGB 待了 12 年。&lt;/p&gt;
&lt;p&gt;噫，读书 24 年，大学里面晃了 12 年， 可依然还是这么一个混人。这书真是白读了。&lt;/p&gt;
&lt;p&gt;——————————————————————————————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;&lt;img alt="20张火车票" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tickets.jpg"&gt;&lt;/p&gt;
&lt;p&gt;从 2019年6月23日 毕业当天 到 2019年9月14日 中秋节，我辗转于北京、沈阳、长春等多地。&lt;/p&gt;
&lt;p&gt;偶然翻书包，发现毕业后这段时间李，已经积攒了整整 20 张火车票。&lt;/p&gt;
&lt;p&gt;这时才意识到自己已经离开  CUGB 来 CCIT 几个月了 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;2019年6月23日，我终于毕业了。&lt;/p&gt;
&lt;p&gt;从 1995 年，到 2019 年，读了 24 年书。&lt;/p&gt;
&lt;p&gt;从 2007 年，到 2019 年，在 CUGB 待了 12 年。&lt;/p&gt;
&lt;p&gt;噫，读书 24 年，大学里面晃了 12 年， 可依然还是这么一个混人。这书真是白读了。&lt;/p&gt;
&lt;p&gt;——————————————————————————————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;&lt;img alt="20张火车票" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tickets.jpg"&gt;&lt;/p&gt;
&lt;p&gt;从 2019年6月23日 毕业当天 到 2019年9月14日 中秋节，我辗转于北京、沈阳、长春等多地。&lt;/p&gt;
&lt;p&gt;偶然翻书包，发现毕业后这段时间李，已经积攒了整整 20 张火车票。&lt;/p&gt;
&lt;p&gt;这时才意识到自己已经离开  CUGB 来 CCIT 几个月了。&lt;/p&gt;
&lt;p&gt;——————————————————————————————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;社团招新，一群穿着正装的青年人面容灿烂表情鲜活。
“同学有兴趣加入我们社团么？”
“额，好啊~，有什么社团呢？”
“同学你是新来的么？”
“额，是的。。。”
“咦？那你怎么没有穿军训的衣服呢？”
“我不是本科生。。。”
“那也可以加入我们社团的。”&lt;/p&gt;
&lt;p&gt;——————————————————————————————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;CCIT 是个神奇的地方，和 CUGB 一样是诞生于建国初期，也一样是多个院校合并而成，还都拥有者略显窄小又充满历史气息的校园建筑。&lt;/p&gt;
&lt;p&gt;&lt;img alt="实践中心" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ChangChun/NewBuilding.jpg"&gt;&lt;/p&gt;
&lt;p&gt;然而也有大不同。
CCIT 有 勘测学院、建筑学院、理学院、计算机学院、电力学院、管理学院、外语学院等多个院系，这些院系都有各自的历史沿袭，高人林立，强手如云。
CUGB 有 地学院、能源学院、土科学院、海洋学院、地信学院、水环学院、材料学院、人文学院、外语学院等多个院系，但核心资源还是集中在地学院以及其他与地学相关的学院，地学以外的专业远不如地学相关院系有优势。
由此看来，CCIT 远比 CUGB 更称得上是一所综合性大学。&lt;/p&gt;
&lt;p&gt;&lt;img alt="七教" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ChangChun/SevenBuilding.jpg"&gt;&lt;/p&gt;
&lt;p&gt;也好理解，毕竟 CCIT 是由 冶金地质高专、电力高专、水利高专三所老牌院校合并而来；而 CUGB 只是各个高校的地质院系合并来的。另外由于地缘因素和历史境遇，CUGB 和 CUG 现在南北相望，一分为二多年了；而 CCIT 毕竟未遭此劫。&lt;/p&gt;
&lt;p&gt;&lt;img alt="远处的高楼" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ChangChun/Cloud.jpg"&gt;&lt;/p&gt;
&lt;p&gt;CUGB 地处学院路和成府路交汇处，狭小一隅，守着五道口，西面清北、计算所，东面北科，北面北语、矿大，南面海跑、北航。物理所。
CCIT 分两处，位于南湖两岸，红旗街、自由大路，周围是长春工业大学、东北师范大学、吉林大学。&lt;/p&gt;
&lt;p&gt;学校果然都是扎堆，还都处在每天早晚高峰都拥堵的地方。相比之下还是帝都更方便，有自行车道，这在长春就是一种奢望了。&lt;/p&gt;
&lt;p&gt;长春也偶尔会有自行车道，只是中间高低起伏的沟坎楞角让人无奈。
早先我从吉大买了一辆小巧的折叠车，没有避震，不敢骑红旗街，只敢从延安大街沿着南湖走。
后来实在忍不下去，就将媳妇的山地车从帝都邮寄过来，从此红旗街十三郎就是我了。&lt;/p&gt;
&lt;p&gt;骑着车子，想起了郭德纲先生说过的“俩轱辘一转，给个县长都不换”。
红日初起，晨风迎面，俯身减小迎风角，随着坡度变档保持踏频的稳定，那一刻就觉得生活又回到了熟悉的状态。&lt;/p&gt;
&lt;p&gt;六年前的这个时候，我一大早从培黎除法，经过生物所、王庄路、西郊宾馆、矿大北语胡同，进到 CUGB 的西北门，再继续骑到综合楼一层的阶梯教室，才赶得上高院长的数值分析或者是柯老师的 C++。&lt;/p&gt;
&lt;p&gt;六年后的这个时候，我一大早从宽平大路的西校区出发，走红旗街，途径外国语学院、长影、万达、欧亚，再过同光路途径吉大、师大附中，到了同志街往南骑过自由大路、自由胡同，往左拐进了 CCIT 的西门直奔实验楼的办公室。&lt;/p&gt;
&lt;p&gt;一路上感觉自己只是换了个地方骑自行车。
——————————————————————————————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;&lt;img alt="逸夫图书馆和报废的老捷达车" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ChangChun/Car.jpg"&gt;&lt;/p&gt;
&lt;p&gt;以前觉得好难以企及的事情，可能某一天就得到甚至被当做很寻常的东西了。
以前我总想如果能有一辆捷达该多棒。
现在看到好些个捷达被废弃在路边。&lt;/p&gt;
&lt;p&gt;有青年学生充满憧憬地跟我询问 CUGB 的情景，一问得知对方想考研到 CUGB 。&lt;/p&gt;
&lt;p&gt;“噫！那巴掌大的小区，八人寝甚至十三人寝的宿舍，何苦去那地方啊？！”
“额，可是你不是在那里待了十几年这不也过来了么？”&lt;/p&gt;
&lt;p&gt;顿时语塞了。
是啊，都没想到自己这样的混人居然也能顺利毕业拿到学位。&lt;/p&gt;
&lt;p&gt;在 CUGB 待了 12 年，在 CCIT 或许要待更久呢。&lt;/p&gt;</content><category term="Story"></category></entry><entry><title>为Pelican加GitTalk评论系统</title><link href="/wei-pelicanjia-gittalkping-lun-xi-tong.html" rel="alternate"></link><published>2019-08-04T16:31:53+08:00</published><updated>2019-08-04T16:31:53+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2019-08-04:/wei-pelicanjia-gittalkping-lun-xi-tong.html</id><summary type="html">&lt;p&gt;我一直在使用 Pelican 来写博客，而没有使用 Hexo，一来 Pelican 是 Python 的，我还是稍微熟悉一点点，二来是懒得换。
Pelican 默认支持 Disqus，但这对墙内用户不友好。
一时半会也没发现更好的替代品，直到发现了 &lt;a href="https://github.com/gitalk/gitalk"&gt;GtiTalk&lt;/a&gt;.
于是试了几下安装上，发现不错，特此记录下来，防止自己忘记，也分享给有类似需求的朋友。&lt;/p&gt;
&lt;p&gt;假设已经安装好了 Pelican。这里不再涉及 Pelican 的安装和博客的搭建。&lt;/p&gt;
&lt;p&gt;————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;第一步是要在 Pelican 所用的主题的 article.html 文件中加入 GitTalked 的代码。&lt;/p&gt;
&lt;p&gt;所以要找到 Pelican 所用的主题。需要参考博客文件源目录下的一个名为 &lt;code&gt;pelicanconf.py&lt;/code&gt; 的文件。&lt;/p&gt;
&lt;p&gt;编辑这个文件，就可以看见其中所用的主题（Theme）.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;我一直在使用 Pelican 来写博客，而没有使用 Hexo，一来 Pelican 是 Python 的，我还是稍微熟悉一点点，二来是懒得换。
Pelican 默认支持 Disqus，但这对墙内用户不友好。
一时半会也没发现更好的替代品，直到发现了 &lt;a href="https://github.com/gitalk/gitalk"&gt;GtiTalk&lt;/a&gt;.
于是试了几下安装上，发现不错，特此记录下来，防止自己忘记，也分享给有类似需求的朋友。&lt;/p&gt;
&lt;p&gt;假设已经安装好了 Pelican。这里不再涉及 Pelican 的安装和博客的搭建。&lt;/p&gt;
&lt;p&gt;————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;第一步是要在 Pelican 所用的主题的 article.html 文件中加入 GitTalked 的代码。&lt;/p&gt;
&lt;p&gt;所以要找到 Pelican 所用的主题。需要参考博客文件源目录下的一个名为 &lt;code&gt;pelicanconf.py&lt;/code&gt; 的文件。&lt;/p&gt;
&lt;p&gt;编辑这个文件，就可以看见其中所用的主题（Theme）.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CycleUsyer&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;CycleUser&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blog.cycleuser.org&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Asia/Chongqing&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cutalk&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zh&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;从上面的样本中就可以知道我所用的主题是&lt;code&gt;THEME = "cutalk"&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;由此可知我所用的主题就是&lt;code&gt;cutalk&lt;/code&gt;，在博客源文件目录下应该就有一个名字为&lt;code&gt;cutalk&lt;/code&gt;的目录。&lt;/p&gt;
&lt;p&gt;进入这个目录下的&lt;code&gt;templates&lt;/code&gt;目录，用编辑器打开&lt;code&gt;cutalk\templates&lt;/code&gt;目录下的&lt;code&gt;article.html&lt;/code&gt;这个文件。&lt;/p&gt;
&lt;p&gt;搜索&lt;code&gt;&amp;lt;div id="disqus_thread"&amp;gt;&lt;/code&gt;，在同一个&lt;code&gt;section&lt;/code&gt;下加入下列代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gitalk-container&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;gitalk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ow"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Gitalk&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;clientID&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;你的 GitHub Application Client ID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;clientSecret&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;你的GitHub Application Client Secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;你的 GitHub repo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;你的 GitHub repo 账户名&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;你的 GitHub repo 账户名&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="c1"&gt;// Ensure uniqueness and length less than 50&lt;/span&gt;
        &lt;span class="nx"&gt;distractionFreeMode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;  &lt;span class="c1"&gt;// Facebook-like distraction free mode&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="nx"&gt;gitalk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitalk-container&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;需要填写的只有上面加了&lt;code&gt;你的&lt;/code&gt;字样的几处，例如我的设置就是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;gitalk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ow"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Gitalk&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;clientID&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;7d9xxxxxxxxxxxxxxxxx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;clientSecret&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;02e3xxxxxxxxxxxxxxxxxxxxxxxx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cycleuser.github.io&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cycleuser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cycleuser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;repo&lt;/code&gt;那里我写的就是我的博客的&lt;code&gt;repo&lt;/code&gt;，之前我错写成了带https的地址，后来改写成直接的&lt;code&gt;cycleuser.github.io&lt;/code&gt;才能用。&lt;/p&gt;
&lt;p&gt;上面的&lt;code&gt;GitHub Application ID&lt;/code&gt;等内容需要你&lt;a href="https://github.com/settings/applications/new"&gt;点击这里来申请&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;申请的时候这样填写：&lt;/p&gt;
&lt;h5&gt;Application name&lt;/h5&gt;
&lt;p&gt;这个应该是可以随便填写的，比如我写的就是&lt;code&gt;blog.cycleuser.org.talk&lt;/code&gt;。&lt;/p&gt;
&lt;h5&gt;Homepage URL&lt;/h5&gt;
&lt;p&gt;这个一定要写完整的博客域名，比如我写的就是&lt;code&gt;https://blog.cycleuser.org/&lt;/code&gt;。&lt;/p&gt;
&lt;h5&gt;Application description&lt;/h5&gt;
&lt;p&gt;这个应该是可以随便填写的，比如我写的就是&lt;code&gt;blog.cycleuser.org.talk&lt;/code&gt;。&lt;/p&gt;
&lt;h5&gt;Authorization callback URL&lt;/h5&gt;
&lt;p&gt;这个一定要写完整的博客域名，比如我写的就是&lt;code&gt;https://blog.cycleuser.org/&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;把上面的修改完成后，保存好刚刚修改过的&lt;code&gt;article.html&lt;/code&gt;，然后用 Pelican 重新生成 html，推送同步到博客所在的&lt;code&gt;repo&lt;/code&gt;上面，刷新博客文章页面，就应该能看到评论框了。&lt;/p&gt;
&lt;p&gt;比如我在&lt;a href="https://blog.cycleuser.org/using-qt55-with-both-xcode7-and-xcode6.html"&gt;这篇文章&lt;/a&gt;下发个评论，就会在&lt;a href="https://github.com/cycleuser/cycleuser.github.io/issues/1"&gt;博客所在的 &lt;code&gt;repo&lt;/code&gt;&lt;/a&gt;下新增一个&lt;code&gt;issue&lt;/code&gt;。 &lt;/p&gt;</content><category term="Story"></category></entry><entry><title>东游漫记</title><link href="/dong-you-man-ji.html" rel="alternate"></link><published>2019-07-22T23:59:00+08:00</published><updated>2019-07-22T23:59:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2019-07-22:/dong-you-man-ji.html</id><summary type="html">&lt;h2&gt;2019年5月18日01:59&lt;/h2&gt;
&lt;p&gt;深夜的火车经过了铁岭，这是一座比较大的城市。
遇上一位头发花白的老奶奶，年逾古稀的她坚持称自己坐一整夜硬座很舒服，坚决不去买卧铺票。
遇上一位四十岁出头上有老下有小的摄影师老哥，自己扛着图形工作站的机箱和滑轨跑去另外一个省接婚庆的活。他说儿子十八岁了在学美发，家里年迈的老人帮他照看着儿子。
底层的劳动人民为了生存下去付出的辛苦，可能是校园里的青少年难以想象和体会的。
五千年前，一百年前，七十年前，劳动人民可能一直是这样顽强又辛苦地生存着。
我记得教科书上说，他们是这个国家的主人。
希望他们能老有所养，希望他们能够治得起病，希望有工会维护《劳动法》和《劳动合同法》赋予他们的合法权利。
这些主人们四处漂泊，只为了糊口养家。
长太息以掩涕兮，哀民生之多艰。
屈大夫自己尚终结于河水中，又能渡得了谁呢？
面对现实中杰克马之类反复无常又毫无底线的既得利益群体，理想主义，唯物主义，信仰和人文关怀，唉。。。&lt;/p&gt;
&lt;h2&gt;2019年5月23日&lt;/h2&gt;
&lt;p&gt;我在某东北三...北欧三省的央企工作过。
不到半年，我和同年应聘的一个同事都离职了。
其实直接原因就是除了我俩，所在工作部门其他所有同事基本都在办公室内吸烟。
我路过了一些当地的高校，有的是985，有的是211，有的是地方普通高校。一个共同点就是我看到很多教学楼内一边是禁烟标志，一面是烟灰缸 …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;2019年5月18日01:59&lt;/h2&gt;
&lt;p&gt;深夜的火车经过了铁岭，这是一座比较大的城市。
遇上一位头发花白的老奶奶，年逾古稀的她坚持称自己坐一整夜硬座很舒服，坚决不去买卧铺票。
遇上一位四十岁出头上有老下有小的摄影师老哥，自己扛着图形工作站的机箱和滑轨跑去另外一个省接婚庆的活。他说儿子十八岁了在学美发，家里年迈的老人帮他照看着儿子。
底层的劳动人民为了生存下去付出的辛苦，可能是校园里的青少年难以想象和体会的。
五千年前，一百年前，七十年前，劳动人民可能一直是这样顽强又辛苦地生存着。
我记得教科书上说，他们是这个国家的主人。
希望他们能老有所养，希望他们能够治得起病，希望有工会维护《劳动法》和《劳动合同法》赋予他们的合法权利。
这些主人们四处漂泊，只为了糊口养家。
长太息以掩涕兮，哀民生之多艰。
屈大夫自己尚终结于河水中，又能渡得了谁呢？
面对现实中杰克马之类反复无常又毫无底线的既得利益群体，理想主义，唯物主义，信仰和人文关怀，唉。。。&lt;/p&gt;
&lt;h2&gt;2019年5月23日&lt;/h2&gt;
&lt;p&gt;我在某东北三...北欧三省的央企工作过。
不到半年，我和同年应聘的一个同事都离职了。
其实直接原因就是除了我俩，所在工作部门其他所有同事基本都在办公室内吸烟。
我路过了一些当地的高校，有的是985，有的是211，有的是地方普通高校。一个共同点就是我看到很多教学楼内一边是禁烟标志，一面是烟灰缸，以及地面上散乱的烟头。
我看到若干人员在办公室以及教学楼吸烟，有的是工作人员，有的是学生。
在有的人看来这是地方特色文化的体现，不过这样的反差也能体现出一些场景中规则的无力。一些规则可能会被宣传提倡，但生活中那些人们可能有不同的看法和行为选择。
我曾经和太太提起回到当地高校工作，她问我如果办公室内有人吸烟了怎么办？
我说我可能会回避一会直到烟味散尽。
她又问我如果是开会之类的场景怎么办，或者有人一直吸烟一根接一根，又或者不断有吸烟的人带着点燃的烟进入。
我就无言以对了。
我并不是想象不到这种情况，而是见识过这样的场景，毫无办法。
以前我和一些同学老师讨论起类似情景，他们都有些少见多怪，表示不能理解，认为不吸二手烟本来是很正当的，不理解为什么在当地居然会这么难。
我没好意思跟他们说，这种困境已经达到了不耐受烟草成了一种特殊化，可能会被当地人视作异类。
我很希望告别帝都的雾霾拯救自己敏感脆弱的呼吸道。我爷爷当年在朝鲜打过美国人，英雄如他也打不过空气中的敌人，最终因为鼻咽癌喉癌而逝世。
我曾经怀有回乡教书出力的想法，这点火花如今也没有熄灭。
只是，面对着办公室、教学楼等等地方一支支点燃的烟草。。。
我本将心向明月，奈何明月要抽烟？
当真没有办法？其实也未必。或许可以考虑让吸烟者和非吸烟者避免共享办公空间？但随之而来的成本是没人愿意承担的。
而且恐怕有不少吸烟者就是喜欢随时随地点燃梦想放飞自我，其他人的感受可能从来不是他们在意的。&lt;/p&gt;
&lt;h2&gt;2019年6月2日&lt;/h2&gt;
&lt;p&gt;在教二楼的某间办公室，遇到了当年的龙裔，在忙党建和学生工作。
聊了毕业的去向，又不由谈到了天际和晨风。诺德战士，红卫坦克。
好像回到了有魔法和巨龙的冒险时代。
“我在欧服美服都满级了，你来呗。”
“哎，忙啊。没时间了。”&lt;/p&gt;
&lt;p&gt;他战胜过有史以来最强大的巨龙，征服过天际省最高的山峰，以一己之力守护了雪漫城。
现在他退出了冒险，不是膝盖中箭，可能是厌倦了巨龙的时代，也可能受迫于生活和现实。
就算是在城里买了风宅，也怕终归只是雪漫城的过客。
再伟大的英雄，也要直面现实这场冒险。&lt;/p&gt;
&lt;h2&gt;2019年6月4日&lt;/h2&gt;
&lt;p&gt;作为一个兼修龙吼和魔法的诺德人，我不知道该就留在帝都发展还是回到寒冷的天际省训练学徒。
在北帝十二年，我有幸结识了众多英雄。于是我想听听他们的建议。
早上我在教二楼等待龙裔，碰巧遇到了大法师，他建议我留在帝都继续深造魔法。
法师青年时期在外征战，壮年读博回到了学城，现在负责守护学城的一切秘密。桌上摆放的照片里，他手持契约之石矗立在荒原之上，纵横睥睨，气势如虹。
然后见了龙裔，他给我在卷轴上施加了阿卡托什的祝福。
龙裔十七年前来到北帝，后来去冷港击败了迪拉德王子，又回到北帝成为了学生的守护者。
我想听他的建议，我问他这些年是否开心。
他说他不曾后悔，他说北帝法师们也只能提供建议，最终的冒险总要靠自己。
我看到他仰坐在座椅上的微笑着抿着嘴，目光像是朝向窗外的天光云影。
现在我跨上马鞍，从西直门朝雪漫城进发。
又可以去河木镇看看我儿子了。
如果是未来的他遇到这样的选择困境，我该给他怎样的建议呢？&lt;/p&gt;
&lt;h2&gt;2019年6月7日&lt;/h2&gt;
&lt;p&gt;骏马缓慢向前奔跑，逐渐加快，两旁的景物匆匆向后退去。
这片土地上出现了很多新事物，高大的风车，漫山遍野，覆盖了难以耕种的丘陵。&lt;/p&gt;
&lt;p&gt;外界都说天际经济衰落正如其冬季的寒冷。
我此次回乡是在初夏，只觉得雪漫城一早一晚还有些凉意，白天几乎和帝都一样热气腾腾。&lt;/p&gt;
&lt;p&gt;街上往来人，也与帝都一般。&lt;/p&gt;
&lt;p&gt;记得帝国人也常常会调侃天际诺德人衣着和言谈举止都有一种极其醒目的土气。
此次我却觉得已经难以将诺德人和帝国人区分了。&lt;/p&gt;
&lt;p&gt;我将龙裔所提供的带有阿卡托什祝福的卷轴呈上后，灰胡子大师们接见了我。
灰胡子统领看上去充满威严，我知道是他召唤了我。他严厉地告诫我不要重蹈米拉克的覆辙，又再三对我强调了纪律的重要性。我也反复跟他强调自己要求躲避火魔法的侵扰。然后我们达成了初步的一致。我试图和他交换纹章，他推脱自己很忙。
整个谈话过程中，他没有笑过。我想他一定很紧张，他必然是生怕我又是一个像米拉克一样的叛逆者。
他反复像我强调：“你要知道，现在学习龙吼的人还是很多的，我招募的时候是可以挑着选择的，如果你不能符合我的规则，就要面临淘汰。”我当时本来想说到自己是魔法和龙吼兼修而且以二者合用而与众人迥然不同，后来又觉得这样言谈轻佻狂妄，就没做声，只是连声答应。&lt;/p&gt;
&lt;p&gt;大魔导师稍后也和我见了面。我一见到他笑意盈盈的面孔，就觉得熟悉，然后想起当时在初选的角斗结束后与之有过一面之缘。他也是诺德人，但不像寻常诺德人那样魁梧，身材紧凑结实，一张笑脸让人觉得亲近。他说了说自己所从事的空间魔法方面的研究，然后又谈了谈我当初也参与过的指南星的魔法项目，在发觉我对此不熟悉之后就转而谈起了城里的学区房和体育馆，并且与我相约同去打球。&lt;/p&gt;
&lt;p&gt;离开了龙吼峰顶，我回到了河木镇，抱了抱肉嘟嘟的儿子，给他拍了一系列照片，发给了夫人。
然后又准备了措辞来像未能投奔的学城的帝国大学士和大魔法师表示歉意。&lt;/p&gt;
&lt;p&gt;如果留在帝都，一年的薪资大约有二十万金币；现在回到天际，可能一年都达不到五万金币。&lt;/p&gt;
&lt;p&gt;要等待雪漫城的元老院对任命进行公示，然后才能在阿卡托什神庙签订下我的契约。&lt;/p&gt;
&lt;p&gt;帝都学城的结业仪式也没有个准日子，一天之内朝令夕改了三番五次的。
我只能赶紧赶回来，可能还需要去开具一份奥杜因的文案。&lt;/p&gt;
&lt;h2&gt;2019年6月22日&lt;/h2&gt;
&lt;p&gt;明天（2019年6月23日）就要领毕业证、学位证、报到证然后离校了。
前天，毕业典礼。
一师妹发消息，提到了学术方面遇到的一些困难。
那天我忙于给众人拍照，没能顾上回复。
晚饭后，我回了消息。聊了几句，发现师妹的文献积累不是太充裕。
于是我强烈建议师妹去多读文献，并再次发了经常贴的一张截图 ，以表明自己这种建议并非空谈而是有所实践。
那张图我贴了很多次，后来被夫人批评我有“自我吹嘘”之嫌，因此这里就不放了。
我读文献的习惯，还是在陈家玮老师的启发下养成的。
初次见他，只觉得形象喜人。听了几次课，才觉得其一些观点很有见地，值得参考。
“一天读一篇文献，一年都有三百多篇文献，三年就积累了上千篇文献。有这么多的背景积累，写毕业论文有什么难的？”&lt;/p&gt;
&lt;p&gt;我是个单纯的人，听了觉得有道理，就身体力行了。于是从2013年到2016年，胡乱翻看了大约有一千多篇文献，其中概括读了全文的大约有一半左右。&lt;/p&gt;
&lt;p&gt;大家都是人，都是肉做的，不可能有正常人会有用之不竭的精力，至少我没有。&lt;/p&gt;
&lt;p&gt;所以大部分文章，其实我也只是胡乱看看。
翻看全文的那一小半，也不是逐字句精细抠读的。
最主要的，无非是摘要和图表。
摘要基本可以当做是一篇文章的剧透，好的文章读了摘要就能知道其中所用方法、所含数据、所得结论。&lt;/p&gt;
&lt;p&gt;图表我觉得是文章的骨架，地学领域的文章往往可以实现看图理解，只要把图能看懂，就已经能大概推测出文章的主要内容了。
走量其实只是初期的低端路线。
要想走得高远，应该还是得读高质量的文章，也好跟楷模学习。&lt;/p&gt;
&lt;p&gt;将文献库精简了一下，已经就只有几百篇用得上的还留着，估计接下来再精简一下就更少了。
不过无论如何，还是要先经过早期的积累阶段，这个过程中也能逐步建立起自己的阅读习惯和偏好等等。&lt;/p&gt;
&lt;h2&gt;2019年6月28日&lt;/h2&gt;
&lt;p&gt;此地民风淳朴。&lt;/p&gt;
&lt;p&gt;一些中小学学生上课喝水是被禁止的，家长对此不仅表示理解，还强烈支持，说学生就应该下课再喝水。&lt;/p&gt;
&lt;p&gt;人口渴了喝水本是基本人权，但对于此地的中小学生来说则是遥不可及。&lt;/p&gt;
&lt;p&gt;一个约摸有十一二岁的孩子，戴着厚厚眼镜，坐在那帮忙看守洗衣店。那些中年的家长在一旁打牌。&lt;/p&gt;
&lt;p&gt;询问得知那小朋友读小学六年级了。&lt;/p&gt;
&lt;p&gt;我问他学校里的老师有没有特别狗的，他说有的老师很狗有的还好。&lt;/p&gt;
&lt;p&gt;我又问她那狗的老师是科任教师还是班主任，他说都有。&lt;/p&gt;
&lt;p&gt;简短的回答让我觉得这孩子在学校应该是也遇到过一些不开心的事情。&lt;/p&gt;
&lt;p&gt;我问他有没有尝试过录下来证据维权，他说没办法学校禁止携带手机之类的设备。&lt;/p&gt;
&lt;p&gt;多年前我就想过，应该考虑弄一种类似执法记录仪的教学记录仪，允许学生们随时记录下教师在课堂上对孩子的一言一行一举一动，一旦遇到不公正待遇好方便维权。&lt;/p&gt;
&lt;p&gt;这样一来估计就不至于让孩子成为任人摆布又缺乏保护的极端弱势群体。&lt;/p&gt;
&lt;p&gt;有人可能会觉得这可能触碰教师权益。但师生之间明显学生群体是弱势一方，教师从事这个职业就应该准备好让自己的教学活动透明公开。学生随时可以直播，家长随时可以查看，才能构成公平正义保障人权的底线。&lt;/p&gt;
&lt;p&gt;那些对禁止学生上课喝水持有理解甚至强烈拥护立场的家长，往往也是经历过类似驯化而非常有服从精神的底层劳动者。他们甚至可能已成了那些压迫者的支持者和帮凶。可怜之人果然有可恨之处。&lt;/p&gt;
&lt;p&gt;当家长真容易，也不需要职业资格的认证和审核，甚至都可以泯灭一点点基本的人性，牺牲孩子的一些许人权。&lt;/p&gt;
&lt;p&gt;门卫大叔来此漂泊几十年，买了房落了户，住上了一个比较“上档次”的小区。&lt;/p&gt;
&lt;p&gt;他推荐我买那个小区的房子，说小区内的幼儿园一个月两三千块，是比较高端的选择，园中就读幼儿的家长都是“不一般的人”，幼儿园教学的人也都很“很厉害”，起码具有本科学历。&lt;/p&gt;
&lt;p&gt;没想到本科学历在这样一个省会城市会被如此看重。&lt;/p&gt;
&lt;p&gt;孩子读书入学要交“人情钱”，几乎是所遇到此地民众的“共识”。&lt;/p&gt;
&lt;p&gt;遇到一些老乡，往往先询问我一个月赚多少钱。我如实相告自己还没正式入职而且拿的工资估计也就在四五千左右。他们多是不相信的，会直说觉得这学历应该每个月赚一万。&lt;/p&gt;
&lt;p&gt;相比于前些年我去过的一些城市，这里总算不是每个人都吸烟了。但室内吸烟似乎还是一种“天经地义”，是“政治正确”。好在我和相关的负责人预先有过约定，遇到有吸烟的情景我可以回避。&lt;/p&gt;
&lt;p&gt;这地方的“攀比”还是很明显。进口车、合资车、国产车，大房子、小房子、学区房，大奖项、小奖项、先进称号，总是老乡之间比较常谈起的话题。&lt;/p&gt;
&lt;p&gt;世上有了“评比”这么个东西，真是“造福世人”。&lt;/p&gt;
&lt;h2&gt;2019年7月1日&lt;/h2&gt;
&lt;p&gt;这是在东北某高校的教师宿舍里面，有人将共享单车加了私锁。&lt;/p&gt;
&lt;p&gt;共享单车上私锁放进教师宿舍
可见公民素质并不一定随着学历而必然提高。&lt;/p&gt;
&lt;p&gt;其实类似这样的情形在东北这里并不少见。&lt;/p&gt;
&lt;p&gt;比如写着禁烟楼，但还是有教师会在办公室里面吸烟。&lt;/p&gt;
&lt;p&gt;不守规则的教师又能教出怎样的学生呢？&lt;/p&gt;
&lt;p&gt;东北是个神奇的地方，人们相信和推崇的往往是潜规则而不是明规则，遵守明规则会被看做是奇怪的人，而惊叹潜规则的无所不在又会被看做是浅薄无知的幼稚之人。&lt;/p&gt;
&lt;p&gt;这个地区和一线城市的一大差距就是这方面。&lt;/p&gt;
&lt;p&gt;其实在北京天津也都有给共享单车上私锁的情景，比如我在清华院里就遇到过。也存在办公室内吸烟的情况，比如学院路八大院中就有我很钦佩又熟识的院长这样做。&lt;/p&gt;
&lt;p&gt;区别是什么呢？&lt;/p&gt;
&lt;p&gt;我觉得最显著的区别是，在帝都，这些行为是见不得曝光的，是会多多少少让当事人心里有些愧疚感到不好意思的；而在东北，这些事情都是众人都容易理解的，甚至是事实上的政治正确。&lt;/p&gt;
&lt;p&gt;见贤思齐。&lt;/p&gt;
&lt;p&gt;一个高校，想要办成区域顶级，首先要看齐国内顶级，硬件条件不能一步成为MIT，但人文素养是可以提高和改进的。&lt;/p&gt;
&lt;p&gt;一个地区，想要发展成国内先进，首先要构建基本的人文素养。&lt;/p&gt;
&lt;p&gt;像上海学习搞垃圾分类，怕是对于朗斯普林的形象提升并不见得有本质作用。&lt;/p&gt;
&lt;p&gt;当权者决策者怎么可能不懂得这些浅显的道理？&lt;/p&gt;
&lt;p&gt;怕是他们所处之处也身不由己吧？&lt;/p&gt;
&lt;p&gt;让他们身不由己的，其实正是他们最应该挑战的敌人。&lt;/p&gt;
&lt;p&gt;我估计他们都不敢，换我我也不敢。&lt;/p&gt;
&lt;p&gt;当地人民过马路，有的时候是不惧怕晚高峰的，更不在意灯这类细节，只要有勇气，天下无不可为！&lt;/p&gt;
&lt;h2&gt;2019年7月10日&lt;/h2&gt;
&lt;p&gt;朗斯普林的空气真好。待在这里的第十四天，除了中间有一两天下了些暴雨，大部分时候都是蓝天白云。&lt;/p&gt;
&lt;p&gt;白天在路上经常能偶遇小松鼠，晚上能看到星星或者月亮。&lt;/p&gt;
&lt;p&gt;戴着眼镜的我能看到上面的隐隐轮廓。&lt;/p&gt;
&lt;p&gt;当年第一次拍月亮用的是35-105mm 变焦镜头的长焦端。这次再拍月亮，还是用的35-105mm 的长焦端。第一张是100%，第二张是原图。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://pic3.zhimg.com/v2-5da0c1001afa0b54993a0f2f8939a082_r.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://pic1.zhimg.com/v2-4d6fea50dc915d509d4b97aae58579a0_r.jpg"&gt;&lt;/p&gt;
&lt;p&gt;小时候我从来没能看清楚过月亮，后来戴了眼镜看东西清楚了却没注意看过月亮。&lt;/p&gt;
&lt;p&gt;地球很幸运，不算太孤单。&lt;/p&gt;
&lt;p&gt;曾经特别想以后买个顶楼的房子，架设望远镜跟我儿子一起看。&lt;/p&gt;
&lt;p&gt;哎，慢慢攒钱吧。&lt;/p&gt;
&lt;h2&gt;2019年7月21日&lt;/h2&gt;
&lt;p&gt;悲伤的消息是学生放假后食堂和饭铺都将要关门了。&lt;/p&gt;
&lt;p&gt;书包带还断开了，好在新安装的自行车后座救了一下，一些复印件还是沾了雨水，好在原件都在塑料袋内。&lt;/p&gt;
&lt;p&gt;当年的小伙伴们，有的去了大山里，有的跑到大海边，然后众人纷纷成为房奴和奶爸宝妈，成为当年我们眼中的那些师兄师姐，成为中年人。&lt;/p&gt;
&lt;p&gt;某财经高校的青椒在吃烤串很开心地说他终于课时费一节八十块了，饭馆的阿姨惊讶于他找有编制的工作居然不用走后门拖关系。&lt;/p&gt;
&lt;p&gt;当公务员哥们感慨扶贫保证金，羡慕“清闲”的高校教职；高校的青椒感叹“自科”水深门派林立羡慕收入更高的事业单位员工；事业单位工作的羡慕外企收入高又办公室没人抽烟；外企的兄弟羡慕经常“令箭”在手的公务员。&lt;/p&gt;
&lt;p&gt;现在一脸悠闲气派非常指点江山的领导也曾经是个战战兢兢生怕犯错的懵懂青年，见了更多资源在手的“上级”也还是客客气气满面春风。&lt;/p&gt;
&lt;p&gt;为了活着，所有人都尽最大努力，戒骄戒躁，没什么过不去的。&lt;/p&gt;
&lt;p&gt;这样的故事应该是来去不停持续重复吧？&lt;/p&gt;
&lt;p&gt;“凭本事借的钱，为什么要还？”
“哈哈哈哈。”&lt;/p&gt;</content><category term="Story"></category><category term="Camera"></category><category term="Life"></category><category term="Story"></category><category term="Photo"></category></entry><entry><title>天际之旅</title><link href="/tian-ji-zhi-lu.html" rel="alternate"></link><published>2019-06-04T10:20:00+08:00</published><updated>2019-06-04T10:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2019-06-04:/tian-ji-zhi-lu.html</id><summary type="html">&lt;p&gt;骏马缓慢向前奔跑，逐渐加快，两旁的景物匆匆向后退去。
这片土地上出现了很多新事物，高大的风车，漫山遍野，覆盖了难以耕种的丘陵。&lt;/p&gt;
&lt;p&gt;外界都说天际经济衰落正如其冬季的寒冷。
我此次回乡是在初夏，只觉得雪漫城一早一晚还有些凉意，白天几乎和帝都一样热气腾腾。&lt;/p&gt;
&lt;p&gt;街上往来人，也与帝都一般。&lt;/p&gt;
&lt;p&gt;记得帝国人也常常会调侃天际诺德人衣着和言谈举止都有一种极其醒目的土气。
此次我却觉得已经难以将诺德人和帝国人区分了。&lt;/p&gt;
&lt;p&gt;我将龙裔所提供的带有阿卡托什祝福的卷轴呈上后，灰胡子大师们接见了我。
灰胡子统领看上去充满威严，我知道是他召唤了我。他严厉地告诫我不要重蹈米拉克的覆辙，又再三对我强调了纪律的重要性。我也反复跟他强调自己要求躲避火魔法的侵扰。然后我们达成了初步的一致。我试图和他交换纹章，他推脱自己很忙。
整个谈话过程中，他没有笑过。我想他一定很紧张，他必然是生怕我又是一个像米拉克一样的叛逆者。
他反复像我强调：“你要知道，现在学习龙吼的人还是很多的，我招募的时候是可以挑着选择的，如果你不能符合我的规则，就要面临淘汰。”我当时本来想说到自己是魔法和龙吼兼修而且以二者合用而与众人迥然不同，后来又觉得这样言谈轻佻狂妄，就没做声，只是连声答应。&lt;/p&gt;
&lt;p&gt;大魔导师稍后也和我见了面。我一见到他笑意盈盈的面孔，就觉得熟悉，然后想起当时在初选的角斗结束后与之有过一面之缘。他也是诺德人，但不像寻常诺德人那样魁梧，身材紧凑结实，一张笑脸让人觉得亲近。他说了说自己所从事的空间魔法方面的研究，然后又谈了谈我当初也参与过的指南星的魔法项目，在发觉我对此不熟悉之后就转而谈起了城里的学区房和体育馆 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;骏马缓慢向前奔跑，逐渐加快，两旁的景物匆匆向后退去。
这片土地上出现了很多新事物，高大的风车，漫山遍野，覆盖了难以耕种的丘陵。&lt;/p&gt;
&lt;p&gt;外界都说天际经济衰落正如其冬季的寒冷。
我此次回乡是在初夏，只觉得雪漫城一早一晚还有些凉意，白天几乎和帝都一样热气腾腾。&lt;/p&gt;
&lt;p&gt;街上往来人，也与帝都一般。&lt;/p&gt;
&lt;p&gt;记得帝国人也常常会调侃天际诺德人衣着和言谈举止都有一种极其醒目的土气。
此次我却觉得已经难以将诺德人和帝国人区分了。&lt;/p&gt;
&lt;p&gt;我将龙裔所提供的带有阿卡托什祝福的卷轴呈上后，灰胡子大师们接见了我。
灰胡子统领看上去充满威严，我知道是他召唤了我。他严厉地告诫我不要重蹈米拉克的覆辙，又再三对我强调了纪律的重要性。我也反复跟他强调自己要求躲避火魔法的侵扰。然后我们达成了初步的一致。我试图和他交换纹章，他推脱自己很忙。
整个谈话过程中，他没有笑过。我想他一定很紧张，他必然是生怕我又是一个像米拉克一样的叛逆者。
他反复像我强调：“你要知道，现在学习龙吼的人还是很多的，我招募的时候是可以挑着选择的，如果你不能符合我的规则，就要面临淘汰。”我当时本来想说到自己是魔法和龙吼兼修而且以二者合用而与众人迥然不同，后来又觉得这样言谈轻佻狂妄，就没做声，只是连声答应。&lt;/p&gt;
&lt;p&gt;大魔导师稍后也和我见了面。我一见到他笑意盈盈的面孔，就觉得熟悉，然后想起当时在初选的角斗结束后与之有过一面之缘。他也是诺德人，但不像寻常诺德人那样魁梧，身材紧凑结实，一张笑脸让人觉得亲近。他说了说自己所从事的空间魔法方面的研究，然后又谈了谈我当初也参与过的指南星的魔法项目，在发觉我对此不熟悉之后就转而谈起了城里的学区房和体育馆，并且与我相约同去打球。&lt;/p&gt;
&lt;p&gt;离开了龙吼峰顶，我回到了河木镇，抱了抱肉嘟嘟的儿子，给他拍了一系列照片，发给了夫人。
然后又准备了措辞来像未能投奔的学城的帝国大学士和大魔法师表示歉意。&lt;/p&gt;
&lt;p&gt;如果留在帝都，一年的薪资大约有二十万金币；现在回到天际，可能一年都达不到五万金币。&lt;/p&gt;
&lt;p&gt;要等待雪漫城的元老院对任命进行公示，然后才能在阿卡托什神庙签订下我的契约。&lt;/p&gt;
&lt;p&gt;帝都学城的结业仪式也没有个准日子，一天之内朝令夕改了三番五次的。
我只能赶紧赶回来，可能还需要去开具一份奥杜因的文案。&lt;/p&gt;</content><category term="Story"></category></entry><entry><title>My Junck Poems</title><link href="/my-junck-poems.html" rel="alternate"></link><published>2019-05-06T15:24:52+08:00</published><updated>2019-05-06T15:24:52+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2019-05-06:/my-junck-poems.html</id><summary type="html">&lt;p&gt;四年前的一天，早上起来看到蓝天之上的鳞状云。
突然想起一句『北地风吹云卷积』。
感觉似乎是自己之前写过的，又怕是别人的，担心自己记错了。
于是赶紧去网上搜索，发现确实不是别人的句子。
可惜我又忘了后续几句我怎么写的了，唉，等会我再胡编一下。
这件事让我想起来之前自己写过很多乱七八糟的句子。
现在那些站点都没了，句子也没了，怪可惜的，应该留着记录一下。
早先的时候就是无病呻吟乱扯淡，后来看到徐康老先生的作品《尘烟居诗稿》，深为触动，因此效仿来做一下记录。
先把鳞状云这个补齐。&lt;/p&gt;
&lt;h2&gt;2015年10月&lt;/h2&gt;
&lt;h2&gt;大风&lt;/h2&gt;
&lt;p&gt;北地风吹云卷积，长街车马路人稀；
寒霜尘土飞孤叶，楼宇萧条无鸟啼。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天气转冷，大风肆虐，空中云彩鱼鳞状了。简直冻死了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;2015年08月三段&lt;/h2&gt;
&lt;h3&gt;铁笛&lt;/h3&gt;
&lt;p&gt;明月依稀照沉沙，轻风古树翠无瑕；
白衣渡水临沧海，抚卷吹笛映莲花。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写这个的时候是我新买了一只金属材质的中音G调哨笛。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;功名&lt;/h3&gt;
&lt;p&gt;立马横刀壮士出，平沙落日纵驰突；
将军百战全无义，祸起庐山论罪书。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;去某处曾经批斗过某老总的一栋建筑物，回来路上看到伟光正的宣传字样有感。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;抚琴&lt;/h3&gt;
&lt;p&gt;碧海孤帆横日月，长风末路落烟尘 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;四年前的一天，早上起来看到蓝天之上的鳞状云。
突然想起一句『北地风吹云卷积』。
感觉似乎是自己之前写过的，又怕是别人的，担心自己记错了。
于是赶紧去网上搜索，发现确实不是别人的句子。
可惜我又忘了后续几句我怎么写的了，唉，等会我再胡编一下。
这件事让我想起来之前自己写过很多乱七八糟的句子。
现在那些站点都没了，句子也没了，怪可惜的，应该留着记录一下。
早先的时候就是无病呻吟乱扯淡，后来看到徐康老先生的作品《尘烟居诗稿》，深为触动，因此效仿来做一下记录。
先把鳞状云这个补齐。&lt;/p&gt;
&lt;h2&gt;2015年10月&lt;/h2&gt;
&lt;h2&gt;大风&lt;/h2&gt;
&lt;p&gt;北地风吹云卷积，长街车马路人稀；
寒霜尘土飞孤叶，楼宇萧条无鸟啼。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天气转冷，大风肆虐，空中云彩鱼鳞状了。简直冻死了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;2015年08月三段&lt;/h2&gt;
&lt;h3&gt;铁笛&lt;/h3&gt;
&lt;p&gt;明月依稀照沉沙，轻风古树翠无瑕；
白衣渡水临沧海，抚卷吹笛映莲花。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写这个的时候是我新买了一只金属材质的中音G调哨笛。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;功名&lt;/h3&gt;
&lt;p&gt;立马横刀壮士出，平沙落日纵驰突；
将军百战全无义，祸起庐山论罪书。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;去某处曾经批斗过某老总的一栋建筑物，回来路上看到伟光正的宣传字样有感。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;抚琴&lt;/h3&gt;
&lt;p&gt;碧海孤帆横日月，长风末路落烟尘；
白云万里轻逐马，夜雨千山慢抚琴。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很久不练琴，偶然拿起来把玩，觉得浪费了很多时间，应该专注自己觉得有意义的事情。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;——————————————————————————————————&lt;/p&gt;
&lt;h2&gt;2019年4月18日&lt;/h2&gt;
&lt;h3&gt;致敬杜甫&lt;/h3&gt;
&lt;p&gt;豺狼在邑龙在野，公侯轻蔑半残躯。
不敢长街高声语，慎勿出口他人狙。
昨夜东风吹明月，书生俊逸满京畿。
昆仑万仞凭绝顶，昔何叱咤今何愚。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;某院所应聘不第，说审查不合格，多半是因为不能出野外。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;地科院之旅&lt;/h3&gt;
&lt;p&gt;北地磨枪十五载，凭栏霜雪顾寒枝。
卢龙节度躬相请，陇右范阳求所赐。
朔方漫漫终非所，独往长安待沽之。
太白仗剑行天下，枉自席前奉作诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;闲来无事胡乱说&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;——————————————————————————————————&lt;/p&gt;
&lt;h2&gt;2019年5月6日&lt;/h2&gt;
&lt;h3&gt;喜迎A股大跌&lt;/h3&gt;
&lt;p&gt;城外桃花露雨湿，群鸦绕树不得枝；
春光放眼山河翠，正是英雄策马时。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A股大跌，喜出望外。&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Story"></category><category term="Junck"></category><category term="Poem"></category><category term="Story"></category></entry><entry><title>Elle Numerical Simulation Platform Installation Guide on Ubuntu 18.04</title><link href="/elle-numerical-simulation-platform-installation-guide-on-ubuntu-1804.html" rel="alternate"></link><published>2019-05-02T10:57:29+08:00</published><updated>2019-05-02T10:57:29+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2019-05-02:/elle-numerical-simulation-platform-installation-guide-on-ubuntu-1804.html</id><summary type="html">&lt;p&gt;The original installation guide on http://elle.ws/installation only works on Ubuntu 16.04, and does not work well on Ubuntu 18.04. So there come this guide.&lt;/p&gt;
&lt;h2&gt;Install Dependicies&lt;/h2&gt;
&lt;h4&gt;Open terminal and run:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install gfortran gcc mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev libgtk2.0-0 zlibc zlib1g make build-essential xorg-dev …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;The original installation guide on http://elle.ws/installation only works on Ubuntu 16.04, and does not work well on Ubuntu 18.04. So there come this guide.&lt;/p&gt;
&lt;h2&gt;Install Dependicies&lt;/h2&gt;
&lt;h4&gt;Open terminal and run:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install gfortran gcc mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev libgtk2.0-0 zlibc zlib1g make build-essential xorg-dev libmotif-common libmotif-dev xutils-dev libgtk2.0-dev cvs xutils libx11-dev libxt-dev libxpm-dev x11proto-print-dev x11proto-xext-dev libxext-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that the original version use &lt;code&gt;libmotif4&lt;/code&gt;, which has been replaced by &lt;code&gt;libmotif-common&lt;/code&gt; in Ubuntu 18.04.&lt;/p&gt;
&lt;h4&gt;Then run:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install  libgsl-dev libgsl23 libgslcblas0  libgsl-dbg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that the original version use &lt;code&gt;libgsl2&lt;/code&gt;, which has been replaced by &lt;code&gt;libgsl23 libgslcblas0  libgsl-dbg&lt;/code&gt; in Ubuntu 18.04.&lt;/p&gt;
&lt;h2&gt;wxWidgets 2.8.12&lt;/h2&gt;
&lt;h4&gt;Download wxWidgets&lt;/h4&gt;
&lt;p&gt;Notice that only 2.8.12 works for elle！&lt;/p&gt;
&lt;p&gt;Visit http://www.wxwidgets.org/downloads/ to download wxWidgets-2.8.12.zip&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://github.com/wxWidgets/wxWidgets/releases/download/v2.8.12/wxWidgets-2.8.12.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Install wxWidgets&lt;/h4&gt;
&lt;p&gt;Here comes a trick! &lt;code&gt;wxgtk2.8 doesn't compile with the new gcc, needs -std=gnu++98&lt;/code&gt;, so we need to add &lt;code&gt;export CFLAGS=-std=c99 CXXFLAGS=-std=c++98&lt;/code&gt; in the terminal firstly and then configure it by running &lt;code&gt;./configure --prefix=/usr&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;ref: https://bugs.alpinelinux.org/issues/6361 and https://forums.wxwidgets.org/viewtopic.php?t=43118&lt;/h5&gt;
&lt;p&gt;Once the wxWidgets 2.8.12 downloaded, decompress the zip file, and cd into the directory in terminal then type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-std&lt;span class="o"&gt;=&lt;/span&gt;c99 &lt;span class="nv"&gt;CXXFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-std&lt;span class="o"&gt;=&lt;/span&gt;c++98
./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Clone and Install ELLE&lt;/h2&gt;
&lt;h4&gt;Clone the elle-git&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/
git clone https://git.code.sf.net/p/elle/git elle-git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then the &lt;code&gt;elle-git&lt;/code&gt; folder which contains &lt;code&gt;elle&lt;/code&gt; folder will be downloaded.
Here we put the &lt;code&gt;elle&lt;/code&gt; folder to your &lt;code&gt;/home/&lt;/code&gt; location. Of course you can change it into another location, but you will need to modify following commands to setting up the &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then cd into the &lt;code&gt;elle-git&lt;/code&gt; folder, and copy the whole &lt;code&gt;elle&lt;/code&gt; folder to &lt;code&gt;/home/&lt;/code&gt; and become &lt;code&gt;/home/elle&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; elle-git 
cp -R elle /home/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we have everything we need at &lt;code&gt;/home/elle&lt;/code&gt; folder.&lt;/p&gt;
&lt;h4&gt;Install elle&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/elle
./install.sh wx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If no errors, the installation of &lt;code&gt;elle&lt;/code&gt; succeeded!
Then set up the &lt;code&gt;PATH&lt;/code&gt; by running following commands in terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:/home/elle/elle/binwx
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/lib:/usr/lib:/usr/local/lib
&lt;span class="nv"&gt;ELLEPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/elle/elle/binwx
&lt;span class="nb"&gt;export&lt;/span&gt; PATH LD_LIBRARY_PATH ELLEPATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The original installation guide use &lt;code&gt;/home/your_user/elle&lt;/code&gt;, here we put it at &lt;code&gt;/home/elle&lt;/code&gt; instead.
&lt;code&gt;your_user&lt;/code&gt; here means the user location of your system.
For example, my user name is &lt;code&gt;fred&lt;/code&gt;, then I can use &lt;code&gt;/home/fred/elle&lt;/code&gt; instead of &lt;code&gt;/home/elle&lt;/code&gt;, which requires me to copy the &lt;code&gt;elle&lt;/code&gt; folder, which is contained in the cloned &lt;code&gt;elle-git&lt;/code&gt; folder, to &lt;code&gt;/home/fred/elle&lt;/code&gt; instead of &lt;code&gt;/home/elle&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you donnot get a clue about the path or folder, that is OK. Just follow my codes above and put it to &lt;code&gt;/home/elle&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Test installed elle&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/elle/bin
./showelle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the gui shows up, it works!&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;elle&lt;/code&gt; files under &lt;code&gt;elle\examples&lt;/code&gt; might work, but those under &lt;code&gt;elle-git\experiments&lt;/code&gt; may give you a &lt;code&gt;Segmentation fault (core dumped)&lt;/code&gt; error. I donnot know why because this &lt;code&gt;elle&lt;/code&gt; is not written by me, and there seems not to be any detailed documents available on their &lt;a href="elle.ws"&gt;elle.ws&lt;/a&gt; website. Go ask them for help please.&lt;/p&gt;</content><category term="Software"></category></entry><entry><title>数值模拟平台软件 Elle 安装指南 Ubuntu 18.04</title><link href="/shu-zhi-mo-ni-ping-tai-ruan-jian-elle-an-zhuang-zhi-nan-ubuntu-1804.html" rel="alternate"></link><published>2019-05-02T10:57:29+08:00</published><updated>2019-05-02T10:57:29+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2019-05-02:/shu-zhi-mo-ni-ping-tai-ruan-jian-elle-an-zhuang-zhi-nan-ubuntu-1804.html</id><summary type="html">&lt;p&gt;在 http://elle.ws/installation 的原版安装指南只适用于 Ubuntu 16.04, 不适合 Ubuntu 18.04.&lt;/p&gt;
&lt;h2&gt;安装依赖包&lt;/h2&gt;
&lt;h4&gt;打开终端输入:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install gfortran gcc mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev libgtk2.0-0 zlibc zlib1g make build-essential xorg-dev libmotif-common libmotif-dev xutils-dev libgtk2.0-dev cvs xutils libx11-dev libxt-dev libxpm-dev x11proto-print-dev x11proto-xext-dev libxext-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;原版安装指南中使用的 &lt;code&gt;libmotif4&lt;/code&gt; 仅用于 Ubuntu 16.04，现在在 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;在 http://elle.ws/installation 的原版安装指南只适用于 Ubuntu 16.04, 不适合 Ubuntu 18.04.&lt;/p&gt;
&lt;h2&gt;安装依赖包&lt;/h2&gt;
&lt;h4&gt;打开终端输入:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install gfortran gcc mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev libgtk2.0-0 zlibc zlib1g make build-essential xorg-dev libmotif-common libmotif-dev xutils-dev libgtk2.0-dev cvs xutils libx11-dev libxt-dev libxpm-dev x11proto-print-dev x11proto-xext-dev libxext-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;原版安装指南中使用的 &lt;code&gt;libmotif4&lt;/code&gt; 仅用于 Ubuntu 16.04，现在在 Ubuntu 18.04 下要用 &lt;code&gt;libmotif-common&lt;/code&gt; 替代.&lt;/p&gt;
&lt;h4&gt;然后运行:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install  libgsl-dev libgsl23 libgslcblas0  libgsl-dbg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;原版安装指南中使用的 &lt;code&gt;libgsl2&lt;/code&gt; 仅用于 Ubuntu 16.04，现在在 Ubuntu 18.04 下要用  &lt;code&gt;libgsl23 libgslcblas0  libgsl-dbg&lt;/code&gt; 替代.&lt;/p&gt;
&lt;h2&gt;安装wxWidgets 2.8.12&lt;/h2&gt;
&lt;h4&gt;下载 旧版本的 wxWidgets&lt;/h4&gt;
&lt;p&gt;只能用很古老的旧版本 2.8.12！&lt;/p&gt;
&lt;p&gt;访问 http://www.wxwidgets.org/downloads/ 下载 wxWidgets-2.8.12.zip&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://github.com/wxWidgets/wxWidgets/releases/download/v2.8.12/wxWidgets-2.8.12.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;安装 wxWidgets&lt;/h4&gt;
&lt;p&gt;这里一定要注意! &lt;code&gt;wxgtk2.8 根本不能兼容最新的标准, 需要使用上世纪的标准才行 -std=gnu++98&lt;/code&gt;, 所以要先运行 &lt;code&gt;export CFLAGS=-std=c99 CXXFLAGS=-std=c++98&lt;/code&gt;， 然后运行 &lt;code&gt;./configure --prefix=/usr&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;上述信息参考: https://bugs.alpinelinux.org/issues/6361 and https://forums.wxwidgets.org/viewtopic.php?t=43118&lt;/h5&gt;
&lt;p&gt;下载完毕了解压缩，cd 命令进入到 wxWidgets-2.8.12 目录，然后依次运行下面的命令来安装:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-std&lt;span class="o"&gt;=&lt;/span&gt;c99 &lt;span class="nv"&gt;CXXFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-std&lt;span class="o"&gt;=&lt;/span&gt;c++98
./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;安装 ELLE&lt;/h2&gt;
&lt;h4&gt;先克隆 elle-git&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/
git clone https://git.code.sf.net/p/elle/git elle-git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这里的&lt;code&gt;elle-git&lt;/code&gt; 目录包含了一个 &lt;code&gt;elle&lt;/code&gt; 目录，这个 &lt;code&gt;elle&lt;/code&gt; 目录才是最关键的。
这里我把 &lt;code&gt;elle&lt;/code&gt; 目录就放进 &lt;code&gt;/home/&lt;/code&gt; 位置了，这样后面就不用折腾什么用户名了。原版指南里面是把这个文件夹放进个人目录，可是这样就要每次要求用户根据自己个人目录的不同来调整后面的命令，对一问三不知的小白来说不是闹呢么？&lt;/p&gt;
&lt;p&gt;所以这里就 cd 进入 &lt;code&gt;elle-git&lt;/code&gt; 目录, 然后复制整个 &lt;code&gt;elle&lt;/code&gt; 目录到 &lt;code&gt;/home/&lt;/code&gt;，于是就有了 &lt;code&gt;/home/elle&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; elle-git 
cp -R elle /home/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;要安装用的东西就都在 &lt;code&gt;/home/elle&lt;/code&gt; 目录内了.&lt;/p&gt;
&lt;h4&gt;终于开始安装了&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/elle
./install.sh wx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;没报错的话就说明安装成功了。然后还要设置环境变量 &lt;code&gt;PATH&lt;/code&gt;，在终端中运行下面的命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:/home/elle/elle/binwx
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/lib:/usr/lib:/usr/local/lib
&lt;span class="nv"&gt;ELLEPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/elle/elle/binwx
&lt;span class="nb"&gt;export&lt;/span&gt; PATH LD_LIBRARY_PATH ELLEPATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;官网文档说让你用 &lt;code&gt;/home/your_user/elle&lt;/code&gt;,而这里我们直接就用了 &lt;code&gt;/home/elle&lt;/code&gt; .
&lt;code&gt;your_user&lt;/code&gt; 意思是你自己系统上面的家目录的用户名，比如我的用户名是 &lt;code&gt;fred&lt;/code&gt;, 那么就要使用 &lt;code&gt;/home/fred/elle&lt;/code&gt; 而不是 &lt;code&gt;/home/elle&lt;/code&gt;, 这也就需要之前的步骤中把&lt;code&gt;elle&lt;/code&gt; 目录复制到 &lt;code&gt;/home/fred/elle&lt;/code&gt; 而不是 &lt;code&gt;/home/elle&lt;/code&gt;。你自己要是搞得清楚用户目录和环境变量设置，完全可以随意设置。&lt;/p&gt;
&lt;p&gt;你要是纯小白搞不懂什么家目录，就按照上文中的命令，使用 &lt;code&gt;/home/elle&lt;/code&gt; 吧。&lt;/p&gt;
&lt;h4&gt;测试安装好的 elle&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/elle/bin
./showelle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果图形界面出现了，就是安装好了。
不过可能会出现很多问题，比如 &lt;code&gt;elle&lt;/code&gt; 目录下的 &lt;code&gt;elle\examples&lt;/code&gt; 中的一些 &lt;code&gt;elle&lt;/code&gt;格式文件就可以运行，而 &lt;code&gt;elle-git\experiments&lt;/code&gt; 下的打开可能就会出现 &lt;code&gt;Segmentation fault (core dumped)&lt;/code&gt; 的报错。这你别问我，这软件也不是我开发的，官网也没发现详细的说明手册，自己想办法去吧。&lt;/p&gt;</content><category term="Software"></category></entry><entry><title>在大学学什么</title><link href="/zai-da-xue-xue-shi-yao.html" rel="alternate"></link><published>2019-03-26T00:00:00+08:00</published><updated>2019-03-26T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2019-03-26:/zai-da-xue-xue-shi-yao.html</id><summary type="html">&lt;p&gt;老七要毕业了，说这几年在大学没学到什么。 
周围不少类似年龄段的人也都有类似的说法。
我问过他们，在大学里面他们想要学到什么，结果他们多数是纷纷回答不知道。 
这问题就难了。 不知道想要学什么，也不太清楚应该学什么，几年过去结果就成了没学到什么。&lt;/p&gt;
&lt;p&gt;在大学里都学什么呢?&lt;/p&gt;
&lt;p&gt;刚刚问夫人，她回答说当时就想着把报考的专业课程学好，然后这些年来她也是这么做的，毕业后也是找了专业相关的工作。 可见对于她这样动机明确/目标清晰/执行力充足的人来说，这实在不算是什么问题。&lt;/p&gt;
&lt;p&gt;与之相反，我刚入学的时候就是缺乏清晰的目标，看什么都好奇，什么都想了解一点。 结果就是胡乱读了一些书，受到激发有了很多稀奇古怪的想法，但没有什么真正的见识。 如此看来我在大学最大的收获就是学会了读书。&lt;/p&gt;
&lt;p&gt;不对，这么说还不确切。并不是学会了读书，应该是学会了如何找到书来读。嗯，这应该是我这些年在大学里面学到的主要技能了，而学到的其他内容都是凭借此技能为基础才实现的。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.cycleuser.org/why-i-translate-english-books-into-chinese.html"&gt;我像祥林嫂一样说过很多次，十几岁的时候，在县城图书馆里面抄写自己感兴趣的若干书籍，就被管理人员赶出去&lt;/a&gt;。到大一的时候，错过了办理图书馆借阅卡的机会，我非常悲伤，以为自己要错过图书馆中的宝贵资源。&lt;/p&gt;
&lt;p&gt;好在这时候我发现了学校有数字图书资源，提供了超星图书馆，还有各种文献资料的检索下载服务。
这东西好啊,找个有校园网的地方安静地打开电脑就可以随时下载翻阅各种有意思的读物，完全不用去图书馆排队借书还有忍受他人长期不归还带来的困扰。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Read/超星.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Read/摄影术.png"&gt;&lt;/p&gt;
&lt;p&gt;然而超星上面旧书很多,新出版的却少见 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;老七要毕业了，说这几年在大学没学到什么。 
周围不少类似年龄段的人也都有类似的说法。
我问过他们，在大学里面他们想要学到什么，结果他们多数是纷纷回答不知道。 
这问题就难了。 不知道想要学什么，也不太清楚应该学什么，几年过去结果就成了没学到什么。&lt;/p&gt;
&lt;p&gt;在大学里都学什么呢?&lt;/p&gt;
&lt;p&gt;刚刚问夫人，她回答说当时就想着把报考的专业课程学好，然后这些年来她也是这么做的，毕业后也是找了专业相关的工作。 可见对于她这样动机明确/目标清晰/执行力充足的人来说，这实在不算是什么问题。&lt;/p&gt;
&lt;p&gt;与之相反，我刚入学的时候就是缺乏清晰的目标，看什么都好奇，什么都想了解一点。 结果就是胡乱读了一些书，受到激发有了很多稀奇古怪的想法，但没有什么真正的见识。 如此看来我在大学最大的收获就是学会了读书。&lt;/p&gt;
&lt;p&gt;不对，这么说还不确切。并不是学会了读书，应该是学会了如何找到书来读。嗯，这应该是我这些年在大学里面学到的主要技能了，而学到的其他内容都是凭借此技能为基础才实现的。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.cycleuser.org/why-i-translate-english-books-into-chinese.html"&gt;我像祥林嫂一样说过很多次，十几岁的时候，在县城图书馆里面抄写自己感兴趣的若干书籍，就被管理人员赶出去&lt;/a&gt;。到大一的时候，错过了办理图书馆借阅卡的机会，我非常悲伤，以为自己要错过图书馆中的宝贵资源。&lt;/p&gt;
&lt;p&gt;好在这时候我发现了学校有数字图书资源，提供了超星图书馆，还有各种文献资料的检索下载服务。
这东西好啊,找个有校园网的地方安静地打开电脑就可以随时下载翻阅各种有意思的读物，完全不用去图书馆排队借书还有忍受他人长期不归还带来的困扰。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Read/超星.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Read/摄影术.png"&gt;&lt;/p&gt;
&lt;p&gt;然而超星上面旧书很多,新出版的却少见.这时候很幸运赶上了亚马逊推出了Kindle电纸书以及Kindle商店.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Read/Kindle.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Read/地球化学.png"&gt;&lt;/p&gt;
&lt;p&gt;从这以后，如果想学习什么东西，我就先从各地搜集电子书籍来阅读。
我想大部分高校，就算经费再紧张，应该也还是会有图书资源的。 如果读了几年，说自己没学到什么，怕是就没有对这些资源加以利用。 就好像是来到一个堆满了食材食谱的仓库，却不去照着食谱做饭菜，而是天天喝糖水，说这段日子什么都没吃到。 非不能也是不为也，自己不学，自然学不到什么。 哪怕是像我一样不知道学什么，通过培养个读书的习惯，也多少能学会写几行粗蠢的代码来实现一些简单的用途。
什么都没学到，怕不是每天浑浑噩噩无所事事度日? 总是应该学到点什么的，如果觉得什么都没学到，多半是人本身的原因。
我见过一些青少年，被稍加批评，就彻底自暴自弃，更加衰颓。 面对老七，我不忍心批评他什么，怕打击到他年轻人脆弱的自尊。 也就只能宽慰他几句，同时加以鼓励，希望他不走入歧途。&lt;/p&gt;
&lt;p&gt;那么看到这些杂乱文字的你，在大学期间，学到了什么呢？&lt;/p&gt;</content><category term="Story"></category><category term="Memory"></category><category term="Story"></category></entry><entry><title>PyOpenCL Installation on Windows</title><link href="/pyopencl-installation-on-windows.html" rel="alternate"></link><published>2019-01-31T21:53:21+08:00</published><updated>2019-01-31T21:53:21+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2019-01-31:/pyopencl-installation-on-windows.html</id><summary type="html">&lt;h1&gt;Windows系统下安装PyOpenCL&lt;/h1&gt;
&lt;h2&gt;挣脱CUDA&lt;/h2&gt;
&lt;p&gt;两年多以前,我翻译了&lt;a href="https://zhuanlan.zhihu.com/p/32062796"&gt;PyCUDA Tutorial 的中文版&lt;/a&gt;,还建立了一个&lt;a href="https://github.com/Kivy-CN/PyCUDA-CN"&gt;Github Repo&lt;/a&gt;.但后来一直忙其他事情,也没跟得上更新进度.&lt;/p&gt;
&lt;p&gt;CUDA确实很美好,但从Titan X开始就眼看着老黄将双精度浮点数(Float Point 64bit,缩写为FP64)砍到没法用,让我这样买不起Tesla的人很无奈.虽然还有初代白泰坦的1.3 ~ 1.5 TFLOPS的FP64,但毕竟显卡核心时代久远,目前存世的良品有限,且功耗感人.&lt;/p&gt;
&lt;p&gt;反观AMD阵营,根据&lt;a href="https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units"&gt;维基百科上面的AMD显卡核心页面&lt;/a&gt;的数据,RX580 有385.9GFLOPS的FP64, 而 Vega64 有792GFLOPS的FP64,虽然不是很高,但总算能用.&lt;/p&gt;
&lt;p&gt;为了双精度,只能尝试挣脱CUDA的束缚,试试OpenCL了.&lt;/p&gt;
&lt;h2&gt;PyOpenCL&lt;/h2&gt;
&lt;p&gt;由于我这种外行人没有雄厚的代码实力,只会一点基础的 Python,就只能选择 PyOpenCL …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Windows系统下安装PyOpenCL&lt;/h1&gt;
&lt;h2&gt;挣脱CUDA&lt;/h2&gt;
&lt;p&gt;两年多以前,我翻译了&lt;a href="https://zhuanlan.zhihu.com/p/32062796"&gt;PyCUDA Tutorial 的中文版&lt;/a&gt;,还建立了一个&lt;a href="https://github.com/Kivy-CN/PyCUDA-CN"&gt;Github Repo&lt;/a&gt;.但后来一直忙其他事情,也没跟得上更新进度.&lt;/p&gt;
&lt;p&gt;CUDA确实很美好,但从Titan X开始就眼看着老黄将双精度浮点数(Float Point 64bit,缩写为FP64)砍到没法用,让我这样买不起Tesla的人很无奈.虽然还有初代白泰坦的1.3 ~ 1.5 TFLOPS的FP64,但毕竟显卡核心时代久远,目前存世的良品有限,且功耗感人.&lt;/p&gt;
&lt;p&gt;反观AMD阵营,根据&lt;a href="https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units"&gt;维基百科上面的AMD显卡核心页面&lt;/a&gt;的数据,RX580 有385.9GFLOPS的FP64, 而 Vega64 有792GFLOPS的FP64,虽然不是很高,但总算能用.&lt;/p&gt;
&lt;p&gt;为了双精度,只能尝试挣脱CUDA的束缚,试试OpenCL了.&lt;/p&gt;
&lt;h2&gt;PyOpenCL&lt;/h2&gt;
&lt;p&gt;由于我这种外行人没有雄厚的代码实力,只会一点基础的 Python,就只能选择 PyOpenCL 了.&lt;/p&gt;
&lt;p&gt;PyOpenCL 的官网在 &lt;a href="https://mathema.tician.de/software/pyopencl/"&gt;https://mathema.tician.de/software/pyopencl/&lt;/a&gt;. 其&lt;a href="https://wiki.tiker.net/PyOpenCL/Installation/"&gt;安装指南&lt;/a&gt;内容非常繁多,新人看上去可能会一时半会摸不着头脑.至少我是懵了好一阵.&lt;/p&gt;
&lt;p&gt;最近在外远游,随身用的是一台Windows工作站,我就尝试在Windows下安装一下,将安装过程记录下来供参考.&lt;/p&gt;
&lt;h2&gt;根据硬件平台查询支持的OpenCL版本&lt;/h2&gt;
&lt;p&gt;我这台机器上用的是NVIDIA 1050显卡,本来我想着这既然是比较新世代的10系卡,肯定是支持最新版本的OpenCL2.2,结果下载了二进制文件之后才发现不兼容.所以大家一定要先查清楚自己所用的设备支持的OpenCL版本!&lt;/p&gt;
&lt;h3&gt;Intel 核显&lt;/h3&gt;
&lt;p&gt;访问&lt;a href="https://en.wikipedia.org/wiki/List_of_Intel_graphics_processing_units"&gt;维基百科上面的Intel显示核心页面&lt;/a&gt;可以根据处理器或者核显型号来搜索到在对应的操作系统上所支持的OpenCL版本,有的设备在Windows下支持到2.0,Linux却只支持到1.2;有的设备则反过来,在Linux支持到2.0,在Windows下支持到1.2.&lt;/p&gt;
&lt;p&gt;如果你同时也使用另外一个独立显卡,建议选择二者中更低版本的,似乎是高版本兼容的设备应该能够支持低版本的OpenCL.&lt;/p&gt;
&lt;h3&gt;AMD 用户&lt;/h3&gt;
&lt;p&gt;如果你使用的是AMD的核显或者独显,可以参考&lt;a href="https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units"&gt;维基百科上面的AMD显卡核心页面&lt;/a&gt;上面列出的OpenCL版本支持信息,或者可以从AMD官网查一查.&lt;/p&gt;
&lt;h3&gt;NVIDIA 用户&lt;/h3&gt;
&lt;p&gt;访问&lt;a href="https://developer.nvidia.com/opencl"&gt;NVIDIA OpenCL&lt;/a&gt;这个站点,下载&lt;strong&gt;OpenCL Device Query&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://developer.download.nvidia.com/compute/DevZone/OpenCL/Projects/x64/oclDeviceQuery.zip"&gt;Win64 版本下载链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://developer.download.nvidia.com/compute/DevZone/OpenCL/Projects/oclDeviceQuery.zip"&gt;Win32 版本下载链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载之后解压缩,从中找到任意的一个名字叫做&lt;strong&gt;oclDeviceQuery.exe&lt;/strong&gt;的可执行文件,双击运行,会在同一目录下生成一个名为&lt;strong&gt;oclDeviceQuery.txt&lt;/strong&gt;的文件.用记事本等编辑器打开这个文件,从其中查找关键词&lt;code&gt;CL_PLATFORM_VERSION&lt;/code&gt;,后面就会有版本信息.&lt;/p&gt;
&lt;p&gt;我的这台机器上的版本信息为:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;OpenCL SW Info:

 CL_PLATFORM_NAME:  NVIDIA CUDA
 CL_PLATFORM_VERSION:   OpenCL &lt;span class="m"&gt;1&lt;/span&gt;.2 CUDA &lt;span class="m"&gt;10&lt;/span&gt;.0.132
 OpenCL SDK Revision:   &lt;span class="m"&gt;7027912&lt;/span&gt;


OpenCL Device Info:

 &lt;span class="m"&gt;1&lt;/span&gt; devices found supporting OpenCL:

 ---------------------------------
 Device GeForce GTX &lt;span class="m"&gt;1050&lt;/span&gt;
 ---------------------------------
  CL_DEVICE_NAME:           GeForce GTX &lt;span class="m"&gt;1050&lt;/span&gt;
  CL_DEVICE_VENDOR:             NVIDIA Corporation
  CL_DRIVER_VERSION:            &lt;span class="m"&gt;417&lt;/span&gt;.71
  CL_DEVICE_VERSION:            OpenCL &lt;span class="m"&gt;1&lt;/span&gt;.2 CUDA
  CL_DEVICE_OPENCL_C_VERSION:       OpenCL C &lt;span class="m"&gt;1&lt;/span&gt;.2 
  CL_DEVICE_TYPE:           CL_DEVICE_TYPE_GPU
  CL_DEVICE_MAX_COMPUTE_UNITS:      &lt;span class="m"&gt;5&lt;/span&gt;
  CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS:   &lt;span class="m"&gt;3&lt;/span&gt;
  CL_DEVICE_MAX_WORK_ITEM_SIZES:    &lt;span class="m"&gt;1024&lt;/span&gt; / &lt;span class="m"&gt;1024&lt;/span&gt; / &lt;span class="m"&gt;64&lt;/span&gt; 
  CL_DEVICE_MAX_WORK_GROUP_SIZE:    &lt;span class="m"&gt;1024&lt;/span&gt;
  CL_DEVICE_MAX_CLOCK_FREQUENCY:    &lt;span class="m"&gt;1493&lt;/span&gt; MHz
  CL_DEVICE_ADDRESS_BITS:       &lt;span class="m"&gt;64&lt;/span&gt;
  CL_DEVICE_MAX_MEM_ALLOC_SIZE:     &lt;span class="m"&gt;1024&lt;/span&gt; MByte
  CL_DEVICE_GLOBAL_MEM_SIZE:        &lt;span class="m"&gt;4096&lt;/span&gt; MByte
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;很明显,只支持OpenCL1.2,这么悲剧.&lt;/p&gt;
&lt;h2&gt;下载编译好的二进制安装文件&lt;/h2&gt;
&lt;p&gt;在确定了所用显卡支持的OpenCL版本后,到&lt;a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopencl"&gt;https://www.lfd.uci.edu/~gohlke/pythonlibs&lt;/a&gt;下载和OpenCL版本以及Python版本/操作系统版本都对应的whl文件.&lt;/p&gt;
&lt;p&gt;例如,如上文所述,我的1050显卡支持的OpenCL版本是1.2,我的Python版本是3.7,我的操作系统是64bit的Windows,那么就下载&lt;strong&gt;pyopencl-2018.2.2+cl12-cp37-cp37m-win_amd64.whl&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;这里面的&lt;strong&gt;cl12&lt;/strong&gt;的意思就是OpenCL1.2,&lt;strong&gt;cp37&lt;/strong&gt;表示的应该是Python3.7,&lt;strong&gt;win_amd64&lt;/strong&gt;表示是64位Windows.&lt;/p&gt;
&lt;p&gt;大家一定要先确定你的OpenCL版本/Python版本/Windows版本,然后找好对应的whl文件下载.&lt;/p&gt;
&lt;h2&gt;安装和测试&lt;/h2&gt;
&lt;p&gt;下载好了之后,通过 powershell 或者 cmd 到达刚刚下载的 whl 文件所在目录,用 pip 来安装就可以了.
例如我这里的&lt;strong&gt;pyopencl-2018.2.2+cl12-cp37-cp37m-win_amd64.whl&lt;/strong&gt;文件在&lt;code&gt;D:\TMP\&lt;/code&gt;这个目录下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; D:&lt;span class="se"&gt;\T&lt;/span&gt;MP&lt;span class="se"&gt;\&lt;/span&gt;
pip install pyopencl-2018.2.2+cl12-cp37-cp37m-win_amd64.whl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样如果没有报错,应该就是安装成功了.&lt;/p&gt;
&lt;p&gt;然后在Python中运行下面的来自&lt;a href="https://documen.tician.de/pyopencl/index.html"&gt;PyOpenCL官网的代码&lt;/a&gt;来测试是否能够在Python下调用CL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;absolute_import&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;print_function&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyopencl&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;cl&lt;/span&gt;

&lt;span class="n"&gt;a_np&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b_np&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_some_context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CommandQueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem_flags&lt;/span&gt;
&lt;span class="n"&gt;a_g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;READ_ONLY&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;mf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COPY_HOST_PTR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hostbuf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a_np&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b_g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;READ_ONLY&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;mf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COPY_HOST_PTR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hostbuf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b_np&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;prg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;__kernel void sum(&lt;/span&gt;
&lt;span class="s2"&gt;    __global const float *a_g, __global const float *b_g, __global float *res_g)&lt;/span&gt;
&lt;span class="s2"&gt;{&lt;/span&gt;
&lt;span class="s2"&gt;  int gid = get_global_id(0);&lt;/span&gt;
&lt;span class="s2"&gt;  res_g[gid] = a_g[gid] + b_g[gid];&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;res_g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WRITE_ONLY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a_np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nbytes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;prg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a_np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a_g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b_g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res_g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;res_np&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty_like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_np&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue_copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res_np&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res_g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Check on CPU with Numpy:&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res_np&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_np&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b_np&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linalg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res_np&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_np&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b_np&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="c1"&gt;# 代码来自 https://documen.tician.de/pyopencl/index.html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果你的机器上有多个支持OpenCL的设备,比如同时有核显和独显或者多块独显,就会遇到一个提问界面,询问你用哪个设备执行上述OpenCL操作.比如我就遇到了:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Choose platform:
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &amp;lt;pyopencl.Platform &lt;span class="s1"&gt;&amp;#39;NVIDIA CUDA&amp;#39;&lt;/span&gt; at 0x184befb97a0&amp;gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &amp;lt;pyopencl.Platform &lt;span class="s1"&gt;&amp;#39;Intel(R) OpenCL&amp;#39;&lt;/span&gt; at 0x184bf0fe500&amp;gt;
Choice &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="c1"&gt;#这里我输入了回车键就是直接用默认的设备0&lt;/span&gt;
Set the environment variable &lt;span class="nv"&gt;PYOPENCL_CTX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; to avoid being asked again.
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;. &lt;span class="m"&gt;0&lt;/span&gt;. &lt;span class="m"&gt;0&lt;/span&gt;. ... &lt;span class="m"&gt;0&lt;/span&gt;. &lt;span class="m"&gt;0&lt;/span&gt;. &lt;span class="m"&gt;0&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="m"&gt;0&lt;/span&gt;.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;得到结果没报错,看来是安装成功了.&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="CUDA"></category><category term="OpenCL"></category><category term="PyOpenCL"></category></entry><entry><title>2018</title><link href="/2018.html" rel="alternate"></link><published>2018-12-31T23:59:00+08:00</published><updated>2018-12-31T23:59:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2018-12-31:/2018.html</id><summary type="html">&lt;h2&gt;2018年回顾&lt;/h2&gt;
&lt;p&gt;今天是这一年的最后一天,我想着从每个月拿一张照片,凑齐12个月,就可以算是对这一年的总结了.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1月烦闷,很多事情都还没有眉目.跑去颐和园看当年关押光绪帝的玉澜堂,结果走错路了,遇到一扇锁上的门.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/1.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2月份的时候,去了一趟湘西,山也好水也好,就是空气真糟糕.当地烟民众多,路上往来男女几乎人人嘴里一根烟.部分村镇似乎有直接露天燃烧垃圾的习惯,青烟缭绕宛如仙境一般.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/2.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;3月回京,在一个路口碰到有人拿着手机拍夕阳,其他人行色匆匆.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/3.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;4月暖和了,跑去动物园拍了鸳鸯,还遇到很多老法师,很有意思.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/4.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;5月从五棵松回来,经过玉渊潭.路边大批店铺贴出了甩卖关店的告示,不知真假.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/5.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;6月即热,在北语公交站旁有老人坐在长椅上悠闲地看手机,不知道这是不是他年轻时的梦想生活.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/6.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;7月酷热,百望山上有青少年组队捉虫做标本,跟着看了一阵,很有趣味.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/7.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;8月虫子很多,某单位的北墙外,爬满了蜗牛,黄昏下色彩很独特.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/8.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;9月心情舒坦了,路上溜达,看到三辆一模一样的三轮车按次序行驶,觉得很有趣.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/9.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;10月拍微距,用百元的国产镜头搭配百元的二手微单机身,拍摄小米鼠标垫的布料,给师弟作为示范.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/10.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;11月出门,远赴关外 …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;2018年回顾&lt;/h2&gt;
&lt;p&gt;今天是这一年的最后一天,我想着从每个月拿一张照片,凑齐12个月,就可以算是对这一年的总结了.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1月烦闷,很多事情都还没有眉目.跑去颐和园看当年关押光绪帝的玉澜堂,结果走错路了,遇到一扇锁上的门.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/1.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2月份的时候,去了一趟湘西,山也好水也好,就是空气真糟糕.当地烟民众多,路上往来男女几乎人人嘴里一根烟.部分村镇似乎有直接露天燃烧垃圾的习惯,青烟缭绕宛如仙境一般.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/2.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;3月回京,在一个路口碰到有人拿着手机拍夕阳,其他人行色匆匆.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/3.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;4月暖和了,跑去动物园拍了鸳鸯,还遇到很多老法师,很有意思.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/4.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;5月从五棵松回来,经过玉渊潭.路边大批店铺贴出了甩卖关店的告示,不知真假.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/5.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;6月即热,在北语公交站旁有老人坐在长椅上悠闲地看手机,不知道这是不是他年轻时的梦想生活.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/6.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;7月酷热,百望山上有青少年组队捉虫做标本,跟着看了一阵,很有趣味.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/7.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;8月虫子很多,某单位的北墙外,爬满了蜗牛,黄昏下色彩很独特.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/8.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;9月心情舒坦了,路上溜达,看到三辆一模一样的三轮车按次序行驶,觉得很有趣.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/9.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;10月拍微距,用百元的国产镜头搭配百元的二手微单机身,拍摄小米鼠标垫的布料,给师弟作为示范.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/10.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;11月出门,远赴关外,途中遇到火车拦路,足足等了半个小时.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/11.jpg?raw=true"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;12月当爹,我儿子八斤四,小手肉嘟嘟,希望他健康无忧,快乐成长,不要像我这么胖.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/cycleuser.github.io/blob/master/img/2018/12.jpg?raw=true"&gt;&lt;/p&gt;</content><category term="Story"></category><category term="Camera"></category><category term="Life"></category><category term="Story"></category><category term="Photo"></category></entry><entry><title>Birds shot with Tair 3s 300mm f4.5 lens</title><link href="/birds-shot-with-tair-3s-300mm-f45-lens.html" rel="alternate"></link><published>2018-04-26T00:00:00+08:00</published><updated>2018-04-26T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2018-04-26:/birds-shot-with-tair-3s-300mm-f45-lens.html</id><summary type="html">&lt;p&gt;About three weeks ago, I got this Tair 3s 300mm f4.5 lens, which seems like a submachine gun.
&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/Whole.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Then I took a tour to the Beijing Zoo and shot some pictures of birds.&lt;/p&gt;
&lt;p&gt;I waited for about 2 hours to shoot woodpeckers. There are a family of them, one …&lt;/p&gt;</summary><content type="html">&lt;p&gt;About three weeks ago, I got this Tair 3s 300mm f4.5 lens, which seems like a submachine gun.
&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/Whole.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Then I took a tour to the Beijing Zoo and shot some pictures of birds.&lt;/p&gt;
&lt;p&gt;I waited for about 2 hours to shoot woodpeckers. There are a family of them, one male with red head and the female without that. They seemed to be working on building their house, which in fact is a hole they drilled into the tree.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/Woody.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/WoodyHoldTree.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/WoodyHome.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/WoodyWorking.jpg"&gt;&lt;/p&gt;
&lt;p&gt;There is a sea gull living in the Beijing Zoo. This seagull is not afraid of people and brave enough to eat food in human hand.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/SeaGullFlying.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/SeaGullEye.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/SeaGullAndMan.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/SeaGullLook.jpg"&gt;&lt;/p&gt;
&lt;p&gt;There are many types of ducks in the Beijing Zoo, some of which are very sleepy everyday. Mandarin duck might be the most beautiful one of them.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/DuckSleep.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/MandarinDuck.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/MandarinDuck2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Night heron is very common in Beijing, and often fill the trees in the Zoo.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/NightHeron.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/ZooWithTair/NightHeronFlying.jpg"&gt;&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>Stormtrooper and Cyberman</title><link href="/stormtrooper-and-cyberman.html" rel="alternate"></link><published>2018-04-18T00:00:00+08:00</published><updated>2018-04-18T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2018-04-18:/stormtrooper-and-cyberman.html</id><summary type="html">&lt;p&gt;Today I went to the Beijing Olympic Park to take photos for Storm Trooper and Cyberman.&lt;/p&gt;
&lt;p&gt;The camera used today is Pentax KX. The lens is Sigma 28-80mm f/3.5-5.6 Marco version. Both of them are extremely cheap. A Pentax KX camera without kit lens can be bought …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I went to the Beijing Olympic Park to take photos for Storm Trooper and Cyberman.&lt;/p&gt;
&lt;p&gt;The camera used today is Pentax KX. The lens is Sigma 28-80mm f/3.5-5.6 Marco version. Both of them are extremely cheap. A Pentax KX camera without kit lens can be bought with even less than 100$, and the Sigma 2880 is even much cheaper than this camera body.
&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/StormTrooper/CameraAndLens.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Firstly, I took the shots with different setting lights.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/StormTrooper/Night.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/StormTrooper/Day.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/StormTrooper/CyberMan.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Then I took some photos with my cellphone.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/StormTrooper/CyberManByPhone.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/StormTrooper/StormTrooperHoldGun.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/StormTrooper/Together.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/StormTrooper/LookAtEachOther.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/StormTrooper/Truth.jpg"&gt;&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>From Russia with love，Tair 3s 300mm f4.5 定焦镜头</title><link href="/from-russia-with-lovetair-3s-300mm-f45-ding-jiao-jing-tou.html" rel="alternate"></link><published>2018-04-06T00:00:00+08:00</published><updated>2018-04-06T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2018-04-06:/from-russia-with-lovetair-3s-300mm-f45-ding-jiao-jing-tou.html</id><summary type="html">&lt;p&gt;这枚塔伊尔（Tair） 3s 300mm f4.5 定焦镜头外形极具个性。如果你敢带上街，这可能是最能带来回头率的镜头之一。&lt;/p&gt;
&lt;p&gt;这枚镜头产于上世纪末期，但其源头可能早在二战时代，属泽尼特（Zenit）FS 系列（根据机身上的铭牌显示，推测 FS 为俄语 foto snaiper 的缩写，翻译成英语为 photo sniper）。&lt;/p&gt;
&lt;p&gt;泽尼特（Zenit）FS 系列特点就是枪托式的托架和扳机触发快门机构。市面上能见到的有比较早的 fs2、fs3等。本文这枚是 Zenit FS-122-2 套机的镜头，原配机身可能是 泽尼特 （Zenit） FS 122s 胶片单反机身，这款相机大概生产于 1990 年代左右。&lt;/p&gt;
&lt;p&gt;这枚塔伊尔（Tair） 3s 300mm f4 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;这枚塔伊尔（Tair） 3s 300mm f4.5 定焦镜头外形极具个性。如果你敢带上街，这可能是最能带来回头率的镜头之一。&lt;/p&gt;
&lt;p&gt;这枚镜头产于上世纪末期，但其源头可能早在二战时代，属泽尼特（Zenit）FS 系列（根据机身上的铭牌显示，推测 FS 为俄语 foto snaiper 的缩写，翻译成英语为 photo sniper）。&lt;/p&gt;
&lt;p&gt;泽尼特（Zenit）FS 系列特点就是枪托式的托架和扳机触发快门机构。市面上能见到的有比较早的 fs2、fs3等。本文这枚是 Zenit FS-122-2 套机的镜头，原配机身可能是 泽尼特 （Zenit） FS 122s 胶片单反机身，这款相机大概生产于 1990 年代左右。&lt;/p&gt;
&lt;p&gt;这枚塔伊尔（Tair） 3s 300mm f4.5 镜头口径有72mm，16片光圈叶片，全金属结构，大约有 2 kg 重，重量感人，即便是有托架辅助，握持也需要一定力量。这个系列的镜头有多个版本，有紫色镀膜的，也有黄色镀膜的，还有标注 MC 的多层镀膜版本，没标注 MC 的就应该是单层镀膜的。此外似乎还有 M39 和 M42 等接口之分。产地标注也有区别，有标注为 USSR 的苏联时期版本，也有标注为 RUSSIA 的产于 1990 年以后的版本。&lt;/p&gt;
&lt;p&gt;目前来看，在 eBay 上，完美成色的 M42 接口的单个 Tair 3s 镜头，不带枪托支架，大约是 200 美元左右；带枪托支架的完美品价格就少见了一些了，价格可能会上浮一些。而镀膜有损伤并且外壳有较多磕碰的渣成色，就便宜多了，150 美元就能收到了这种成色较差的。&lt;/p&gt;
&lt;p&gt;折合成人民币的话，完美品相的单镜头，算上海外邮费，按照 250 美元来算，也就是 1500-1600 元人民币；加上枪托部件，全套顶多值 2000 - 2100 元人民币。本文中这枚是 250美元 托人购买的完美品镜头和托架，另外请人帮忙设计改造为索尼微单的电子快门线了，总共物料成本也就不到 2000 元。&lt;/p&gt;
&lt;p&gt;国内的某些奸商，能把同款相机搭配镜头价格太高到 5000 元人民币左右，只是多了一个很水的 FS122S 机身，就敢这么高价宰人，似乎可谓丧心病狂了。&lt;/p&gt;
&lt;p&gt;所以大家如果有购买这种手持长焦的想法，千万多做搜索，从多种渠道探听行市，避免被坑。&lt;/p&gt;
&lt;p&gt;书归正传，接着说本文这枚，M42螺口的单层镀膜版本，生产于 1990 年代，苏联解体之后的俄罗斯共和国，所以标注上是 Made in RUSSIA。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/FromRussia.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/FocalLength.jpg"&gt;&lt;/p&gt;
&lt;p&gt;这个版本的镜头后口可通过螺丝调整无穷远，所以很容易转接给各种现代数码相机使用。本文中以索尼a7r2微单相机为例。本来用的是宾得kx，后来想到宾得机身用户群相对来说太小众，而主流转接玩家恐怕还是索尼用户居多，于是改用了索尼a7r2。这是一款高像素机身，比较考验镜头素质，目前由于帝都天气恶劣，还没来得及外出拍摄样片，这部分准备在后续文章中补充。&lt;/p&gt;
&lt;p&gt;下面是没有安装到一起的各个部件合影。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/Separated.jpg"&gt;&lt;/p&gt;
&lt;p&gt;下面是托架上的铭牌，写着 fotosnaiper。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/Label.jpg"&gt;&lt;/p&gt;
&lt;p&gt;镜头头部下方是对焦旋钮，最近对焦距离3m，这个旋钮的旋转需要手上有点力气。另外注意在3m范围要小心，继续旋转可能会使得光圈环脱口，需要小心调整回去。后方这里的光圈环，旋转之后，扳动红色按钮来开到最大光圈进行测光。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/Ring.jpg"&gt;&lt;/p&gt;
&lt;p&gt;勾动扳机撞针，在触发快门的同时会击发杠杆，使得光圈收缩到设定值。这个过程镜身会有很大振动，所以我请朋友帮忙做了调整，避免了杠杆被触发。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/Trigger.jpg"&gt;&lt;/p&gt;
&lt;p&gt;给这个快门线一个特写，专门请人帮忙改造成了索尼微单接口的电子快门线。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/Plug.jpg"&gt;&lt;/p&gt;
&lt;p&gt;组装到一起，就如题图所示了。我是不敢带出去了。。。
&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Tair/Whole.jpg"&gt;&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>用 Mac 来听收音机的一段折腾经历</title><link href="/yong-mac-lai-ting-shou-yin-ji-de-yi-duan-zhe-teng-jing-li.html" rel="alternate"></link><published>2018-03-19T00:00:00+08:00</published><updated>2018-03-19T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2018-03-19:/yong-mac-lai-ting-shou-yin-ji-de-yi-duan-zhe-teng-jing-li.html</id><summary type="html">&lt;p&gt;2018年03月19日10:49:39 更新：
现在 macOS 用户可以下载新版本的 Gqrx 2.11.1 的打包客户端了，不那么麻烦了。
最近发现 github 体验不稳定，于是搬运了一下：
下载链接:https://pan.baidu.com/s/1nLPJuJEb-1maVPEnUNyC-A&lt;br&gt;
密码:ohtd&lt;/p&gt;
&lt;h1&gt;童年乐趣&lt;/h1&gt;
&lt;p&gt;我从小就喜欢听东西。可能是由于视力比较差，看东西看不清又很痛苦，听东西就能让那时候年幼却很暴躁的我变得非常冷静。&lt;/p&gt;
&lt;p&gt;在三五岁的时候，每天最大的快乐就是听收音机，收听中央人民广播电台的“小喇叭”节目，等待着孙敬修老爷爷给讲故事。&lt;/p&gt;
&lt;p&gt;然后到了上中学的时候，听广播已经成了习惯，当时艰难地尝试着用短波收听各种奇妙的电台，现在回想起来，大部分都是日语、俄语。有时候还能听到那种非常“慷慨激昂”的大妈在讲述什么，估计是朝鲜语的电台。后来发生了 9-11 恐怖袭击以及伊拉克战争 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;2018年03月19日10:49:39 更新：
现在 macOS 用户可以下载新版本的 Gqrx 2.11.1 的打包客户端了，不那么麻烦了。
最近发现 github 体验不稳定，于是搬运了一下：
下载链接:https://pan.baidu.com/s/1nLPJuJEb-1maVPEnUNyC-A&lt;br&gt;
密码:ohtd&lt;/p&gt;
&lt;h1&gt;童年乐趣&lt;/h1&gt;
&lt;p&gt;我从小就喜欢听东西。可能是由于视力比较差，看东西看不清又很痛苦，听东西就能让那时候年幼却很暴躁的我变得非常冷静。&lt;/p&gt;
&lt;p&gt;在三五岁的时候，每天最大的快乐就是听收音机，收听中央人民广播电台的“小喇叭”节目，等待着孙敬修老爷爷给讲故事。&lt;/p&gt;
&lt;p&gt;然后到了上中学的时候，听广播已经成了习惯，当时艰难地尝试着用短波收听各种奇妙的电台，现在回想起来，大部分都是日语、俄语。有时候还能听到那种非常“慷慨激昂”的大妈在讲述什么，估计是朝鲜语的电台。后来发生了 9-11 恐怖袭击以及伊拉克战争，于是通过电波我第一次听到了&lt;strong&gt;局座&lt;/strong&gt;的声音。&lt;/p&gt;
&lt;p&gt;来京读书之后，身边同学使用收音机的场景就逐渐收窄到了四六级考试而已。而我可能用的更多一些，因为当时特别喜欢听 FM887 和 FM915 的一些英语广播内容。那时候傻乎乎又贪图钱财的我，为了跑去中关村打工兼职而逃课，几乎没有去上过英语课。而凭借着日常的熏染，居然还练就了能勉强应对过去的英语听力，结果侥幸一次性通过了四六级。&lt;/p&gt;
&lt;p&gt;最近这一段时间，关节炎和结膜炎发作，行走不便，又不方便看东西，就又开始听收音机了。&lt;/p&gt;
&lt;p&gt;然而等我拿出来前一阵和同学一同购买的收音机，却发现播放次数不超过十次的机器居然坏掉了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Radio/1.JPG"&gt;&lt;/p&gt;
&lt;h1&gt;被坑经历&lt;/h1&gt;
&lt;p&gt;前一阵子，我们几个人想尝试使用效果更好一点的收音机，于是参考了一些网上的推荐帖子（后来意识到这些帖子很可能都是营销手段，可见我们都很单纯很傻），于是一同买了若干台德劲DE1103 收音机。&lt;/p&gt;
&lt;p&gt;然而这真的是悲剧的开始，大家都是用了没有几次，就开始遇到各种各样的坑：这些 350 元一台的收音机陆续出现了屏幕不显示等各种问题。&lt;/p&gt;
&lt;p&gt;这让我们很无奈，于是访问官网，结果发现：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Radio/4.png"&gt;&lt;/p&gt;
&lt;p&gt;虽然我们宁愿相信这是苹果的浏览器比较蠢而已，但为了安全起见，还是去联系了商家，结果发现：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Radio/2.png"&gt;&lt;/p&gt;
&lt;p&gt;要两个星期，这是多么低效率的维修；而更加无奈的是，卖家此后开始了无线电静默，不再回复我们的任何消息。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Radio/3.png"&gt;&lt;/p&gt;
&lt;p&gt;卖家居然根本不理人了，我们出离愤怒了，但也无可奈何。&lt;/p&gt;
&lt;h1&gt;尝试 SDR&lt;/h1&gt;
&lt;p&gt;接下来我们觉得很愧疚，因为作为三十多岁的理学博士生，居然去买了成品，而没有像老派黑客那样自己动手来探索一下。&lt;/p&gt;
&lt;p&gt;所以通过搜索，我们发现了&lt;a href="https://zhuanlan.zhihu.com/p/24217098"&gt;软件无线电 SDR&lt;/a&gt;，然后又进一步搜索，发现了最廉价的高性价比方案莫过于基于 RTL2832U+R820T2 的电视棒  RTL-SDR 方案，支持 GNU-radio，全波段覆盖。&lt;/p&gt;
&lt;p&gt;最重要的是这个组合真便宜，售价从几十元到数百元不等。相比之下 HackRF One 近千元的价格就很难被我们接受了，毕竟我们每个月的博士补助只有 1500 元而已。&lt;/p&gt;
&lt;p&gt;在选购几十元的基本版还是选购数百元的到手即用版上，大家有了不同的观点。玩软件无线电的朋友给推荐了一个，为免广告嫌疑，只说一下搜索关键词：软件无线电 全波段RTL-SDR，然后销量最高的即是所推荐的。&lt;/p&gt;
&lt;p&gt;为了避免花费时间在焊接上，我就选购了售价在 200 元出头的一款到手即用版本，毕竟我眼睛现在各种难受，而且关节炎也让我行动不便，这种状态下要去自己焊接还是比较痛苦又不可靠的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Radio/whole.jpg"&gt;&lt;/p&gt;
&lt;h1&gt;软件安装&lt;/h1&gt;
&lt;p&gt;购买后次日到手了，然而由于自身代码能力底下以及精力有限等原因，我目前懒得进行代码级和硬件上的探索了。。。之前吹牛的老派黑客精神顿时萎靡了。&lt;/p&gt;
&lt;p&gt;但还是我还是得探索如何能够在 Mac 上使用起来。&lt;/p&gt;
&lt;p&gt;搜索之后发现了Gqrx 这个项目，基于 GNU Radio， 用 Qt 做的图形界面，看上去挺简单的。&lt;/p&gt;
&lt;p&gt;然后我按照&lt;a href="http://gqrx.dk/download"&gt; Gqrx 下载页面&lt;/a&gt; 里面的链接下了应用文件，发现尼玛无法运行。&lt;/p&gt;
&lt;p&gt;很好理解，必然是因为我的 Mac 刚刚更新到了最新的 10.12.5，而可能 Gqrx 打包的文件还只是支持之前的老版本 MacOS。&lt;/p&gt;
&lt;p&gt;作为资深的同性交友网站 Github 用户，我迅速搜到了一个&lt;a href="https://github.com/ttrftech/homebrew-gqrx"&gt;使用 brew 安装 Gqrx 的解决方案&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;下面就是例行翻译了：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下步骤都针对当前的 macSierra (10.12) 进行了测试，能够成功安装和运行 Gqrx。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Install the python package prerequisites&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先当然是要安装 homebrew 了，这个略去不表。
接下来就要安装 Python 以及其他依赖关系：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install python gfortran umfpack swig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;然后是要安装必要的 Python 模块了：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install numpy scipy matplotlib Cheetah lxml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;接下来就是安装 gqrx&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew tap ttrftech/homebrew-gqrx
brew install gr-iqbal 
brew install gr-osmosdr &lt;span class="o"&gt;[&lt;/span&gt;--with-rtlsdr&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;--with-bladerf&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;--with-airspy&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;--with-hackrf&lt;span class="o"&gt;]&lt;/span&gt;
brew install gqrx 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果没有报错，就可以把设备通过 USB 连接到 Mac 上面。然后在终端中输入 gqrx 然后回车，就可以运行了，会弹出如下界面，在其中选择设备为红色矩形所标注的 RTL2838UHIDIR，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Radio/hardware.png"&gt;&lt;/p&gt;
&lt;p&gt;接下来设置 input rate 为 1800000，然后设置声卡，我这里用的是一款外置声卡，所以选择的就是 M-Track，其他设置可以参考下图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Radio/config.png"&gt;&lt;/p&gt;
&lt;p&gt;之后点击 OK，如果没有报错，就会出现下面的界面了：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Radio/interface.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Radio/tune.png"&gt;
Filter 可以都设为 Normal，按 A 调整 Squelch ，然后陆续微调，直到声音质量能接受。&lt;/p&gt;
&lt;p&gt;Mode 随着使用的波段有所不同，我这里选择的是WFM（stereo），也就是双声道立体声，如果所在区域无法达到立体声的信号质量，也可以尝试WFM（Mono），这样能够获得更清晰的收听效果。&lt;/p&gt;
&lt;h1&gt;播放效果&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://v.youku.com/v_show/id_XMjc3ODg2NjY5Ng==.html?spm=a2h3j.8428770.3416059.1"&gt;参考视频&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;embed src='http://player.youku.com/player.php/sid/XMjc3ODg2NjY5Ng==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'&gt;&lt;/embed&gt;&lt;/p&gt;</content><category term="SDR"></category><category term="RTL-SDR"></category><category term="Mac"></category><category term="Radio"></category><category term="Hardware"></category></entry><entry><title>器与道</title><link href="/qi-yu-dao.html" rel="alternate"></link><published>2018-03-02T22:20:00+08:00</published><updated>2018-03-02T22:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2018-03-02:/qi-yu-dao.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;孔老二说：‘&lt;strong&gt;君子不器&lt;/strong&gt;’。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面这句话和本文无任何关系。本文无任何参考意义。&lt;/p&gt;
&lt;h2&gt;正文：&lt;/h2&gt;
&lt;p&gt;我用各种廉价镜头，首先是因为穷，没钱买高端的；另外是认为这些廉价设备并不构成现阶段自己提升的障碍。我在很多方面都缺乏先天资质，后天又不够努力，训练都差太远，这才是一无所成的主要原因。&lt;/p&gt;
&lt;p&gt;正文完。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在一些我能接触到的跟我一样 low 的领域，据我所知，像我一样愚钝的庸碌之辈，想要具有低级水准的技能，都不需要有太高端太极致的物质基础。&lt;/p&gt;
&lt;p&gt;我写的文字远不如诗仙李白，主要原因并不见得是青莲居士用了天下顶级的纸笔而我没有。&lt;/p&gt;
&lt;p&gt;我弹琴远远不如 Yngwie ，主要原因并不见得是他日常用奶油色 Fender Stratocaster 搭配Marshall MS2 音箱而我用白色 Squier Vintage Modified 搭配 Fender Mustang 音箱。&lt;/p&gt;
&lt;p&gt;对日常用户来说，极致的画质并不见得就是最重要的，至少不应该是所追求的全部。我满足于自己能写几句打油诗，能胡乱引用几句话。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;甚至在有的领域内，即便有惊世骇俗的绝世水准的顶级高手，也未必需要在工具的生产制造方面具有同样深入详细的掌握。&lt;/p&gt;
&lt;p&gt;公孙大娘是一代名剑客，她买一把中等水平的武器一样可以在相当程度上施展技艺，不见得需要精通金属冶炼，更不一定需要能找到各种不同类别的矿石 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;孔老二说：‘&lt;strong&gt;君子不器&lt;/strong&gt;’。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面这句话和本文无任何关系。本文无任何参考意义。&lt;/p&gt;
&lt;h2&gt;正文：&lt;/h2&gt;
&lt;p&gt;我用各种廉价镜头，首先是因为穷，没钱买高端的；另外是认为这些廉价设备并不构成现阶段自己提升的障碍。我在很多方面都缺乏先天资质，后天又不够努力，训练都差太远，这才是一无所成的主要原因。&lt;/p&gt;
&lt;p&gt;正文完。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在一些我能接触到的跟我一样 low 的领域，据我所知，像我一样愚钝的庸碌之辈，想要具有低级水准的技能，都不需要有太高端太极致的物质基础。&lt;/p&gt;
&lt;p&gt;我写的文字远不如诗仙李白，主要原因并不见得是青莲居士用了天下顶级的纸笔而我没有。&lt;/p&gt;
&lt;p&gt;我弹琴远远不如 Yngwie ，主要原因并不见得是他日常用奶油色 Fender Stratocaster 搭配Marshall MS2 音箱而我用白色 Squier Vintage Modified 搭配 Fender Mustang 音箱。&lt;/p&gt;
&lt;p&gt;对日常用户来说，极致的画质并不见得就是最重要的，至少不应该是所追求的全部。我满足于自己能写几句打油诗，能胡乱引用几句话。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;甚至在有的领域内，即便有惊世骇俗的绝世水准的顶级高手，也未必需要在工具的生产制造方面具有同样深入详细的掌握。&lt;/p&gt;
&lt;p&gt;公孙大娘是一代名剑客，她买一把中等水平的武器一样可以在相当程度上施展技艺，不见得需要精通金属冶炼，更不一定需要能找到各种不同类别的矿石，然后还要观察控制不同炉温来进行锻造过程。&lt;/p&gt;
&lt;p&gt;伽利略做的望远镜也并不是很极致，牛顿磨制的反射面也没登峰造极，重要的可能是他们的思想和探索行动，而不见得是整日沉湎于和一群玻璃吹制与金属加工的匠人们一较高下争王争霸。&lt;/p&gt;
&lt;p&gt;米开朗琪罗最需要的是对美的认知和追寻，其次是精湛的雕刻技艺，恐怕最后才是充足的石料知识；他不必要熟知三大岩类的转化关系，更不用去分辨花岗岩是否有绢云母化和灰岩内是否有机械双晶。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;有些大师实在是远非我辈能及，他们有成体系的知识储备，系统全面的技能训练，充分的经济能力，负担得起又玩得转价格高昂的各种器材，对各种器材的各种参数甚至加工特性等等都具有相当渊博的知识储备。&lt;/p&gt;
&lt;p&gt;大师们能找到了各种非常经典的机位，严格控制参数，掌握拍摄的天气、时间、氛围等等，拍摄出来了动人心魄的大作，比如 &lt;a href="http://www.zhihu.com/people/f5800686f921c8d2b85c8419fda00780"&gt;@詹姆斯于震&lt;/a&gt; 的风光拍摄和后期，都是给观赏者相当的震撼。还有的大师们久加锤炼，飞花飘叶可以用作神兵利器，街头偶得也是人文大片，比如 &lt;a href="http://www.zhihu.com/people/e3b8d521062117fe5d86c454111ac439"&gt;@韩冲&lt;/a&gt; 的纪实摄影。&lt;/p&gt;
&lt;p&gt;但即便是那些器道俱精的大师，也未必就该我们去亦步亦趋照着搬。那都是他们的表达，即便完全到了同样的地理位置，同样的季节，同样的时间，同样的人物场景，同一个时刻按下快门，那不是我，也不是你，那也是对他们的重复。&lt;/p&gt;
&lt;p&gt;我们可以欣赏他人制造的美，但不要把那些本来的美当做了模具来去塑造未来的自己，去衡量身边的他人。&lt;/p&gt;
&lt;p&gt;你吃不起他吃的黑松露，也未必一定是他更幸福。&lt;/p&gt;
&lt;p&gt;人生不是登山，海拔不是全部，登山也不见得比冬泳更高雅。&lt;/p&gt;
&lt;p&gt;汽车跑得快，人也还照样骑自行车。&lt;/p&gt;
&lt;p&gt;飞机飞得高，大雁也不会没勇气活下去。&lt;/p&gt;
&lt;p&gt;每个人都有自己的路，有的人比加速度，有的人比转弯的灵活性，有的人比走的路途长短，有的人比的是路上记录的风景，有啥可比的？&lt;/p&gt;
&lt;p&gt;不应该活成他人的副本。&lt;/p&gt;
&lt;p&gt;那不是我想要的，至少不全是我想要的，更不是我想要的全部。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://pic2.zhimg.com/80/v2-4acd03cb7bd2547f6dd6e4b4090fc17b_hd.jpg"&gt;&lt;/p&gt;
&lt;p&gt;它不是看不起你，是根本没看你，你瞅啥？&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>摄影相关的开源软件</title><link href="/she-ying-xiang-guan-de-kai-yuan-ruan-jian.html" rel="alternate"></link><published>2018-02-02T22:20:00+08:00</published><updated>2018-02-02T22:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2018-02-02:/she-ying-xiang-guan-de-kai-yuan-ruan-jian.html</id><summary type="html">&lt;p&gt;前些天我提了一个问题：&lt;a href="https://www.zhihu.com/question/265620308/answer/302750802"&gt;有哪些开源软件能够帮助摄影工作者构建最低成本工作链？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然而得到的回答中，几乎是没有一个和开源软件有太多关联。&lt;/p&gt;
&lt;p&gt;倒是有一些展示自身饮食消费水平的，有的是给商业软件做硬广的，还有的是疑似嘲讽低收入人群的。&lt;/p&gt;
&lt;p&gt;求人不如求己，自己搜吧。&lt;/p&gt;
&lt;p&gt;于是我就从多处搜索，找到了一些相关内容，自己回答了一下：&lt;a href="https://www.zhihu.com/question/265620308/answer/302750802"&gt;用于摄影工作流程的开源软件&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这件事挺恶心的，感觉自己跟那些垃圾营销号一样，自问自答了一回。&lt;/p&gt;
&lt;p&gt;不过想到这些软件也或许就真能帮一个跟我一样的穷学生，能让他不去下载破解工具染上病毒或者产生凡是软件都找破解的“好”习惯，也能解燃眉之急，那或许也是一件好事。&lt;/p&gt;
&lt;p&gt;所以就也发到专栏里面一份。&lt;/p&gt;
&lt;p&gt;在 &lt;a href="https://pixls.us/software/"&gt;PIXLS.US - Software&lt;/a&gt; 这里其实有更加完整的列表和介绍。&lt;/p&gt;
&lt;p&gt;原始内容来自于&lt;a href="https://opensource.com/life/16/6/open-source-tools-enable-professional-photography"&gt;JT Pennington在2016年缩写的《职业摄影的开源工具（Open source tools enable professional photography）》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cat Johnson又对 JT 那篇文章以及评论进行总结，整理出来了 &lt;a href="https://www.shareable.net/blog/14-open-source-photography-tools"&gt;14样开源摄影工具（14 Open Source Photography Tools）一文 …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;前些天我提了一个问题：&lt;a href="https://www.zhihu.com/question/265620308/answer/302750802"&gt;有哪些开源软件能够帮助摄影工作者构建最低成本工作链？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然而得到的回答中，几乎是没有一个和开源软件有太多关联。&lt;/p&gt;
&lt;p&gt;倒是有一些展示自身饮食消费水平的，有的是给商业软件做硬广的，还有的是疑似嘲讽低收入人群的。&lt;/p&gt;
&lt;p&gt;求人不如求己，自己搜吧。&lt;/p&gt;
&lt;p&gt;于是我就从多处搜索，找到了一些相关内容，自己回答了一下：&lt;a href="https://www.zhihu.com/question/265620308/answer/302750802"&gt;用于摄影工作流程的开源软件&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这件事挺恶心的，感觉自己跟那些垃圾营销号一样，自问自答了一回。&lt;/p&gt;
&lt;p&gt;不过想到这些软件也或许就真能帮一个跟我一样的穷学生，能让他不去下载破解工具染上病毒或者产生凡是软件都找破解的“好”习惯，也能解燃眉之急，那或许也是一件好事。&lt;/p&gt;
&lt;p&gt;所以就也发到专栏里面一份。&lt;/p&gt;
&lt;p&gt;在 &lt;a href="https://pixls.us/software/"&gt;PIXLS.US - Software&lt;/a&gt; 这里其实有更加完整的列表和介绍。&lt;/p&gt;
&lt;p&gt;原始内容来自于&lt;a href="https://opensource.com/life/16/6/open-source-tools-enable-professional-photography"&gt;JT Pennington在2016年缩写的《职业摄影的开源工具（Open source tools enable professional photography）》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cat Johnson又对 JT 那篇文章以及评论进行总结，整理出来了 &lt;a href="https://www.shareable.net/blog/14-open-source-photography-tools"&gt;14样开源摄影工具（14 Open Source Photography Tools）一文。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面的内容中，图片来自 Cat Johnson 的总结，文本结合了原文的翻译和个人增加的内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://gimp.org/"&gt;Gimp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/GIMP.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Gimp，支持 Linux/Mac/Win，虽然用户不多，不过在开源软件中，这个软件也算是大名鼎鼎了，基本上算是对 Photoshop 的开源替代品，当然存在很多不足之处，比如滤镜插件以及颜色管理等方面，这些问题 &lt;a href="http://www.zhihu.com/people/9c8ed11dca9b72dff9317b39e5d70905"&gt;@Zhu Ashen&lt;/a&gt; 的回答中也有说明。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://www.darktable.org/"&gt;darktable&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/darktable.png"&gt;&lt;/p&gt;
&lt;p&gt;Darktable，支持 Linux/Mac/Win，基本就类似开源版本的 Lightroom，可以进行 RAW 文件的管理编辑，也可以对曲线之类的进行简单调整，能用来构建从拍摄（Capture）到输出（Delivery）的完整流程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://lightzoneproject.org/"&gt;LightZone&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/LightZone.jpg"&gt;&lt;/p&gt;
&lt;p&gt;LightZone，支持 Linux/Mac/Win，也是一个开源的暗房软件（Darkroom Software）， 根据 Cat Johnson 的评价，也具有专业水准了。来自全球的开发者和志愿者组成的团队，致力于分享交流以及软件的进一步开发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://wiki.gnome.org/Apps/Shotwell"&gt;Shotwell&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/Shotwell.png"&gt;&lt;/p&gt;
&lt;p&gt;Shotwell 可能是只支持 Linux，因为其实这就是 Gnome3 的照片管理器，由 Gnome 基金会开发，完全开源的自由软件。大概相当于 Adobe Bridge。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://rawtherapee.com/"&gt;Raw Therapee&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/RawTherapee.png"&gt;&lt;/p&gt;
&lt;p&gt;Raw Therapee，支持 Linux/Mac/Win，基于 GPLv3 协议（GNU General Public License Version 3）的开源软件，用于 Raw 文件的简单编辑和管理，据说可以适用于大规模图像的工作流程中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://www.digikam.org/"&gt;digiKam&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/digikam.png"&gt;&lt;/p&gt;
&lt;p&gt;digiKam，支持 Linux/Mac/Win，功能挺简单的，也就是照片组织管理，简单的编辑增强，还有一些分享功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://photivo.org/"&gt;Photovito&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/Photivo.png"&gt;&lt;/p&gt;
&lt;p&gt;Photovito ，开源自由软件，处理 RAW 文件以及其他位图，例如TIFF, JPEG, BMP, PNG, 等等，编辑方式可以跟 Gimp 工作流兼容整合，可以批量操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://ufraw.sourceforge.net/"&gt;UFRaw&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/UFRaw.png"&gt;&lt;/p&gt;
&lt;p&gt;UFRaw (Unidentified Flying Raw)这个软件是用于读取和管理相机中的 raw 图像的，也可以用作 Gimp 的插件。支持颜色管理工作流允许用户自定义选择颜色配置文件（&lt;a href="https://en.wikipedia.org/wiki/ICC_profile"&gt;ICC color profiles&lt;/a&gt;）。这个可能能够解决 Gimp 原生的颜色管理短板的问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://www.kornelix.net/fotoxx/fotoxx.html"&gt;Fotoxx&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/Fotoxx.png"&gt;&lt;/p&gt;
&lt;p&gt;Fotoxx，开源自由软件，运行于 Linux 系统之下，功能是图像编辑和组织管理，设计目标是针对专业摄影师，提供快速易用的体验，不过估计是个广告语吧，没见过多少人用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://www.damonlynch.net/rapid/"&gt;Rapid Photo Downloader&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/RapidPhotoDownloader.png"&gt;&lt;/p&gt;
&lt;p&gt;Rapid Photo Downloader 也是一个自由软件，基于 GPL 协议，这个软件的开发者就是专业的摄影师和一些业余的摄影爱好者，主要用途是快速导入照片和视频。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://f-spot.org/"&gt;F-Spot&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/F-Spot.png"&gt;&lt;/p&gt;
&lt;p&gt;F-Spot，GNOME 桌面的个人照片管理程序，适合于简单的数字图像管理，有分享和查找组织等简单功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://photoflowblog.blogspot.com/"&gt;Photoflow&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/PhotoFlow.png"&gt;&lt;/p&gt;
&lt;p&gt;Photoflow，照片修补工具，提供的是基于图层的工作体验，支持 RAW 图像，可进行无损修复。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;13.&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://pixls.us/"&gt;Pixls&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/Pixls.png"&gt;&lt;/p&gt;
&lt;p&gt;Pixls 是一个平台网站，提供了在摄影方面，基于自由软件/开源软件构建工作流的指南和一些样例展示。这个网站称：『在摄影方面有很多非常棒的开源软件或者自由软件，然而却没有足够的样例指南来展示如何利用这些软件搭建工作流程。』这说的很有道理，我也是这么想的，这也是我最初提问的初衷。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;14.&lt;/strong&gt; &lt;strong&gt;&lt;a href="http://hugin.sourceforge.net/"&gt;Hugin&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.shareable.net/sites/default/files/Hugin.png"&gt;&lt;/p&gt;
&lt;p&gt;Hugin 主要就是基于&lt;a href="http://panotools.sourceforge.net/"&gt;Panorama Tools&lt;/a&gt;来提供了跨平台的全景照片工具链，用户可以使用多个图片来拼接成一个完整的全景照片，身临其境。这东西好像没啥用。&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>索尼 A7R2 搭配百元级廉价镜头</title><link href="/suo-ni-a7r2-da-pei-bai-yuan-ji-lian-jie-jing-tou.html" rel="alternate"></link><published>2018-01-08T23:20:00+08:00</published><updated>2018-01-08T23:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2018-01-08:/suo-ni-a7r2-da-pei-bai-yuan-ji-lian-jie-jing-tou.html</id><summary type="html">&lt;p&gt;去年年底的时候，我陆续翻译过一些对老镜头进行评测的文章，不过自己还真没写过相关的原创内容。
有网友陆续留言询问诸如 美能达  MD 35-70 mm F3.5 Marco 之类的廉价手动镜头的具体表现，这属实难住了我。
我的拍摄水平远低于入门水准，拍的照片恐怕很难具有任何参考意义，怕误导了读者。
不过后来我想到，自己都已经明确说明了这一注意事项，那就拿出来现眼一下也无妨，于我来说无非就是丢人，这个不要紧。对于那些有意愿去购买收藏和使用的朋友们来说，我的这些片子或许也能莫名其妙地解毒呢。
于是我就用 美能达  MD 35-70 mm F3.5 Marco 拍了一些简单的样片，发到了&lt;a href="https://zhuanlan.zhihu.com/p/29416997"&gt;知乎专栏&lt;/a&gt;里面。&lt;/p&gt;
&lt;p&gt;后来我又陆续发了其他两枚镜头的样片，分别是&lt;a href="https://zhuanlan.zhihu.com/p/32150116"&gt;宾得 SMC Pentax-M 75-150mm F4 恒定光圈手动变焦镜头&lt;/a&gt;和&lt;a href="https://zhuanlan.zhihu.com/p/32534055"&gt;宾得 SMC Pentax-M 135mm F3.5 …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;去年年底的时候，我陆续翻译过一些对老镜头进行评测的文章，不过自己还真没写过相关的原创内容。
有网友陆续留言询问诸如 美能达  MD 35-70 mm F3.5 Marco 之类的廉价手动镜头的具体表现，这属实难住了我。
我的拍摄水平远低于入门水准，拍的照片恐怕很难具有任何参考意义，怕误导了读者。
不过后来我想到，自己都已经明确说明了这一注意事项，那就拿出来现眼一下也无妨，于我来说无非就是丢人，这个不要紧。对于那些有意愿去购买收藏和使用的朋友们来说，我的这些片子或许也能莫名其妙地解毒呢。
于是我就用 美能达  MD 35-70 mm F3.5 Marco 拍了一些简单的样片，发到了&lt;a href="https://zhuanlan.zhihu.com/p/29416997"&gt;知乎专栏&lt;/a&gt;里面。&lt;/p&gt;
&lt;p&gt;后来我又陆续发了其他两枚镜头的样片，分别是&lt;a href="https://zhuanlan.zhihu.com/p/32150116"&gt;宾得 SMC Pentax-M 75-150mm F4 恒定光圈手动变焦镜头&lt;/a&gt;和&lt;a href="https://zhuanlan.zhihu.com/p/32534055"&gt;宾得 SMC Pentax-M 135mm F3.5 手动定焦镜头&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;参数和价格&lt;/h2&gt;
&lt;p&gt;这里就直接光明正大说测试用的机身和配件的具体型号了。
机身使用的是&lt;strong&gt;索尼 A7RM2&lt;/strong&gt;。
转接环使用了&lt;strong&gt;天工 LM-EA7 转接环&lt;/strong&gt;，这个转接环可以将任何徕卡 M 接口的 &lt;strong&gt;手动镜头&lt;/strong&gt; 转换给某公司的 E 卡口微单相机上作为 &lt;strong&gt;自动镜头&lt;/strong&gt; 来使用。
美能达和宾得的镜头分别使用来自徕纳的 MD-LM 和 PK-LM 转接环来转接安装到天工环上。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;品牌&lt;/th&gt;
&lt;th&gt;焦段&lt;/th&gt;
&lt;th&gt;光圈&lt;/th&gt;
&lt;th&gt;卡口&lt;/th&gt;
&lt;th&gt;特点&lt;/th&gt;
&lt;th&gt;价格&lt;/th&gt;
&lt;th&gt;优势&lt;/th&gt;
&lt;th&gt;短板&lt;/th&gt;
&lt;th&gt;点评&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;美能达&lt;/td&gt;
&lt;td&gt;35-70 mm&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;MD&lt;/td&gt;
&lt;td&gt;70mm长焦端有1/7-1/4微距&lt;/td&gt;
&lt;td&gt;600&lt;/td&gt;
&lt;td&gt;锐度和分辨率很好，微距聊胜于无，光圈全开可用&lt;/td&gt;
&lt;td&gt;光圈不够大，塑料感强&lt;/td&gt;
&lt;td&gt;常用焦段的万金油挂机头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;宾得&lt;/td&gt;
&lt;td&gt;75-150 mm&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;PK&lt;/td&gt;
&lt;td&gt;自带可伸缩金属遮光罩&lt;/td&gt;
&lt;td&gt;400&lt;/td&gt;
&lt;td&gt;廉价的恒定光圈中长焦镜头，锐度和分辨率差强人意&lt;/td&gt;
&lt;td&gt;光圈小，最大光圈下色散控制差，紫边显著&lt;/td&gt;
&lt;td&gt;偶尔打鸟尚可一用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;宾得&lt;/td&gt;
&lt;td&gt;135 mm&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;PK&lt;/td&gt;
&lt;td&gt;自带可伸缩金属遮光罩&lt;/td&gt;
&lt;td&gt;350&lt;/td&gt;
&lt;td&gt;最大光圈下色散控制好，紫边轻微，小巧精致，体积与 50mm 标头相仿&lt;/td&gt;
&lt;td&gt;光圈小，适用场景有限&lt;/td&gt;
&lt;td&gt;肖像类场景的性价比之选&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;样片&lt;/h1&gt;
&lt;p&gt;这次就按照价格递减的顺序，从最贵的到最便宜的，来依次展示一下我这种超低水平新手法师用这几枚廉价镜头拍摄出的样片。&lt;/p&gt;
&lt;h2&gt;美能达  MD 35-70 mm F3.5 Marco&lt;/h2&gt;
&lt;p&gt;拍摄地点为北京动物园，拍摄过程中全程使用了 70mm 端，光圈开到最大的 3.5。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35700.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35701.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35702.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35703.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35704.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;宾得 SMC Pentax-M 75-150mm F4&lt;/h2&gt;
&lt;p&gt;拍摄地点为北京动物园，拍摄过程中全程使用了 150mm 端，光圈开到最大的 4。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751500.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751501.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751502.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751503.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751504.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751505.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751506.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;宾得 SMC Pentax-M 135mm F3.5&lt;/h2&gt;
&lt;p&gt;除了最后一张外，拍摄地点为北京动物园，拍摄过程中光圈开到最大的 3.5。最后一张的拍摄地点位于北大校医院东门。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1350.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1351.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1352.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1353.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1354.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1355.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1356.jpg"&gt;&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>The Cheap Lenses For Sony A7R2</title><link href="/the-cheap-lenses-for-sony-a7r2.html" rel="alternate"></link><published>2018-01-08T22:20:00+08:00</published><updated>2018-01-08T22:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2018-01-08:/the-cheap-lenses-for-sony-a7r2.html</id><summary type="html">&lt;p&gt;I translated some evaluation articles about some cheap manul lens such as the Minolta MD 35-70 mm F3.5 Marco. Then some guys were asking for more sample photos, which is a huge challenge to me.&lt;/p&gt;
&lt;p&gt;I am still just a newbie and know few about photography, so I was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I translated some evaluation articles about some cheap manul lens such as the Minolta MD 35-70 mm F3.5 Marco. Then some guys were asking for more sample photos, which is a huge challenge to me.&lt;/p&gt;
&lt;p&gt;I am still just a newbie and know few about photography, so I was afraid to mislead the viewers.&lt;/p&gt;
&lt;p&gt;But then I figured out that my photos had been so poor that no one could possible get mislead at all.&lt;/p&gt;
&lt;p&gt;Then I took up my Minolta MD 35-70 mm F3.5 Marco with a Sony A7R2 and took &lt;a href="https://zhuanlan.zhihu.com/p/29416997"&gt;some photos here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After that, I separately did the same to &lt;a href="https://zhuanlan.zhihu.com/p/32150116"&gt;SMC Pentax-M 75-150mm F4&lt;/a&gt; and &lt;a href="https://zhuanlan.zhihu.com/p/32534055"&gt;SMC Pentax-M 135mm F3.5&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These posts were allin Chinese, that might be difficult for guys not using Chinese to view. So I decide to assemble the three posts to this one here as an English version.&lt;/p&gt;
&lt;h2&gt;Specs and Cost&lt;/h2&gt;
&lt;p&gt;The camera body I used is &lt;strong&gt;Sony A7RM2&lt;/strong&gt;.
The lenses are mounted to the camera body with the &lt;a href="http://techartpro.com/product/techart-pro-leica-m-sony-e-autofocus-adapter/"&gt;Techart LM-EA7 Autofocus Adapter&lt;/a&gt;, which contains a autofocus motor and can transmount almost all Leica M-Mount manul lenses to autofocus lenses on Sony A7 series camera, or any other Sony E-Mount camera with phase detection auto focus function (PDAF).&lt;/p&gt;
&lt;p&gt;Techart is a company from China, as far as I know, they invent this adapter by themselves. In fact, there are more other manul or even auto lenses can be transfered with their adapter than just the native Leica M-Mount lenses.
MD/PK/M42/FD/L39/EF/CY/OM and any mount that can be transfered to Leica M-Mount will work.&lt;/p&gt;
&lt;p&gt;MD-LM and PK-LM adapters are also needed to transfer these three lenses to the Leica M-Mount. I choose the Laina adapters, also made in China.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Brand&lt;/th&gt;
&lt;th&gt;Lenth&lt;/th&gt;
&lt;th&gt;Aperture&lt;/th&gt;
&lt;th&gt;Native Mount&lt;/th&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Price in China&lt;/th&gt;
&lt;th&gt;Pro&lt;/th&gt;
&lt;th&gt;Con&lt;/th&gt;
&lt;th&gt;Summary&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Minolta&lt;/td&gt;
&lt;td&gt;35-70 mm&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;MD&lt;/td&gt;
&lt;td&gt;1/7-1/4 Marco at 70mm&lt;/td&gt;
&lt;td&gt;100$&lt;/td&gt;
&lt;td&gt;Sharp,Useful Marco&lt;/td&gt;
&lt;td&gt;Aperture is small, the lens' body feels plastic&lt;/td&gt;
&lt;td&gt;Daily use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pentax&lt;/td&gt;
&lt;td&gt;75-150 mm&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;PK&lt;/td&gt;
&lt;td&gt;Metal hook built in&lt;/td&gt;
&lt;td&gt;70$&lt;/td&gt;
&lt;td&gt;Constant aperture&lt;/td&gt;
&lt;td&gt;Aperture is small,purple fringe is huge with widely opened aperture&lt;/td&gt;
&lt;td&gt;Cheap lens for shooting birds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pentax&lt;/td&gt;
&lt;td&gt;135 mm&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;PK&lt;/td&gt;
&lt;td&gt;Metal hook built in&lt;/td&gt;
&lt;td&gt;50$&lt;/td&gt;
&lt;td&gt;Small, and purple fringe can hardly be seen even with widely opened aperture&lt;/td&gt;
&lt;td&gt;Aperture is small&lt;/td&gt;
&lt;td&gt;A cheap choice for portrait&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;Sample Photos&lt;/h1&gt;
&lt;h2&gt;Minolta  MD 35-70 mm F3.5 Marco&lt;/h2&gt;
&lt;p&gt;Photos below were all taken at Beijing Zoo, with F3.5 aperture at 70mm.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35700.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35701.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35702.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35703.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/35704.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;SMC Pentax-M 75-150mm F4&lt;/h2&gt;
&lt;p&gt;Photos below were all taken at Beijing Zoo, with F4 aperture at 150mm.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751500.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751501.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751502.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751503.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751504.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751505.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/751506.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;SMC Pentax-M 135mm F3.5&lt;/h2&gt;
&lt;p&gt;Photos below, besides the last one, were all taken at Beijing Zoo, with F3.5 aperture at 135mm. The last one was taken at the east gate of the Hospital of Peking University, also with F3.5 aperture at 135mm, and generated from two photos with different settings.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1350.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1351.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1352.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1353.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1354.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1355.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Zoo/1356.jpg"&gt;&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>2017 年终总结</title><link href="/2017-nian-zhong-zong-jie.html" rel="alternate"></link><published>2017-12-27T19:00:00+08:00</published><updated>2017-12-27T19:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-12-27:/2017-nian-zhong-zong-jie.html</id><summary type="html">&lt;p&gt;距离这一年的末尾，剩下不到一星期的时间了。&lt;/p&gt;
&lt;p&gt;回顾一下 2017 年，这是我来北京的第十年，总体看来还是浑浑噩噩地混过去了，没有什么太大的成就。&lt;/p&gt;
&lt;h2&gt;依然无所成&lt;/h2&gt;
&lt;p&gt;首先是&lt;a href="https://github.com/chinageology/GeoPython"&gt;GeoPython&lt;/a&gt;，年初我开始学 PyQt，将之前的脚本图形化，后半年我学习 OpenGL，尝试利用 PyQtGraph 和 OpenGL 来实现更高性能的数据呈现，可惜还没有完成。&lt;/p&gt;
&lt;p&gt;然后是&lt;a href="https://github.com/Kivy-CN/Stanford-CS-229-CN"&gt;斯坦福大学的 CS229 课程讲义的翻译&lt;/a&gt;，这大概倒是都做完了，不过目前还没有做好 Markdown 的，这几天我准备尽量把已经翻译完的文稿做成 Markdown 的。&lt;/p&gt;
&lt;p&gt;接着还有就是&lt;a href="https://github.com/Kivy-CN/Duke-STA-663-CN"&gt;杜克大学的 STA663 课程讲义的翻译&lt;/a&gt;，这个在一些朋友的参与下，也基本都完成了，不过可能还需要后续跟着英文原版的课件进行改进更新。&lt;/p&gt;
&lt;p&gt;总体来说，这一年并没有太大的成就，发起的一些其他开源项目例如 SoftBox 更是只停留在空想层面。&lt;/p&gt;
&lt;h2&gt;所幸不孤单&lt;/h2&gt;
&lt;p&gt;2017 年，我陆续开了几个专栏，分别是 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;距离这一年的末尾，剩下不到一星期的时间了。&lt;/p&gt;
&lt;p&gt;回顾一下 2017 年，这是我来北京的第十年，总体看来还是浑浑噩噩地混过去了，没有什么太大的成就。&lt;/p&gt;
&lt;h2&gt;依然无所成&lt;/h2&gt;
&lt;p&gt;首先是&lt;a href="https://github.com/chinageology/GeoPython"&gt;GeoPython&lt;/a&gt;，年初我开始学 PyQt，将之前的脚本图形化，后半年我学习 OpenGL，尝试利用 PyQtGraph 和 OpenGL 来实现更高性能的数据呈现，可惜还没有完成。&lt;/p&gt;
&lt;p&gt;然后是&lt;a href="https://github.com/Kivy-CN/Stanford-CS-229-CN"&gt;斯坦福大学的 CS229 课程讲义的翻译&lt;/a&gt;，这大概倒是都做完了，不过目前还没有做好 Markdown 的，这几天我准备尽量把已经翻译完的文稿做成 Markdown 的。&lt;/p&gt;
&lt;p&gt;接着还有就是&lt;a href="https://github.com/Kivy-CN/Duke-STA-663-CN"&gt;杜克大学的 STA663 课程讲义的翻译&lt;/a&gt;，这个在一些朋友的参与下，也基本都完成了，不过可能还需要后续跟着英文原版的课件进行改进更新。&lt;/p&gt;
&lt;p&gt;总体来说，这一年并没有太大的成就，发起的一些其他开源项目例如 SoftBox 更是只停留在空想层面。&lt;/p&gt;
&lt;h2&gt;所幸不孤单&lt;/h2&gt;
&lt;p&gt;2017 年，我陆续开了几个专栏，分别是&lt;a href="https://zhuanlan.zhihu.com/python-kivy"&gt;Python 学习之路&lt;/a&gt;、&lt;a href="https://zhuanlan.zhihu.com/MachineLearn"&gt;MachineLearning&lt;/a&gt; 和 &lt;a href="https://zhuanlan.zhihu.com/easycam"&gt;穷人摄影&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;其实感觉自己挺坑的，很多内容都是一边学一边写，错误恐怕也很多，分享出来有时候也担心会误导别人。&lt;/p&gt;
&lt;p&gt;不过后来我发现，很多特别坑特别水的纯广告宣传引流的营销账号都大肆开专栏发文，自己好歹比那些人的动机良善，就鼓励自己也来试试。&lt;/p&gt;
&lt;p&gt;没想到居然也都有了一些朋友给予关注和鼓励，让我自娱自乐之余，也有了更进一步分享更多内容的动力。&lt;/p&gt;
&lt;h2&gt;前途路漫漫&lt;/h2&gt;
&lt;p&gt;明年要干啥呢？&lt;/p&gt;
&lt;p&gt;首先是攒钱。
还清从同学朋友处借来的钱，手术就先推迟等博士后入站的时候再说了。
前几个月的时候手头紧卖了很多东西，当时特别窘迫。
本来以为拿得了普通级的奖学金，就没想着防万一，结果临门一脚的时候成了垫底。都怪当初不重视，先是当年卖掉了一个应用的版权，也没去申请任何的软件著作权之类的东西。不过本身学术基础就非常差，估计就算有两个软件著作权，也还是没办法和优秀人士相提并论的。
所以明年得更加节俭，降低开支。
唉，今年买书和买药都花了不少钱，想想就觉得很郁闷。&lt;/p&gt;
&lt;p&gt;然后是学习。
要把化学模拟和 CUDA 计算弄明白，强化一下 GeoPython，增加点新功能。用 OpenGL 替代掉各种坑的 Matplotlib，也需要尽量尝试一下。如果时间精力允许，还可能会把 SoftBox 稍微做点东西出来。计算机图形学和影视剪辑都挺有意思的，如果有机会可能会都看看，然后跟一些师弟一起玩耍啊开心一下啥的。&lt;/p&gt;
&lt;p&gt;接着就是写书。
对，自不量力，想写个书。大概思路也就是按照类似 STA663，把 Python 在某些具体领域的应用，以及一些扩展的基础知识，整理总结一下啥的。肯定很烂，到时候争取做到自己看了不生气不骂自己，估计就挺难了。这事情特别坑，因为我这刚学了两年的入门水平，写书实在是太坑了。不过之前也跟人吹过这样的牛，而我这个人又有吹牛之后尽量实现以便后续继续吹牛的好习惯，就只能一次又一次地骑虎了。&lt;/p&gt;
&lt;p&gt;对了，还要给朋友辅导托福。
其实我大概从 2009 年给人辅导考研地概开始，就有丰富的黑班培训从业经历了，那时候靠着给人胡侃专业课，蹭吃了好多次，应该也算最早的灰色收入了吧。
大胖黑班，从那时候就断断续续开展，直到去年年底我做手术之后就停办了。
最近一段，有朋友每周来探望我，给我带好吃的啥的，我就抽空给他胡讲托福。
我想着好好练练，以教促学，也是提高自己的一个机会。毕竟地质行业不太景气，而自己的能力素质都不足以在学术圈立足，对于转行和退路，要早作打算。以后给人哄孩子教教课，大概也能糊口吧。&lt;/p&gt;</content><category term="Story"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category><category term="Story"></category></entry><entry><title>1900年代的彩色中国</title><link href="/1900nian-dai-de-cai-se-zhong-guo.html" rel="alternate"></link><published>2017-12-27T13:00:00+08:00</published><updated>2017-12-27T13:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-12-27:/1900nian-dai-de-cai-se-zhong-guo.html</id><summary type="html">&lt;h4&gt;本文所粘贴照片全部来自网络，侵删。&lt;/h4&gt;
&lt;p&gt;通过冯克力老先生主编，山东画报出版社出版的《老照片》第二期，我了解到了这样一位传奇人物 — Albert Kahn。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Albert Kahn" src="http://all-that-is-interesting.com/wordpress/wp-content/uploads/2015/09/albert-kahn-balcony-portrait.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Albert Kahn 1860年3月3日生于法国 Marmoutier 城，而立之年投身银行业，赚了很多钱。
到了四十多岁，他认为工业革命正在导致世界巨变，很多文化古迹都可能会消亡，就想把这些都记录下来。
于是他就开始了逐梦摄影圈的环游世界之旅，雇佣了多名摄影师，采用了当时最先进的 Autochrome 彩色摄影技术，拍摄了上万张彩色照片，组成了一套“地球档案（les Archives de la Planète）”，目前收藏于塞纳河畔的 Albert Kahn 博物馆内。&lt;/p&gt;
&lt;p&gt;说起来这位老先生，可真算是人文摄影的狂热爱好者了，为了梦想可谓不惜成本。
当时由 卢米埃尔兄弟（Auguste Marie Louis Nicholas，1862-1954； Louis Jean，1864-1948 …&lt;/p&gt;</summary><content type="html">&lt;h4&gt;本文所粘贴照片全部来自网络，侵删。&lt;/h4&gt;
&lt;p&gt;通过冯克力老先生主编，山东画报出版社出版的《老照片》第二期，我了解到了这样一位传奇人物 — Albert Kahn。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Albert Kahn" src="http://all-that-is-interesting.com/wordpress/wp-content/uploads/2015/09/albert-kahn-balcony-portrait.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Albert Kahn 1860年3月3日生于法国 Marmoutier 城，而立之年投身银行业，赚了很多钱。
到了四十多岁，他认为工业革命正在导致世界巨变，很多文化古迹都可能会消亡，就想把这些都记录下来。
于是他就开始了逐梦摄影圈的环游世界之旅，雇佣了多名摄影师，采用了当时最先进的 Autochrome 彩色摄影技术，拍摄了上万张彩色照片，组成了一套“地球档案（les Archives de la Planète）”，目前收藏于塞纳河畔的 Albert Kahn 博物馆内。&lt;/p&gt;
&lt;p&gt;说起来这位老先生，可真算是人文摄影的狂热爱好者了，为了梦想可谓不惜成本。
当时由 卢米埃尔兄弟（Auguste Marie Louis Nicholas，1862-1954； Louis Jean，1864-1948）发明的 Autochrome 彩色摄影术刚刚诞生两年，操作繁琐且成本高昂。这个高成本的爱好对这样的富豪来说也可能是不小的经济负担，于是在三十年代的大萧条中，Albert Kahn 破产，后来也就停止了拍摄计划。&lt;/p&gt;
&lt;p&gt;相比之前分享的&lt;a href="https://zhuanlan.zhihu.com/p/29859951"&gt;John Thomson 在十九世纪末拍摄的 《中国与中国人影像》（ Illustrations of China and its people）&lt;/a&gt;，Albert Kahn 的拍摄作品具有更强烈的视觉冲击力，色彩带来了强烈的代入感，甚至让我在观看的时候感觉似乎是在观看现代影视作品的剧照。&lt;/p&gt;
&lt;p&gt;所以下面节选了一些从网络上搜索到的 Albert Kahn 拍摄计划中的作品，分享给大家。&lt;/p&gt;
&lt;p&gt;&lt;img alt="沈阳城门口的贫富两个儿童" src="http://beijingcream.com/wp-content/uploads/2012/12/Color-photos-China-1912a.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://beijingcream.com/wp-content/uploads/2012/12/Color-photos-China-1912f.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://beijingcream.com/wp-content/uploads/2012/12/Color-photos-China-1912b.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://beijingcream.com/wp-content/uploads/2012/12/Color-photos-China-1912c.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://beijingcream.com/wp-content/uploads/2012/12/Color-photos-China-1912d.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://beijingcream.com/wp-content/uploads/2012/12/Color-photos-China-1912e.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://beijingcream.com/wp-content/uploads/2012/12/Color-photos-China-1912g-Mongolia.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://upload.wikimedia.org/wikipedia/commons/a/a5/Mongolia%2C_near_Ulaanbaatar.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://creativeroots.org/wp-content/uploads/2012/12/First-Color-Photographs-of-China-1912-albert-kahn.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://upload.wikimedia.org/wikipedia/commons/1/14/China%2C_Beijing.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://upload.wikimedia.org/wikipedia/commons/b/bd/1912_Inner_Mongolia.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://s-media-cache-ak0.pinimg.com/originals/ea/d7/7b/ead77bd45ce82924033fdba22b53cfa8.jpg"&gt;&lt;/p&gt;</content><category term="Story"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category><category term="Story"></category></entry><entry><title>关于规则的学习和打破</title><link href="/guan-yu-gui-ze-de-xue-xi-he-da-po.html" rel="alternate"></link><published>2017-12-02T22:20:00+08:00</published><updated>2017-12-02T22:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-12-02:/guan-yu-gui-ze-de-xue-xi-he-da-po.html</id><summary type="html">&lt;p&gt;前些天，在知乎上搜索关于沙占祥老先生的内容，发现了一位 id 为 @scatwang 的朋友提到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很多年前在学院路公共选修课选了北影沙占祥老师的课，他课上讲的一个观点我无比认同：曝光没有正确或者错误，也没有准确不准确，只有合适和不合适。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;过几天，我偶尔翻看 聂欣如 《影视剪辑 (复旦博学·当代电影学教程) 》的时候，又看到下面这样一段:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;循规蹈矩的技艺同先锋派的做法看上去是互不相容的，其实两者之间并没有根本的矛盾。从规则的产生来说，并不是在某一个时刻由某个人公布，颁行天下强迫大家执行，而是在人们的实际运用中逐渐为大多数的人所接受逐渐成为了“规则”。这些规则在其成为规则之前，往往也是某种形式的先锋派实验。
因此，规则是一种经验，是一种前人劳动的成果，同时也是一种避免错误，或少犯错误的学习捷径。而先锋派的做法从根本上来说也是试图创建一种能够为大家所接受的方式，它所要证明的是：规则并非全部，规则并非面面俱到疏而不漏，规则也有可改进，甚至可颠覆的地方。规则的本身也正是在不断地修改和完善中得以延续。
先锋派的做法并不具有绝对的价值，如果不能得到大家的认可，那只是一种个人的游戏，对于其他人来说毫无价值。大凡有过一定实践经验的人都能够理解规则和先锋派两者之间的关系，这就是前辈们劝诫青年有必要学习他人经验的原因。&lt;/p&gt;
&lt;p&gt;当然，许多人因为学习了规则之后变得因循守旧，不思进取和创新 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;前些天，在知乎上搜索关于沙占祥老先生的内容，发现了一位 id 为 @scatwang 的朋友提到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很多年前在学院路公共选修课选了北影沙占祥老师的课，他课上讲的一个观点我无比认同：曝光没有正确或者错误，也没有准确不准确，只有合适和不合适。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;过几天，我偶尔翻看 聂欣如 《影视剪辑 (复旦博学·当代电影学教程) 》的时候，又看到下面这样一段:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;循规蹈矩的技艺同先锋派的做法看上去是互不相容的，其实两者之间并没有根本的矛盾。从规则的产生来说，并不是在某一个时刻由某个人公布，颁行天下强迫大家执行，而是在人们的实际运用中逐渐为大多数的人所接受逐渐成为了“规则”。这些规则在其成为规则之前，往往也是某种形式的先锋派实验。
因此，规则是一种经验，是一种前人劳动的成果，同时也是一种避免错误，或少犯错误的学习捷径。而先锋派的做法从根本上来说也是试图创建一种能够为大家所接受的方式，它所要证明的是：规则并非全部，规则并非面面俱到疏而不漏，规则也有可改进，甚至可颠覆的地方。规则的本身也正是在不断地修改和完善中得以延续。
先锋派的做法并不具有绝对的价值，如果不能得到大家的认可，那只是一种个人的游戏，对于其他人来说毫无价值。大凡有过一定实践经验的人都能够理解规则和先锋派两者之间的关系，这就是前辈们劝诫青年有必要学习他人经验的原因。&lt;/p&gt;
&lt;p&gt;当然，许多人因为学习了规则之后变得因循守旧，不思进取和创新，这是客观存在的，但这与规则的学习没有关系，而与个人的生活态度和世界观相关。没有学习过规则的人未必就是勇于创新的，许多所谓的“创新”，在熟知历史的人眼中只不过是在无知地重复前人的实验或犯过的错误而已。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;聂老师这段文字，对于沙老先生的那句话而言，是一种很好的注解。&lt;/p&gt;
&lt;p&gt;基础内容是一定要掌握的，例如各自学科内的基本概念、研究范式等等。这些基础并不是禁锢学习者思维的牢笼，而只是交流沟通的共同基础。&lt;/p&gt;
&lt;p&gt;禁锢人的永远是人自己，而不可能是其他任何事物。地心说没有禁锢任何人，是邪恶的某宗教权力组织放火烧死的布鲁诺；牛顿力学没有禁锢任何人，是在当时的时代背景下缺乏先进数学思维和方法的旧派学究才会聚集一百人说爱因斯坦错了。&lt;/p&gt;
&lt;p&gt;那些被禁锢住的人，迁怒于自己学习的这些已有知识，这种做法是很荒诞的。但这种情况经常能够出现，为什么呢？恐怕可能是那些迁怒者并不具有真正的勇气去反抗进行禁锢的人，而只能对着毫无反抗能力的书面上的知识词条规则概念等等大发神威。&lt;/p&gt;
&lt;p&gt;十来年前的时候，我跟一些同学谈论起『应试教育』这一话题，我表达过这种观点：考试无非是一种形式，而且目前来看是一种相当成熟和广泛应用的形式，形式本身并不见得有那么坏的负面作用，倒是一些人把形式当做了终极目的灌输给受教育者，借以牟利，甚至达到不可告人之目的，这才是核心病症。但是同学们往往只敢骂一骂考试这种形式，却未必敢明确地对既得利益群体进行公开的抨击。说到底，还是怂罢了。&lt;/p&gt;
&lt;p&gt;有一种情形，更加荒诞丑陋。就是为了『创新』而『创新』，为了『反抗』而『反抗』。这样的情景，往往是一些对基础知识简单概念尚未全然掌握的人，而又心急想做出一番『大事业』，闹出『大名声』，就诉诸极端，简单粗暴地对前人的所有已有内容进行否定，全然一副『创新有理，政治正确』的派头。实际上满脑子里面的空虚，都透过高声叫嚷的广播喇叭传了出来，偶尔还真正伴有一些浓厚的气味，尽是些腐朽的『功名利禄』罢了。&lt;/p&gt;
&lt;p&gt;另有一种状况，也非常滑稽。就是有的深受禁锢的思想奴隶，看到他人创新探索，是万万容不得的。这种人总是要出面呵斥：『何以不守古训，行周礼？』或者说：『夫不能立，何以走？』摆出一副夫子牌位的架势。实际上他们也未必在乎所抨击的对象是否为真的创新，而只是要秉持自己身的所谓『道统』角色。这种人往往深受禁锢，却并不一定真有太靠谱的掌握，只是渣而已。&lt;/p&gt;
&lt;p&gt;所以啊，咱们社会主义四有新人啊，就时时刻刻从思想上要小心提防，避免某些狭隘认知禁锢住我们的思想；在日常生活中，见到纷争乱想，也要时刻小心甄别，其中是否有『假创新的怂货』和『假道统的人渣』。&lt;/p&gt;
&lt;p&gt;简单说，就是虚无主义和教条主义，对这两个都要反。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/Human.jpg"&gt;&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>高鹫城</title><link href="/gao-jiu-cheng.html" rel="alternate"></link><published>2017-12-01T00:00:00+08:00</published><updated>2017-12-01T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-12-01:/gao-jiu-cheng.html</id><summary type="html">&lt;h1&gt;高鹫城&lt;/h1&gt;
&lt;h5&gt;病榻之上再读燕垒生之《天行健》，感慨万千而有此渣作。&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;举兵称平等，旌旗卷江东；
降卒遭活埋，半壁烽火中。
文侯奇设计，武侯夺连城；
军车十万辆，甲士百千名。

平民无粮食，高鹫合围兵。
城破遭屠戮，爷娘成牺牲。
驰骋不曾败，武侯任孤行；
将军饮恨葬，子弟存荒冢。

奈何粮草尽，黔首赶出城；
老幼无怜悯，妻儿四散行。
校尉军兵挞，钱财尽毁空；
寒风如刀斧，长夜盼来生。

枫叶飘零落，山间遍地红，
老妪途中倒，徒留一老翁。

老翁沟边卧，霜尘沾满衣，
我非京兆人，此来为生计。
突遭天剧变，乡勇急驱离，
桌椅尽砍斫，床榻撕如絮。
雨雪纷纷落，涕泪漫漫起，
所伤亦无他，唯哀余老妻。

自幼美姿容，不逊班婕妤，
诗文人皆赏，气度更清奇。
公侯百千请，信步浣花溪 …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;高鹫城&lt;/h1&gt;
&lt;h5&gt;病榻之上再读燕垒生之《天行健》，感慨万千而有此渣作。&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;举兵称平等，旌旗卷江东；
降卒遭活埋，半壁烽火中。
文侯奇设计，武侯夺连城；
军车十万辆，甲士百千名。

平民无粮食，高鹫合围兵。
城破遭屠戮，爷娘成牺牲。
驰骋不曾败，武侯任孤行；
将军饮恨葬，子弟存荒冢。

奈何粮草尽，黔首赶出城；
老幼无怜悯，妻儿四散行。
校尉军兵挞，钱财尽毁空；
寒风如刀斧，长夜盼来生。

枫叶飘零落，山间遍地红，
老妪途中倒，徒留一老翁。

老翁沟边卧，霜尘沾满衣，
我非京兆人，此来为生计。
突遭天剧变，乡勇急驱离，
桌椅尽砍斫，床榻撕如絮。
雨雪纷纷落，涕泪漫漫起，
所伤亦无他，唯哀余老妻。

自幼美姿容，不逊班婕妤，
诗文人皆赏，气度更清奇。
公侯百千请，信步浣花溪，
一见叙心志，相念更相惜。
三餐高粱米，冬夏粗布衣，
岁月容颜改，相敬常如昔。

此乱难平复，伊人中道去，
奈何不可替，我命不足惜，
所惜亦无他，唯有家中子。

大儿常慷慨，任侠行乡里，
走马击长剑，与人分粮米。
初时闻烽火，纵马随军去，
邻人附书来，身坠长河底。
老妪尚不知，已随身故去，
妄自空劝慰，母子得圆聚。

次子勤学苦，幼学圣人言，
十六入府学，二十为孝廉。
而立成小吏，每为车马烦，
翁媪苦儿忧，攒得五两钱，
山下勤耕种，江中弄渔船，
馈儿购房宅，日夜不得闲。
城中多乱事，翰林亦驱赶，
书生多文弱，历来疾走难，
不知儿冷暖，我心实难安。

老翁兀自言，往来车马行。
微风难撼树，寂静四无声。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Story"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category><category term="Story"></category></entry><entry><title>Python3 安装 VTK 和 MayaVi 的一种姿势</title><link href="/python3-an-zhuang-vtk-he-mayavi-de-yi-chong-zi-shi.html" rel="alternate"></link><published>2017-11-18T00:00:00+08:00</published><updated>2017-11-18T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-11-18:/python3-an-zhuang-vtk-he-mayavi-de-yi-chong-zi-shi.html</id><summary type="html">&lt;h1&gt;Python3 安装 VTK 和 MayaVi 的一种姿势&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;本文基于我之前的一个回答：&lt;a href="https://www.zhihu.com/question/62747523/answer/202794539"&gt;CycleUser：anaconda上能否安装VTK？&lt;/a&gt;
友情提示：由于使用到了 conda，所以如果不指定使用国内 &lt;a href="http://mirrors.ustc.edu.cn/help/anaconda.html"&gt;ustc&lt;/a&gt; 或者&lt;a href="http://mirrors.tuna.tsinghua.edu.cn/help/anaconda/"&gt;tuna&lt;/a&gt; 的 anaconda 源，就可能需要&lt;strong&gt;科学的上网姿势&lt;/strong&gt;才能安装成功。但请不要问我如何使用科学的姿势，因为我不具备这方面的知识。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;思路简介&lt;/h2&gt;
&lt;p&gt;在 Python 上面安装配置 VTK 和 MayaVi，可能对于新手来说，是一个比较痛苦的经历。&lt;/p&gt;
&lt;p&gt;我今天正好探索 SfePy，发现似乎是要用到 VTK 和 MayaVi ，而刚刚用 pyenv 新建的 3.6.3的环境是没有安装这两个的。直接用 pip install mayavi 会提示缺少 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Python3 安装 VTK 和 MayaVi 的一种姿势&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;本文基于我之前的一个回答：&lt;a href="https://www.zhihu.com/question/62747523/answer/202794539"&gt;CycleUser：anaconda上能否安装VTK？&lt;/a&gt;
友情提示：由于使用到了 conda，所以如果不指定使用国内 &lt;a href="http://mirrors.ustc.edu.cn/help/anaconda.html"&gt;ustc&lt;/a&gt; 或者&lt;a href="http://mirrors.tuna.tsinghua.edu.cn/help/anaconda/"&gt;tuna&lt;/a&gt; 的 anaconda 源，就可能需要&lt;strong&gt;科学的上网姿势&lt;/strong&gt;才能安装成功。但请不要问我如何使用科学的姿势，因为我不具备这方面的知识。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;思路简介&lt;/h2&gt;
&lt;p&gt;在 Python 上面安装配置 VTK 和 MayaVi，可能对于新手来说，是一个比较痛苦的经历。&lt;/p&gt;
&lt;p&gt;我今天正好探索 SfePy，发现似乎是要用到 VTK 和 MayaVi ，而刚刚用 pyenv 新建的 3.6.3的环境是没有安装这两个的。直接用 pip install mayavi 会提示缺少 VTK 而报错，我在 macOS 下用 brew install vtk 和 brew link vtk 之后并没有见到效果，所以就想到了用 conda 安装 vtk，然后再用 pip 安装 mayavi 的思路。&lt;/p&gt;
&lt;p&gt;这次的场景和我在 &lt;a href="https://www.zhihu.com/question/62747523/answer/202794539"&gt;Anaconda 上安装 VTK 的回答&lt;/a&gt; 还有所不同，因为原本安装的并不是 Anaconda，而就是常规的普通 Python 3.6.3。&lt;/p&gt;
&lt;p&gt;当然，这对于万事能凑活就先对付为人生哲学的我来说，不算太大的难事，因为咱们完全可以用下面这个方案来实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用 pip 来给已有的 Python 3.6.3 安装一个 conda；&lt;/li&gt;
&lt;li&gt;然后用这个 conda 再去安装 VTK；&lt;/li&gt;
&lt;li&gt;接下来安装好了 VTK 之后再用 pip 安装 MayaVi；&lt;/li&gt;
&lt;li&gt;然后再用 conda 安装 SfePy。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我实际按照这个思路操作了一遍，在 Python 3.5.4 和 3.6.3 上都成功了，当然这两者稍有一点差别，就是在使用 conda 安装 VTK 的时候要指定使用不同的 channel，对于3.5.4，要用 menpo，对于 3.6.3 ，要用 clinicalgraphics，这一点就和我在 &lt;a href="https://www.zhihu.com/question/62747523/answer/202794539"&gt;Anaconda 上安装 VTK 的回答&lt;/a&gt; 中写的情况类似了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;1 用 pip 安装 conda&lt;/h2&gt;
&lt;p&gt;有经验的朋友可能看了上面的 1234 之后就知道该怎么做了，甚至自己完全还有更好的思路能够分享出来。然而本专栏定位是从入门开始的学习者，所以我觉得有必要把这部分详细列出来介绍一下。&lt;/p&gt;
&lt;p&gt;（这里假设你已经安装好了 pip，如果这部分有问题，请去搜索，相信这点问题难不住有探索精神的学习者。我这里用的 pip3 而不是 pip，是为了区分我同时安装的 Python2 所用的 pip 和 Python3 所用的 pip3，建议新人们只安装 Python3 就好了。如果下面的代码中使用 pip3 不成，你替换成 pip 试试又不会得病。）&lt;/p&gt;
&lt;p&gt;首先，我们用 PIP 来安装 conda。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3 install conda
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这一步骤中如果有出错提示，可能是一些 conda 必备的依赖包没有安装。可能为 ruamel.yaml, pycosat, idna, certifi, chardet, urllib3, requests 这几个。&lt;/p&gt;
&lt;p&gt;可以尝试一起装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3 install ruamel.yaml pycosat idna certifi chardet urllib3 requests conda
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这好办，如果一下安装报上面这些包的错，那就一个个用 pip 来安装了就可以了，不再赘述。&lt;/p&gt;
&lt;h2&gt;2 用 conda 安装 VTK&lt;/h2&gt;
&lt;p&gt;这里就是到了一个稍微关键一点的地方，3.5 要用 menpo，3.6要用 clinicalgraphics。&lt;/p&gt;
&lt;p&gt;另外，由于咱们是在 Python 中使用 pip 安装的 conda，而不是一开始安装的 miniconda 或者 anaconda，所以&lt;strong&gt;不能直接使用 conda 命令，而是要当作一个 python 模块来用&lt;/strong&gt;，所以下面的几个命令里面，都&lt;strong&gt;加上了 python3 -m&lt;/strong&gt;，这也是和我在 &lt;a href="https://www.zhihu.com/question/62747523/answer/202794539"&gt;Anaconda 上安装 VTK 的回答&lt;/a&gt; 很不一样的，&lt;strong&gt;新手可能会对此不太注意&lt;/strong&gt;，从而导致安装错误，所以一定仔细阅读哦。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;适用于3.5：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m conda install -c menpo &lt;span class="nv"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;适用于3.6：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m conda install -c clinicalgraphics &lt;span class="nv"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;.1.0 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;关于版本的指定上，建议你也按照下面的来，避免自己走弯路，我虽然不算老司机，但这些代码都好歹是安装成功过的。我当然知道 VTK 官方版本最新的 Release 已经 8.01 了，但是我自己没弄成功，就没办法来分享安装最新版的成功经验了。&lt;/p&gt;
&lt;h2&gt;3 安装好了 VTK 之后再用 pip 安装 MayaVi&lt;/h2&gt;
&lt;p&gt;刚这一步安装好了 VTK 之后，就可以用 pip 来安装 MayaVi 了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3 install mayavi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;4 再用 conda 安装 SfePy&lt;/h2&gt;
&lt;p&gt;我安装 MayaVi 是为了 安装 SfePy，所以上面的弄妥了之后自然直接安装了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m conda install -c conda-forge sfepy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;当然了，每一步安装完成之后，都建议你测试一下是否安装成功，在&lt;strong&gt; Bash 或者 CMD 等终端内运行&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -c &lt;span class="s2"&gt;&amp;quot;import vtk&amp;quot;&lt;/span&gt;         &lt;span class="c1"&gt;#这是测试 VTK &lt;/span&gt;
python3 -c &lt;span class="s2"&gt;&amp;quot;import mayavi&amp;quot;&lt;/span&gt;      &lt;span class="c1"&gt;#这是测试 MayaVi &lt;/span&gt;
python3 -c &lt;span class="s2"&gt;&amp;quot;import sfepy&amp;quot;&lt;/span&gt;       &lt;span class="c1"&gt;#这是测试 sfepy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果没什么问题，就不会有报错什么的。另外注意是在&lt;strong&gt;终端内运行&lt;/strong&gt;，不是在 Python 解释器里面。这几个命令实际上就是让 Python3 来导入这几个模块，来看看是不是报错，没报错就一般都是安装完毕没问题咯。&lt;/p&gt;
&lt;p&gt;其实 conda 还有个好处，就是可以用来升级已经安装的模块，可以在终端内输入如下命令来实现：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m conda update --all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;跟直接使用 Anaconda 相比，也就是多加了前缀 python3 -m 而已。&lt;/p&gt;
&lt;p&gt;这一期就是这样，希望新手朋友们看了之后能够大概弄清楚如何安装 VTK 和 MayaVi。&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="VTK"></category><category term="MayaVi"></category><category term="Conda"></category></entry><entry><title>我自学编程的故事</title><link href="/wo-zi-xue-bian-cheng-de-gu-shi.html" rel="alternate"></link><published>2017-11-15T00:00:00+08:00</published><updated>2017-11-15T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-11-15:/wo-zi-xue-bian-cheng-de-gu-shi.html</id><summary type="html">&lt;p&gt;这几天忙着改稿子等一些琐事，一直没有更新专栏文章，今天就回忆一下自己学编程的以往经历，权且充个数。&lt;/p&gt;
&lt;p&gt;七八年前的时候我曾经跟 &lt;a href="http://www.zhihu.com/people/f7915dfbda102c5b427dcb6fe6d98104"&gt;@不是假棋&lt;/a&gt; 等小伙伴在计算机软硬件啊路由器刷机方面玩耍过，但在写代码方面，我一直是门外汉，水平止步于本科层次非计算机专业的 C++选修课。真正开始认真对待编程学习，还是从读研以后。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;再学代码，穷生上课用电脑；频遭冷眼，同侪纷纷看稀奇&lt;/h2&gt;
&lt;p&gt;2013 年，我回学校读书了，当时学校要求非计算机专业的研究生从 C++ 和 VB 两门课里面二选一，我当然选了 C++，这里不引战了，就不多说理由了。当时学校的 C++ 课程授课地点是综合楼一层阶梯教室，里面根本没有学生用的电脑，只有老师站在前面讲，学生在底下听。&lt;/p&gt;
&lt;p&gt;我这个人死脑筋，选了一门课就想着一定要让自己花的学费值了，要学会才行，所以就伙同好基友一起购买了龙芯 8089d 笔记本电脑，更换成为 Debian 操作系统，安装了 Nano 和 GCC，在课堂上老师一边讲课的同时 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;这几天忙着改稿子等一些琐事，一直没有更新专栏文章，今天就回忆一下自己学编程的以往经历，权且充个数。&lt;/p&gt;
&lt;p&gt;七八年前的时候我曾经跟 &lt;a href="http://www.zhihu.com/people/f7915dfbda102c5b427dcb6fe6d98104"&gt;@不是假棋&lt;/a&gt; 等小伙伴在计算机软硬件啊路由器刷机方面玩耍过，但在写代码方面，我一直是门外汉，水平止步于本科层次非计算机专业的 C++选修课。真正开始认真对待编程学习，还是从读研以后。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;再学代码，穷生上课用电脑；频遭冷眼，同侪纷纷看稀奇&lt;/h2&gt;
&lt;p&gt;2013 年，我回学校读书了，当时学校要求非计算机专业的研究生从 C++ 和 VB 两门课里面二选一，我当然选了 C++，这里不引战了，就不多说理由了。当时学校的 C++ 课程授课地点是综合楼一层阶梯教室，里面根本没有学生用的电脑，只有老师站在前面讲，学生在底下听。&lt;/p&gt;
&lt;p&gt;我这个人死脑筋，选了一门课就想着一定要让自己花的学费值了，要学会才行，所以就伙同好基友一起购买了龙芯 8089d 笔记本电脑，更换成为 Debian 操作系统，安装了 Nano 和 GCC，在课堂上老师一边讲课的同时，我们一边用手上的电脑来运行老师在讲解的代码。&lt;/p&gt;
&lt;p&gt;选择龙芯，一个主要原因是因为这机器性能实在拙计很难看视频玩游戏，而且 MIPS 架构下也没有什么太容易分散注意力的应用。当然实际上真实的原因是那时候我们都穷，每个月连现在的 600 元补助都没有，而龙芯笔记本当时团购只要 279元，是我们唯一买得起的设备。&lt;/p&gt;
&lt;p&gt;当时我们认识的很多其他同学都视我俩为奇葩，后来基友也就放弃了，只有我一个人带着龙芯笔记本上课了。&lt;/p&gt;
&lt;p&gt;虽然我比较笨，但用这种一边听一遍运行测试的方法，居然还也大概都理解了老师讲授的内容。所以在期末的时候，我开始给一些感到吃力的同学就课上讲的内容进行辅导。&lt;/p&gt;
&lt;p&gt;我还清晰地记得，当时还是有相当一部分同学依然认为我的这些行为都是很奇葩很脑残的，他们普遍认为计算机相关的课程应付过去就可以，没有任何用处。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;身患疾病，庸人从此无用处；机缘巧合，外行沉迷学编程&lt;/h2&gt;
&lt;p&gt;后来我患上了代谢疾病，并且还诊断出了良性肿瘤，虽然不至于有太大危险，但是行走很不方便，基本告别了野外地质工作。那段时间，整个人非常消沉，不知道活下去还有什么用处。&lt;/p&gt;
&lt;p&gt;人总是要找个什么兴趣爱好作为精神寄托或者突破点的，然而我手指关节已经很不灵活，吉他已拿不起来玩耍了。所以就还是玩耍一下计算机。想起来曾经跟人吹牛胡侃说要写一个地质学用途的软件，解决各种日常问题，于是就开始搜索该如何具体去做。&lt;/p&gt;
&lt;p&gt;2014 年初，我看了唐大仕老师的 Java 视频公开课，就借机学了几句 Java，一周之后写了个 Android 小应用，但那时也谈不上入门，因为脑袋里面都还是混乱的，都是东一处西一处照着拼凑四处临摹来拼凑起来的，而且可能因为我太懒又太笨，由于语法等原因对 Java 始终没有爱。后来因为交学费缺钱，小应用也都卖掉给合伙的朋友了。&lt;/p&gt;
&lt;p&gt;但是对编程的兴趣，倒是一点没减弱，只是觉得自己应该换一个对自己来说学习效率更高的语言。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;闲来无事，翻译资料成乐趣；开设专栏，由此结识众英雄&lt;/h2&gt;
&lt;p&gt;这样到了 2015 年初，我开始学习 Python，才算真正开始算自学编程了，希望能自己写出自己需要的应用软件。&lt;/p&gt;
&lt;p&gt;开始时看 codeacademy、&lt;a href="http://zetcode.com"&gt;http://zetcode.com&lt;/a&gt;、 &lt;a href="http://fenby.com"&gt;http://fenby.com&lt;/a&gt; 的资料教程，当时都让我觉得还挺难的，可能还是由于本身智力导致的。&lt;/p&gt;
&lt;p&gt;偶然间听人推荐了 ThinkPython，&lt;em&gt;就买了一个疗程试试看&lt;/em&gt;， 抱歉，跑偏了，是就下载了原版试试看，感觉很赞，读起来很顺畅，就顺便翻译了一下，开始的时候就是自己翻译着玩，后来整理成了一个中英双语的，发到了 github 上面：&lt;a href="http://github.com/cycleuser/ThinkPython-en-cn"&gt;cycleuser/ThinkPython-en-cn&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;然后我想做 GUI 界面的应用，又想跨平台，想起来有朋友给推荐的 Kivy，于是又看 Kivy 的官方文档，也顺路翻译了一个：&lt;a href="http://github.com/Kivy-CN/Kivy-CN"&gt;Kivy-CN/Kivy-CN&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;对 Kivy 文档的翻译，也是产生这个专栏的最初原因，我当时想着应该放到一个人气多一点的地方，以便聚集更多志同道合有相关爱好的小伙伴。&lt;/p&gt;
&lt;p&gt;再接下来就是对机器学习突然有了兴趣，于是开始翻译 &lt;a href="http://github.com/Kivy-CN/Stanford-CS-229-CN"&gt;Stanford-CS-229-CN&lt;/a&gt; 和 &lt;a href="http://github.com/Kivy-CN/Duke-STA-663-CN"&gt;Duke-STA-663-CN&lt;/a&gt;。这个过程中又结识了很多很有趣的小伙伴，比如 &lt;a href="http://www.zhihu.com/people/6d1a164af570b03f27b5f58534f7557e"&gt;@飞龙&lt;/a&gt;、 &lt;a href="http://www.zhihu.com/people/eaf435b228ce0b038a4afe8203f59b49"&gt;@路人甲&lt;/a&gt; 、 &lt;a href="http://www.zhihu.com/people/5bb9cc994a9029c26ed767f197c8cccd"&gt;@霍开拓&lt;/a&gt;&lt;a href="http://www.zhihu.com/people/4a0d3a504b9859139f2c003005230717"&gt;@霍华德&lt;/a&gt; 等等。&lt;/p&gt;
&lt;p&gt;学了个马虎眼之后，我发现 Kivy 的稳定性其实一般，于是改用了 PyQt，又开始看 &lt;a href="http://zetcode.com"&gt;http://zetcode.com&lt;/a&gt;。偶然地又发现了 &lt;a href="http://www.zhihu.com/people/49bf4d728e13852bd0d56ecc1f1c7bd3"&gt;@我想飞&lt;/a&gt; 的专栏 &lt;a href="https://zhuanlan.zhihu.com/xdbcb8"&gt;PyQt5图形界面编程&lt;/a&gt; 里面的教程做得很棒很直观，也学习了一下。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;初成拙作，劫后整理先前事；前途尚远，余生不计身后名&lt;/h2&gt;
&lt;p&gt;2016 年末，我做完了第一次手术，躺在床上，想了想也算大概学了点皮毛，于是就开始将早先写的一些脚本汇总整理起来，做成了一个图形界面的简单的小应用：&lt;a href="http://geopytool.com/zhong-wen-jian-jie.html"&gt;GeoPyTool&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我自学的过程是很散漫的，随着兴趣和需求随时变换选用的工具。&lt;/p&gt;
&lt;p&gt;如果是科班出身的人来做同样的事情，恐怕用不来一两天甚至几个小时就能做出来，而且还会做得更高效更美观更完善，因为他们往往很清楚各个部分需要用什么模块来实现，用哪些方法来实现最优。&lt;/p&gt;
&lt;p&gt;不过我还会继续做这些，因为这已经从最开始的吹牛，到后来的兴趣爱好，变成了现在的一种寄托。我发现在做这些事情的时候，我还是有点用的，还能为一些人提供一点点帮助，起码也算不枉此生。&lt;/p&gt;
&lt;p&gt;回想起来，当年那些一起上课的同学，已经各自前途远大，都成了专业领域的精英人物。我资质愚钝又性格乖僻，肯定不足与他们相提并论，就只是做一些自己想做的事情，开心一下了。&lt;/p&gt;</content><category term="Story"></category><category term="Memory"></category><category term="Story"></category></entry><entry><title>三十年前的中国，八十年代的童年，秋山亮二镜头下的小朋友</title><link href="/san-shi-nian-qian-de-zhong-guo-ba-shi-nian-dai-de-tong-nian-qiu-shan-liang-er-jing-tou-xia-de-xiao-peng-you.html" rel="alternate"></link><published>2017-10-05T23:00:00+08:00</published><updated>2017-10-05T23:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-10-05:/san-shi-nian-qian-de-zhong-guo-ba-shi-nian-dai-de-tong-nian-qiu-shan-liang-er-jing-tou-xia-de-xiao-peng-you.html</id><summary type="html">&lt;p&gt;前些天发了一篇&lt;a href="https://zhuanlan.zhihu.com/p/29814832"&gt;五十年前的中国&lt;/a&gt;，后来又发了一篇&lt;a href="https://zhuanlan.zhihu.com/p/29859951"&gt;一百五十年前的中国&lt;/a&gt;，其中有一位网友在评论中推荐了这本秋山亮二的摄影集《你好小朋友》。&lt;/p&gt;
&lt;p&gt;我便搜索了一下，找来了一些资料，现在整理如下。&lt;/p&gt;
&lt;p&gt;本文图片和文案选自&lt;a href="http://news.hexun.com/2014-10-23/169617135.html"&gt;和讯新闻&lt;/a&gt;和&lt;a href="http://works.ccsph.com/detail_11304.html"&gt;现代摄影网&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i5.hexunimg.cn/2014-10-23/169617139.jpg"&gt;&lt;/p&gt;
&lt;p&gt;上图为刘天拍摄的本文照片的原拍摄者，日本摄影家秋山亮二，摄影家秋山青瓷之子，1942 年生于东京，在 80 年代来到中国，游历了昆明、呼和浩特、乌鲁木齐等地，拍下了当地儿童日常生活的照片。秋山在拍摄这部摄影集之前，并不会中文，也只是随着旅游团来过中国两三次，他的这次拍摄是受“柯尼卡高野影廊”的前身“小西六写真工业株式会社”的委派拍摄中国的孩子们，历时几个月，在一位翻译和另一位助手的全程参与下完成。所以这部作品实际上是一个对中国并不算很熟悉的摄影者所记录的那个年代，是对 80 年代的中国的一点很独特的记录。&lt;/p&gt;
&lt;p&gt;1983年，这些照片以《你好，小朋友》为题在日本结集出版。目前在中国大陆似乎只能从&lt;a href="http://book.kongfz.com/154786/649333565/"&gt;孔夫子旧书网&lt;/a&gt;购买到二手的了。&lt;/p&gt;
&lt;p&gt;我本人就是 80 后 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;前些天发了一篇&lt;a href="https://zhuanlan.zhihu.com/p/29814832"&gt;五十年前的中国&lt;/a&gt;，后来又发了一篇&lt;a href="https://zhuanlan.zhihu.com/p/29859951"&gt;一百五十年前的中国&lt;/a&gt;，其中有一位网友在评论中推荐了这本秋山亮二的摄影集《你好小朋友》。&lt;/p&gt;
&lt;p&gt;我便搜索了一下，找来了一些资料，现在整理如下。&lt;/p&gt;
&lt;p&gt;本文图片和文案选自&lt;a href="http://news.hexun.com/2014-10-23/169617135.html"&gt;和讯新闻&lt;/a&gt;和&lt;a href="http://works.ccsph.com/detail_11304.html"&gt;现代摄影网&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i5.hexunimg.cn/2014-10-23/169617139.jpg"&gt;&lt;/p&gt;
&lt;p&gt;上图为刘天拍摄的本文照片的原拍摄者，日本摄影家秋山亮二，摄影家秋山青瓷之子，1942 年生于东京，在 80 年代来到中国，游历了昆明、呼和浩特、乌鲁木齐等地，拍下了当地儿童日常生活的照片。秋山在拍摄这部摄影集之前，并不会中文，也只是随着旅游团来过中国两三次，他的这次拍摄是受“柯尼卡高野影廊”的前身“小西六写真工业株式会社”的委派拍摄中国的孩子们，历时几个月，在一位翻译和另一位助手的全程参与下完成。所以这部作品实际上是一个对中国并不算很熟悉的摄影者所记录的那个年代，是对 80 年代的中国的一点很独特的记录。&lt;/p&gt;
&lt;p&gt;1983年，这些照片以《你好，小朋友》为题在日本结集出版。目前在中国大陆似乎只能从&lt;a href="http://book.kongfz.com/154786/649333565/"&gt;孔夫子旧书网&lt;/a&gt;购买到二手的了。&lt;/p&gt;
&lt;p&gt;我本人就是 80 后，然而我来自偏远落后的地区，所以童年生活远不如图片中的丰富，因此没有什么回忆和共鸣。
分享给诸君，看看大家是否有类似的记忆。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229223.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229362.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229802.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229861.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229250.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229989.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229359.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229626.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229928.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229422.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229816.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229960.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229755.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229446.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229375.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229729.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229228.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229620.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229714.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229191.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229750.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229264.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229921.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229399.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229905.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229802.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229913.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229873.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229224.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229826.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229908.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229869.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229668.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229371.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229441.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229236.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229650.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://upload.art.ifeng.com/2017/0605/1496643229121.jpg"&gt;&lt;/p&gt;</content><category term="Story"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category><category term="Story"></category></entry><entry><title>一百五十年前的中国</title><link href="/yi-bai-wu-shi-nian-qian-de-zhong-guo.html" rel="alternate"></link><published>2017-10-03T00:00:00+08:00</published><updated>2017-10-03T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-10-03:/yi-bai-wu-shi-nian-qian-de-zhong-guo.html</id><summary type="html">&lt;p&gt;前些天发了一篇&lt;a href="https://zhuanlan.zhihu.com/p/29814832?fc=1&amp;amp;group_id=898447734963572736#comment-341178264"&gt;五十年前的中国&lt;/a&gt;，然后让我意外的是居然有了过五百的点赞，而且很多朋友还表示希望看到更早一些的照片，以及除了北方以外的南方气息。我就想到了 John Thomson 的这本 &lt;em&gt;Illustrations of China and its people&lt;/em&gt;。这本书出版于 1875 年左右，目前已经处于公有领域，英文原版可以在&lt;a href="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ct_alb_01.html"&gt;MIT 大学网站&lt;/a&gt;阅读，这个网站也是本文的图片素材和部分文字翻译原文的来源。&lt;/p&gt;
&lt;p&gt;另外此图片集的中文版本题为《中国与中国人影像：约翰·汤姆逊记录的晚清帝国》/（英）汤姆逊著；徐家宁译，2015 年由广西师范大学出版社出版，可以在&lt;a href="https://item.jd.com/11687871.html"&gt;京东&lt;/a&gt;和&lt;a href="https://www.amazon.cn/%E4%B8%AD%E5%9B%BD%E4%B8%8E%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%BD%B1%E5%83%8F-%E8%8B%B1-%E7%BA%A6%E7%BF%B0-%E6%B1%A4%E5%A7%86%E9%80%8A%E8%91%97-%E5%BE%90%E5%AE%B6%E5%AE%81%E8%AF%91/dp/B01DNHJ1TC/ref=sr_1_1?s=digital-text&amp;amp;ie=UTF8&amp;amp;qid=1507013454&amp;amp;sr=1-1&amp;amp;keywords=%E4%B8%AD%E5%9B%BD%E4%B8%8E%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%BD%B1%E5%83%8F"&gt;亚马逊&lt;/a&gt;等网站在线购买。&lt;/p&gt;
&lt;p&gt;另外有一个专门修复和考究旧照片的网站，非常棒，分享给大家：&lt;a href="http://jiuyingzhi.com/"&gt;旧影志&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Illustrations of China and its people 英文原版封面：
&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/alb_01/ct1001_1128672.jpg"&gt;&lt;/p&gt;
&lt;p&gt;中文翻译版封面 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;前些天发了一篇&lt;a href="https://zhuanlan.zhihu.com/p/29814832?fc=1&amp;amp;group_id=898447734963572736#comment-341178264"&gt;五十年前的中国&lt;/a&gt;，然后让我意外的是居然有了过五百的点赞，而且很多朋友还表示希望看到更早一些的照片，以及除了北方以外的南方气息。我就想到了 John Thomson 的这本 &lt;em&gt;Illustrations of China and its people&lt;/em&gt;。这本书出版于 1875 年左右，目前已经处于公有领域，英文原版可以在&lt;a href="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ct_alb_01.html"&gt;MIT 大学网站&lt;/a&gt;阅读，这个网站也是本文的图片素材和部分文字翻译原文的来源。&lt;/p&gt;
&lt;p&gt;另外此图片集的中文版本题为《中国与中国人影像：约翰·汤姆逊记录的晚清帝国》/（英）汤姆逊著；徐家宁译，2015 年由广西师范大学出版社出版，可以在&lt;a href="https://item.jd.com/11687871.html"&gt;京东&lt;/a&gt;和&lt;a href="https://www.amazon.cn/%E4%B8%AD%E5%9B%BD%E4%B8%8E%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%BD%B1%E5%83%8F-%E8%8B%B1-%E7%BA%A6%E7%BF%B0-%E6%B1%A4%E5%A7%86%E9%80%8A%E8%91%97-%E5%BE%90%E5%AE%B6%E5%AE%81%E8%AF%91/dp/B01DNHJ1TC/ref=sr_1_1?s=digital-text&amp;amp;ie=UTF8&amp;amp;qid=1507013454&amp;amp;sr=1-1&amp;amp;keywords=%E4%B8%AD%E5%9B%BD%E4%B8%8E%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%BD%B1%E5%83%8F"&gt;亚马逊&lt;/a&gt;等网站在线购买。&lt;/p&gt;
&lt;p&gt;另外有一个专门修复和考究旧照片的网站，非常棒，分享给大家：&lt;a href="http://jiuyingzhi.com/"&gt;旧影志&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Illustrations of China and its people 英文原版封面：
&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/alb_01/ct1001_1128672.jpg"&gt;&lt;/p&gt;
&lt;p&gt;中文翻译版封面：
&lt;img alt="" src="https://s3.cn-north-1.amazonaws.com.cn/sitbweb-cn/content/B01DNHJ1TC/resources/399169400"&gt;&lt;/p&gt;
&lt;h2&gt;名人&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4017_1128910b.jpg"&gt;
上图为李鸿章。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1012_1128683.jpg"&gt;
上图为恭亲王，爱新觉罗·奕䜣，1833—1898，咸丰皇帝的异母弟，洋务派的朝中支持者。上面这张照片大概拍摄于 1865 年前后。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1062_1128713.jpg"&gt;
上图为两广总督，瑞麟，当时是欧洲人群众知名度最高的中国官员，他曾经参与在 1860 年与英法联军的作战，战败逃脱撤职，后清廷来与捻军作战而再次被任用。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4077_1128946b.jpg"&gt;
上图为数学家李善兰和他的学生们的合影。&lt;/p&gt;
&lt;h2&gt;风光&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1015_1128686.jpg"&gt;
上面这张照片拍摄的是香港跑马地（Happy Valley）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1017_1128688.jpg"&gt;
上面这张照片是香港的港口，拍摄于 1869年。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1026_1128693.jpg"&gt;
上面这张照片是香港的钟楼，在当时建成完工没过几年，算是当年比较时尚的建筑。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1028_1128695.jpg"&gt;
上图是香港海边的街景。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1038_1128701.jpg"&gt;
上图是一艘当时的中国帆船。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1076_1128723.jpg"&gt;
上图是当时在英国领事馆内拍摄的一座古塔，据记载建成于梁武帝萧衍在位期间。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1081_1128726b.jpg"&gt;
上图为广州的一所寺庙，名为 Honam Temple。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1082_1128726c.jpg"&gt;
上图为华林寺内的一个佛堂。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1088_1128731.jpg"&gt;
上图是广州的街景，这条巷子里面都是药店。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2052_1128786.jpg"&gt;
上面两张图是当时的鼓浪屿。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2065_1128793.jpg"&gt;
上图为当时的福州船政局，在洋务运动时期，福州开办有船政局以及船政学堂，相当于兵工厂和海事学院。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2067_1128795.jpg"&gt;
上图为福州街景。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2069_1128797.jpg"&gt;
上图为福建省永泰县的一座寺庙。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2078_1128804b.jpg"&gt;
上图为当时福建省的梯田，牛是当时的主要耕种助力。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2101_1128814c.jpg"&gt;
上图是福建延平闽江的水流，拍摄于 1871 年 12 月。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3012_1128830.jpg"&gt;
上图为浙江宁波的福建会馆。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3014_1128832.jpg"&gt;
上图为宁波附近的一个瀑布。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3018_1128835a.jpg"&gt;
上图为宁波附近的一个小村落。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3024_1128838.jpg"&gt;
上图为当时的上海。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3026_1128840.jpg"&gt;
上图为上海的其他几座建筑。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3046_1128853.jpg"&gt;
上图为南京全貌照片。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3054_1128857.jpg"&gt;
上图为九江的一处租界。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3068_1128865b.jpg"&gt;
上图为汉口租界。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3071_1128867a.jpg"&gt;
上图为黄鹤楼。&lt;/p&gt;
&lt;p&gt;下面几张是当时的长江沿途风光：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3089_1128879c.jpg"&gt;
&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3090_1128879d.jpg"&gt;
&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3093_1128881a.jpg"&gt;
&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3104_1128885.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4023_1128913a.jpg"&gt;
上图为山东省烟台市芝罘区是中国历史上最早的外洋通商口岸之一，因其北部的中国最大、世界最典型的陆连岛----芝罘岛而得名。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4024_1128913b.jpg"&gt;
上图为天津街景。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4027_1128915.jpg"&gt;
上图为北京国子监。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4029_1128917.jpg"&gt;
上图为北京观象台。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4036_1128923a.jpg"&gt;
上图为当时的中式楼房。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4043_1128928.jpg"&gt;
上图为当时的北京前门大街。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4047_1128931a.jpg"&gt;
上图为当时的北京钟楼。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4048_1128931b.jpg"&gt;
上图为当时的北京鼓楼。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4049_1128931c.jpg"&gt;
上图为当时的北京的一家布店。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4095_1128956.jpg"&gt;
上图为颐和园的一座拱桥。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4110_1128967.jpg"&gt;
上图为南口峡谷。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4114_1128970a.jpg"&gt;
上图为长城。&lt;/p&gt;
&lt;h2&gt;人像&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1020_1128691.jpg"&gt;
上面几张照片中，左上是香港当年的“出租轿子”，类似如今的出租车；右上是一名香港地区的学生；左下是当时的女童；右下是一位英文音译名字为 Lumqua 的中国青年画家，他曾经跟随一位名为 Chinnery 的西方画家学习油画。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1034_1128698c.jpg"&gt;
&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1035_1128698d.jpg"&gt;
上两图是民间艺人，摄影者在文中提到他觉得胡琴和琵琶像是中国的提琴和吉他一样。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1045_1128704d.jpg"&gt;
上图是当时在大烟馆里面吸大烟的华人青年。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1049_1128707a.jpg"&gt;
上图是当时富裕阶层吸食鸦片的场景。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1050_1128707b.jpg"&gt;
上图是一家人晚饭后的情景。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1051_1128707c.jpg"&gt;
上图是一位读书人在待客室内拍摄的坐像。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1055_1128709a.jpg"&gt;
上图是一位有一定文化的老年人，佩戴的是中国制造的眼镜，镜片使用水晶制作。当时福州船政学堂刚刚开设了与显微镜和望远镜制作相关的课程，推测拍摄于洋务运动时期。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1056_1128709b.jpg"&gt;
上图是刚刚那位老先生的老伴，干净整洁，头发梳理得非常整齐。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1057_1128709c.jpg"&gt;
上图是当时的一位青年劳工，据记载在同一个历史时期，有大量华人劳工参与了美洲的建设，包括铁路等工程当中，生活凄苦悲惨。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1064_1128715.jpg"&gt;
上图为清军士兵，原文说明是广州的八旗炮兵，归属于当时保护广州领事 D. B. Robertson 的卫队。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1083_1128726d.jpg"&gt;
上图为广州华林寺的住持和尚。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery1/images/ct1101_1128737c.jpg"&gt;
上图为查验银两成色的工人。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2071_1128799.jpg"&gt;
上图为福建省某寺庙中的僧人。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2084_1128807a.jpg"&gt;
上图是福建省的两名搬运工人。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2085_1128807b.jpg"&gt;
上图是福州城的一位公职人员，原文说是马快（Ma-Qui），推测应该是类似捕头一类的负责治安的衙役。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2086_1128807c.jpg"&gt;
上图是乞丐头领（右侧用手指人者）对手下乞丐进行循环的场景，底层乞讨人员获得的收益要有相当一部分被这种“管理者”盘剥掉。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2090_1128809a.jpg"&gt;
上图为当时华人乘坐轿子的场景。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2091_1128809b.jpg"&gt;
上图是官员骑乘马匹的场景。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2092_1128809c.jpg"&gt;
上图是当时农民借助耕牛进行耕地的场景。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery2/images/ct2093_1128809d.jpg"&gt;
上图是富裕阶层驯养的赛马。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3033_1128843a.jpg"&gt;
上图为上海的独轮车。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3044_1128851.jpg"&gt;
上图为金陵制造局的工作人员测试枪械。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3051_1128855c.jpg"&gt;
上图为金陵制造局的生产车间内，工人正在操作机器。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3050_1128855b.jpg"&gt;
上图是由洋人训练华人组成的部队，推测可能是当年曾经参与镇压太平天国的洋枪队。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3056_1128859.jpg"&gt;
上图为九江街边的小商贩。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3060_1128862a.jpg"&gt;
上图为九江码头的官员和人说话。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery3/images/ct3074_1128867d.jpg"&gt;
上图为船上的船工和乘客。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4056_1128936a.jpg"&gt;
上图为当时修脚的人。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4090_1128954a.jpg"&gt;
上图为当时的清军火枪兵。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ocw.mit.edu/ans7870/21f/21f.027/john_thomson_china_03/ctgallery4/images/ct4091_1128954b.jpg"&gt;
上图为当时的清军弓箭手。&lt;/p&gt;</content><category term="Story"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category><category term="Story"></category></entry><entry><title>GlumPy-Getting started</title><link href="/glumpy-getting-started.html" rel="alternate"></link><published>2017-10-01T00:00:00+08:00</published><updated>2017-10-01T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-10-01:/glumpy-getting-started.html</id><summary type="html">&lt;h1&gt;GlumPy 中文文档翻译：上手简介&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://glumpy.readthedocs.io/en/latest/quickstart.html"&gt;本文档原文地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;开始上手使用一个新的库或者框架有时候可能会让人头大，尤其是要阅读超级多的参考资料的情况下。本章就仅对 GlumPy 进行一下非常简要的介绍，而不去纠结各种细节。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要内容&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建窗口&lt;/li&gt;
&lt;li&gt;绘制四边形&lt;/li&gt;
&lt;li&gt;生成动画&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;创建窗口&lt;/h2&gt;
&lt;p&gt;创建一个新的窗口，这个过程代码看起来应该是比较好理解的，如下所示：
（译者注：这里的代码每一个步骤之间都是连贯的，建议读者在 ipython 里面逐个粘贴，不要错过漏掉中间的，否则运行肯定出错。所以当你遇到运行出错的时候建议先检查一下是不是中间有漏掉的。）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glumpy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;
&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这时候你就能在桌面上马上看到这个窗口了，可能窗口上还有一些乱七八糟的内容。这是因为我们没有对创口进行清空。所以下面这个带窗口清空的代码就更好一些：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glumpy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nd"&gt;@window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_draw …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;GlumPy 中文文档翻译：上手简介&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://glumpy.readthedocs.io/en/latest/quickstart.html"&gt;本文档原文地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;开始上手使用一个新的库或者框架有时候可能会让人头大，尤其是要阅读超级多的参考资料的情况下。本章就仅对 GlumPy 进行一下非常简要的介绍，而不去纠结各种细节。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要内容&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建窗口&lt;/li&gt;
&lt;li&gt;绘制四边形&lt;/li&gt;
&lt;li&gt;生成动画&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;创建窗口&lt;/h2&gt;
&lt;p&gt;创建一个新的窗口，这个过程代码看起来应该是比较好理解的，如下所示：
（译者注：这里的代码每一个步骤之间都是连贯的，建议读者在 ipython 里面逐个粘贴，不要错过漏掉中间的，否则运行肯定出错。所以当你遇到运行出错的时候建议先检查一下是不是中间有漏掉的。）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glumpy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;
&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这时候你就能在桌面上马上看到这个窗口了，可能窗口上还有一些乱七八糟的内容。这是因为我们没有对创口进行清空。所以下面这个带窗口清空的代码就更好一些：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glumpy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nd"&gt;@window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在这个版本的代码中，使用了 on_draw() 这个事件，每当窗口需要重绘（redraw）的时候，就会调用这个事件。在 on_draw  这个 handler 中，窗口（window）区域被清理到了默认的背景颜色—黑色。&lt;/p&gt;
&lt;p&gt;最后调用了 app.run()，这就将控制器交给了 GlumPy 应用循环体，可以对鼠标和键盘之类的应用事件进行响应。&lt;/p&gt;
&lt;h4&gt;特别注意&lt;/h4&gt;
&lt;p&gt;只有当所有的应用窗口都关闭的情况下，&lt;strong&gt;run&lt;/strong&gt; 方法才会返回（return），除非整个程序是运行在&lt;strong&gt;交互模式（interactive mode）&lt;/strong&gt;下。如果你使用了  --interactive 这样的参数来切换到交互模式下运行，那么 app.run() 就可能不会显示出一整块。（译者注：这句话翻译得有问题，原文是 If you start the program using the --interactive switch, the app.run() is no longer blocking，回头我再详细润色。）&lt;/p&gt;
&lt;h2&gt;绘制四边形&lt;/h2&gt;
&lt;p&gt;现代的 OpenGL 非常强大，但是理解起来挺难的，编写相关程序也是如此。任何的绘制操作都需要一系列的准备步骤，这就使得在不使用第三方库的情况下，绘制过程会繁琐无比。GlumPy 通过 gloo 界面，提供了一些非常简单的使用体验，gloo 可以看做是将 NumPy 和 OpenGL 结合起来的一种“胶水（glue）”。（译者注：这也是 GlumPy 名字的意义所在，GL +  NumPy = GlumPy）&lt;/p&gt;
&lt;p&gt;接下来咱们就用 GlumPy 来绘制一个彩色的四边形吧。第一步自然还是要导入相关的模块然后创建窗口：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glumpy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gloo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gl&lt;/span&gt;

&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后我们要创建一个 GLSL 程序，用来显示这个四边形。这就要我们先来写一个顶点（vertex）和一个片段着色器（fragment shader），这两个是要用来告诉 OpenGL 要绘制什么，以及如何绘制。目前你还不用纠结去理解这些名词概念和细节，但是要注意到一个重要的点，就是这些 OpenGL 程序都是文本形式的字符串（text strings）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;vertex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;         attribute vec2 position;&lt;/span&gt;
&lt;span class="s2"&gt;         void main()&lt;/span&gt;
&lt;span class="s2"&gt;         {&lt;/span&gt;
&lt;span class="s2"&gt;             gl_Position = vec4(position, 0.0, 1.0);&lt;/span&gt;
&lt;span class="s2"&gt;         } &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;fragment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;           uniform vec4 color;&lt;/span&gt;
&lt;span class="s2"&gt;           void main() {&lt;/span&gt;
&lt;span class="s2"&gt;               gl_FragColor = color;&lt;/span&gt;
&lt;span class="s2"&gt;           } &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;quad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gloo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vertex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fragment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;gloo 界面的一个好处就是可以直接上传使用非常直观易于人类理解的记号来表达的数据给 GPU（图形处理单元）。position 参数直接关联到了顶点着色器（vertex shader）的位置属性，而 color 参数则直接关联了片段着色器（fragment shader）中的颜色分布。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;quad&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;position&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;quad&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c1"&gt;# 红色&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最后，在 on_draw() 方法中通过 gl.GL_TRIANGLE_STRIP 来渲染这个四边形。代码如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;quad&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GL_TRIANGLE_STRIP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;生成动画&lt;/h2&gt;
&lt;p&gt;动画（animation）其实只是每个时间步长中对显示内容逐渐调整而实现的。我们还利用上面的四边形这个例子，让这个四边形随着时间而扩大和缩小。第一步需要在 on_draw() 函数中提供 dt 这个参数来跟踪记录时间，这个 dt 参数给出的是自从上次调用之后经过的时间。接下来我们首先要对顶点着色器的代码进行修改，使四边形的坐标随着时间变量的正弦值而变化。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;vertex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;         uniform float time;&lt;/span&gt;
&lt;span class="s2"&gt;         attribute vec2 position;&lt;/span&gt;
&lt;span class="s2"&gt;         void main()&lt;/span&gt;
&lt;span class="s2"&gt;         {&lt;/span&gt;
&lt;span class="s2"&gt;             vec2 xy = vec2(sin(2.0*time));&lt;/span&gt;
&lt;span class="s2"&gt;             gl_Position = vec4(position*(0.25 + 0.75*xy*xy), 0.0, 1.0);&lt;/span&gt;
&lt;span class="s2"&gt;         } &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;quad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gloo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vertex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fragment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后还需要对时间变量进行初始化，在每次绘制调用的时候对该变量进行更新。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;quad&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;
    &lt;span class="n"&gt;quad&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GL_TRIANGLE_STRIP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;quad&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;span class="n"&gt;quad&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;quad&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;position&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;特别注意&lt;/h4&gt;
&lt;p&gt;如果你想要把动画录制下来，可以在运行程序的时候添加 --record filename 这样的后缀来实现。&lt;/p&gt;</content><category term="Work"></category><category term="Python"></category><category term="GlumPy"></category><category term="Data"></category><category term="Visualization"></category></entry><entry><title>五十年前的中国</title><link href="/wu-shi-nian-qian-de-zhong-guo.html" rel="alternate"></link><published>2017-10-01T00:00:00+08:00</published><updated>2017-10-01T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-10-01:/wu-shi-nian-qian-de-zhong-guo.html</id><content type="html">&lt;h4&gt;本文所粘贴照片全部来自网络，侵删。&lt;/h4&gt;
&lt;p&gt;Solange Brand （索朗日·布朗）是一名法国的女摄影师，生于 1946 年。在大概还未满 20 岁的时候，她来到了中国，作为法国驻中国大使馆的工作人员，使用在香港购买的宾得相机和 Agfacolor 反转片记录下了那个年代的彩色影像。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://item.jd.com/11619891.html"&gt;可以点击这里访问京东商城购买该摄影师的出版物&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;照片的力量是强大的，远比最生动的文字还要有力，能够直接将观众拉回到当年那种场景和氛围中。&lt;/p&gt;
&lt;p&gt;或许今天我们按下快门的时候，可以考虑不仅仅去拍一些角楼飞鸟或者薄衣女性等等，也可以考虑去拍一些类似的能够对时代有所记录的内容。哪怕只拍那么一点点，可能也有助于让后来人更贴近我们所处的现实。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/1.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/2.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/3.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/4.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/5.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/6.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/7.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/8.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/9.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/10.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/11.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/12.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/13.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/14.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/15.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/16.jpg"&gt;
&lt;img alt="" src="http://www.beaugeste-gallery.com/image/solange/17.jpg"&gt;&lt;/p&gt;</content><category term="Story"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category><category term="Story"></category></entry><entry><title>Installation of Mac OS X High Sierra(10.13) on a Hackintosh</title><link href="/installation-of-mac-os-x-high-sierra1013-on-a-hackintosh.html" rel="alternate"></link><published>2017-09-26T00:00:00+08:00</published><updated>2017-09-26T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-09-26:/installation-of-mac-os-x-high-sierra1013-on-a-hackintosh.html</id><summary type="html">&lt;p&gt;本文适用于已有 Mac OS Sierra（10.12）用户自行升级安装到最新版本的 Mac OS High Sierra（10.13）。NVIDIA 显卡用户需要注意，WebDriver 目前似乎还没有支持最新版操作系统，建议等  NVIDIA 释放了新驱动之后再更新到 10.13。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/HighSierra.png"&gt;&lt;/p&gt;
&lt;p&gt;总的来说，有两种思路。&lt;/p&gt;
&lt;h2&gt;直接升级安装&lt;/h2&gt;
&lt;p&gt;App Store 下载 macOS High Sierra 安装包直接在已有系统内升级安装。这样更省心一些，只要更新一下已有系统的 Clover、FakeSMC 到最新版本，并且在 EFI 分区中添加上 APFS 的驱动，然后登录 App Store，下载 macOS High Sierra 一步步安装就可以了 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;本文适用于已有 Mac OS Sierra（10.12）用户自行升级安装到最新版本的 Mac OS High Sierra（10.13）。NVIDIA 显卡用户需要注意，WebDriver 目前似乎还没有支持最新版操作系统，建议等  NVIDIA 释放了新驱动之后再更新到 10.13。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/HighSierra.png"&gt;&lt;/p&gt;
&lt;p&gt;总的来说，有两种思路。&lt;/p&gt;
&lt;h2&gt;直接升级安装&lt;/h2&gt;
&lt;p&gt;App Store 下载 macOS High Sierra 安装包直接在已有系统内升级安装。这样更省心一些，只要更新一下已有系统的 Clover、FakeSMC 到最新版本，并且在 EFI 分区中添加上 APFS 的驱动，然后登录 App Store，下载 macOS High Sierra 一步步安装就可以了。&lt;/p&gt;
&lt;p&gt;用到的工具如下所示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/1c2kzXfi"&gt;Clover r4220&lt;/a&gt;：下载之后双击安装到原来的 EFI 所在磁盘分区即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/1o7U6Cau"&gt;FakeSMC-v6.21&lt;/a&gt;：下载之后解压缩，将解压缩出来的文件替换原来 EFI 分区中的 FakeSMC.kext 文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/1nuEt9St"&gt;APFS.efi 驱动&lt;/a&gt;：下载之后放进  /EFI/CLOVER/drivers64UEFI/。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;制作 USB 安装盘&lt;/h2&gt;
&lt;p&gt;制作 USB 安装盘，然后从 USB 安装盘启动来全新安装。
这个方法也还是需要上面的几个文件，不同的是要安装到用来引导 USB 安装盘的 EFI 分区当中，基本操作大同小异，此处不再赘述了。&lt;/p&gt;
&lt;p&gt;制作安装盘这一步骤可以参考&lt;a href="https://www.tonymacx86.com/threads/how-to-create-a-macos-high-sierra-public-beta-installation-usb.225520/"&gt;tonymacx86 上的指南帖子&lt;/a&gt;。
当然也可以使用&lt;a href="https://pan.baidu.com/s/1clPZlW"&gt;DiskMaker X 7 for High Sierra&lt;/a&gt; 来制作 USB 安装盘。&lt;/p&gt;</content><category term="Hackintosh"></category><category term="Mac"></category><category term="Hackintosh"></category></entry><entry><title>破旧镜头拍破旧物</title><link href="/po-jiu-jing-tou-pai-po-jiu-wu.html" rel="alternate"></link><published>2017-09-10T23:20:00+08:00</published><updated>2017-09-10T23:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-09-10:/po-jiu-jing-tou-pai-po-jiu-wu.html</id><summary type="html">&lt;h6&gt;本文翻译自 Tom Leonard 的&lt;a href="https://outfor30.com/2015/09/10/shooting-junk-with-junk/"&gt;博客文章&lt;/a&gt;。&lt;/h6&gt;
&lt;p&gt;感谢本文英文版原作者 Tom Leonard 授权本人翻译转载其博客文章，他是一位工程师，也是一名业余摄影家，器材爱好者。&lt;/p&gt;
&lt;p&gt;本文原文发表于 2015 年 9 月 10 日。&lt;/p&gt;
&lt;h1&gt;SHOOTING JUNK, WITH JUNK&lt;/h1&gt;
&lt;p&gt;三个星期以前，我从 eBay 上面买来了一枚“垃圾成色”的 Minolta（美能达） MC Rokkor-PG 58mm f/1.2 镜头。此前我已经在美能达的发展历史中读到过很多对这枚镜头的介绍了，所以我一直都想收藏一枚。然而，功能完好，成色完美的镜头的价格大概在 450-700 美元之间。筛选的时候我选择了“配件”成色的，发现了一个。看了看介绍 …&lt;/p&gt;</summary><content type="html">&lt;h6&gt;本文翻译自 Tom Leonard 的&lt;a href="https://outfor30.com/2015/09/10/shooting-junk-with-junk/"&gt;博客文章&lt;/a&gt;。&lt;/h6&gt;
&lt;p&gt;感谢本文英文版原作者 Tom Leonard 授权本人翻译转载其博客文章，他是一位工程师，也是一名业余摄影家，器材爱好者。&lt;/p&gt;
&lt;p&gt;本文原文发表于 2015 年 9 月 10 日。&lt;/p&gt;
&lt;h1&gt;SHOOTING JUNK, WITH JUNK&lt;/h1&gt;
&lt;p&gt;三个星期以前，我从 eBay 上面买来了一枚“垃圾成色”的 Minolta（美能达） MC Rokkor-PG 58mm f/1.2 镜头。此前我已经在美能达的发展历史中读到过很多对这枚镜头的介绍了，所以我一直都想收藏一枚。然而，功能完好，成色完美的镜头的价格大概在 450-700 美元之间。筛选的时候我选择了“配件”成色的，发现了一个。看了看介绍，镜片长了很多霉菌，光圈阻滞不灵敏了，对焦环卡住了。我可能是比较呆，就赌了一把，花了 142 美元，买了这枚“伊拉克成色”的镜头，希望自己能修好它。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/img_1418-small.jpg"&gt;&lt;img alt="IMG_1418-small" src="https://outfor30.files.wordpress.com/2015/09/img_1418-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;过去三个星期我都在修这枚镜头。（译者注：其实这个时间成本来看，也不妨买个新的了，当然自己动手修理也有额外的乐趣和成就感，所以也看个人选择。）第一天开始修理的时候，我就把所有的光学元件都拆了下来，然后清洗到近乎完美，并且把光圈环修复到了近乎全新的状态。对焦环的修理是个坑。下面我就详细说一下这部分的维修过程。我保证不会跑题太久。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/img_1422-small.jpg"&gt;&lt;img alt="IMG_1422-small" src="https://outfor30.files.wordpress.com/2015/09/img_1422-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/img_1442-small.jpg"&gt;&lt;img alt="IMG_1442-small" src="https://outfor30.files.wordpress.com/2015/09/img_1442-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/img_1453-small.jpg"&gt;&lt;img alt="IMG_1453-small" src="https://outfor30.files.wordpress.com/2015/09/img_1453-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/img_1449-small.jpg"&gt;&lt;img alt="IMG_1449-small" src="https://outfor30.files.wordpress.com/2015/09/img_1449-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对焦部分有两个筒组成，一公一母，还不是简单的螺旋结构，而是各自有复杂的螺纹组合，一个安装到另一个的内部。可以想象成一个内螺纹的管，内外各有另外的管安装到这个管上。当你旋转镜头上面的对焦环的时候，这个结构会让内镜筒能在外镜筒中前后移动，比一般的螺旋结构更加快速，同样拧上半圈，这样设计的镜筒能运动更长距离。当初拍下这个镜头的时候，我还估计对焦环卡住可能只是干燥了缺乏润滑之类的问题。然而不是！并非如我所预料那样，而是这个镜头的机械结构有卡住的地方。分开拆下两个镜筒，我发现上面有轻微的刮痕，还有一些很奇怪的磨损痕迹。首先我找来一些牙膏来打磨/抛光。没有成功，然后我找来了一个软的黄铜线轮（soft brass wire wheel）来打磨，还是不成。接下来我又试了更加激进的方法，使用了湿磨，然后进行抛光。还是不行。然后我把每个镜筒放到钻头上来使用更强的打磨力度来增大螺纹深度。情况有所好转，但是还是不能达到正常使用的状态。这时候已经用了两个星期了，我都已经想要放弃了。然后我打电话给一些镜头维修的店铺，问问他们有什么思路，他们都说也就跟我的思路差不多，没别的办法。就这样有一天晚上，我正犯困要打盹的时候，想到了一个办法。这个思路就突然出现在眼前，可能我当时也没记得清整个过程。第二天，我去城里面买了一个很便宜的机械用途的游标卡尺。这个小东西就是关键所在。对焦螺旋的两个部分都是圆形的，精度大概在毫米级别，然后固定对焦组件的镜筒也是同样形状。而这枚镜头可能是遇到过被大象坐了之类的难忘经历，所以发生了变形。使用游标卡尺和铅笔，我测量了每个镜筒的最大宽度。然后使用一个夹钳来夹紧，再重新测量。我大概花了一整套才弄好，不过让我高兴的是，这个镜头现在已经完全组装完毕，对焦也顺畅润滑了。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/img_1451-small.jpg"&gt;&lt;img alt="The focusing helicoid all cleaned up and ready for install." src="https://outfor30.files.wordpress.com/2015/09/img_1451-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对焦螺旋全部清理完毕，可以安装回去了。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/img_1425-small.jpg"&gt;&lt;img alt="IMG_1425-small" src="https://outfor30.files.wordpress.com/2015/09/img_1425-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/img_1460-small.jpg"&gt;&lt;img alt="IMG_1460-small" src="https://outfor30.files.wordpress.com/2015/09/img_1460-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;化破烂为珍宝，我很兴奋，能用自己的心血和努力换来这枚镜头恢复使用。&lt;/p&gt;
&lt;p&gt;距离我家大概一个小时路程的一个地方，是一个停放报废车辆的垃圾场，里面有各种破旧的卡车和小汽车。我很早就想拍一下这里，不过一直没什么动力。于是那天早上，我想我可以用这枚破旧的老镜头来拍一下这些同样破旧的车辆。正好咱们来看一看对这枚镜头付出的这些努力是否值得。&lt;/p&gt;
&lt;p&gt;我到了垃圾场的时候，都关门了。我打电话给场主，问能不能让我进去到有围栏圈起来的区域内来拍一些照片，不过由于保险之类的原因他拒绝了我。我可不是那么容易放弃的人，就又问是否可以让我围绕着围栏的外围拍照。对方表示了允许。幸运的是，大多数这些破旧车辆都停在距离围栏不远的地方。然后我就在那拍了一个小时，得到了下面这些照片。&lt;/p&gt;
&lt;p&gt;下面所有的照片都是使用这枚镜头，开到最大的 f 1.2  光圈拍摄的。碉堡了，我还没有一枚能比得过这个镜头的 f 1.2 的镜头。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00800-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Minolta MC Rokkor-PG f/1.2" src="https://outfor30.files.wordpress.com/2015/09/dsc00800-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Minolta MC Rokkor-PG 58mm f/1.2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00844-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Minolta MC Rokkor-PG f/1.2" src="https://outfor30.files.wordpress.com/2015/09/dsc00844-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Minolta MC Rokkor-PG 58mm f/1.2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00804-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Minolta MC Rokkor-PG f/1.2" src="https://outfor30.files.wordpress.com/2015/09/dsc00804-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Minolta MC Rokkor-PG 58mm f/1.2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00820-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Minolta MC Rokkor-PG f/1.2" src="https://outfor30.files.wordpress.com/2015/09/dsc00820-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Minolta MC Rokkor-PG 58mm f/1.2&lt;/p&gt;
&lt;p&gt;这辆车的视觉体验，正如我修理这枚镜头完毕之后的感觉。&lt;/p&gt;
&lt;p&gt;&lt;img alt="🙂" src="https://outfor30.files.wordpress.com/2015/09/1f642.svg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00819-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Minolta MC Rokkor-PG f/1.2" src="https://outfor30.files.wordpress.com/2015/09/dsc00819-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Minolta MC Rokkor-PG 58mm f/1.2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00821-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Minolta MC Rokkor-PG f/1.2" src="https://outfor30.files.wordpress.com/2015/09/dsc00821-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Minolta MC Rokkor-PG 58mm f/1.2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00802-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Minolta MC Rokkor-PG f/1.2" src="https://outfor30.files.wordpress.com/2015/09/dsc00802-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Minolta MC Rokkor-PG 58mm f/1.2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00809-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Minolta MC Rokkor-PG f/1.2" src="https://outfor30.files.wordpress.com/2015/09/dsc00809-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Minolta MC Rokkor-PG 58mm f/1.2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00822-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Minolta MC Rokkor-PG f/1.2" src="https://outfor30.files.wordpress.com/2015/09/dsc00822-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Minolta MC Rokkor-PG 58mm f/1.2&lt;/p&gt;
&lt;p&gt;另外最近我还收来了一个非常古老的 徕卡 Hektor 135 f 4.5 镜头。这枚镜头又小又轻，而且价格便宜，只要 75 美元，我也把这枚镜头清理干净修理好，带在身边。下面的照片就是用这枚徕卡镜头拍摄的。&lt;/p&gt;
&lt;p&gt;可以看见这枚镜头出片的颜色很漂亮，而且一点色散也没有。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00852-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Leica Hektor 135mm f/4.5" src="https://outfor30.files.wordpress.com/2015/09/dsc00852-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Leica Hektor 135mm f/4.5&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00832-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Leica Hektor 135mm f/4.5" src="https://outfor30.files.wordpress.com/2015/09/dsc00832-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Leica Hektor 135mm f/4.5&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00837-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Leica Hektor 135mm f/4.5" src="https://outfor30.files.wordpress.com/2015/09/dsc00837-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Leica Hektor 135mm f/4.5&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00865-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Leica Hektor 135mm f/4.5" src="https://outfor30.files.wordpress.com/2015/09/dsc00865-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Leica Hektor 135mm f/4.5&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00805-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Leica Hektor 135mm f/4.5" src="https://outfor30.files.wordpress.com/2015/09/dsc00805-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Leica Hektor 135mm f/4.5&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00818-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Leica Hektor 135mm f/4.5" src="https://outfor30.files.wordpress.com/2015/09/dsc00818-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Leica Hektor 135mm f/4.5&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/09/dsc00840-edit-small.jpg"&gt;&lt;img alt="Sony A7RII w/Leica Hektor 135mm f/4.5" src="https://outfor30.files.wordpress.com/2015/09/dsc00840-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony A7RII w/Leica Hektor 135mm f/4.5&lt;/p&gt;
&lt;p&gt;不得不说，我对这两枚镜头的结果非常满意，不过我不可避免地更加偏爱这枚破旧的美能达镜头，因为维修的过程实在不易。本来的那枚古老的“配件”成色的镜头，再一次焕发生机。我很喜欢这枚镜头把拍摄对象从背景剥离的这种效果，非常柔和。我没有几枚能做到同样效果的镜头，并且效果也都不如这枚。现在我相信了之前看到的对这枚镜头的评测并非吹牛的溢美之词。这绝对是一枚值得收藏的镜头。再说这枚徕卡镜头，我对这枚镜头的锐度印象深刻，并且没有任何的高光能够在这枚镜头中产生色散（也就是紫边）。我对 RAW 图像放大到 400% 都不会看到任何紫边。体积小重量轻，以后我会优先把它放到旅行镜头清单中。&lt;/p&gt;
&lt;p&gt;希望大家喜欢这些图片，另外尤其是希望大家和我分享这次拯救了这枚美能达镜头的喜悦。&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>跨平台的开源视频和图像编辑软件</title><link href="/kua-ping-tai-de-kai-yuan-shi-pin-he-tu-xiang-bian-ji-ruan-jian.html" rel="alternate"></link><published>2017-09-05T08:20:00+08:00</published><updated>2017-09-05T08:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-09-05:/kua-ping-tai-de-kai-yuan-shi-pin-he-tu-xiang-bian-ji-ruan-jian.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="img/OSPhotoVideo/Adobe.png"&gt;
首先要表明一下立场，我并不是那种敌视商业软件的开源斗士。此外，作为一个外行菜鸟，我购买了图中这些来自 Adobe 的正版软件，这也许能算是一种佐证了。这笔开销虽然可能并不算很高，但对于一个月只有 1500 补助的穷学生来说，是需要相当大的勇气的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/OSPhotoVideo/Tools.png"&gt;
除此以外，我还会经常用到一些免费软件和开源软件。如下图所示这些，都是日常必不可少的工具。然而其中有的软件是有平台限制的，比如渣果公司提供的 iMovie、Garageband、照片，这几个就是 Mac OS 独有的，在 Windows 平台上或许对应的是 Movie Maker、Sibelius、Lightroom，或者也可以用 Corel Videostudio （ 会声会影）来对应 iMovie。HitFilm 是在 D4Darious 的安利下安装的，还没怎么尝试。DaVinci 是调色和简单编辑的一个备选方案，也没怎么用。实际上我现在更偏爱的还是其中几个跨平台的开源软件：Audacity、Blender …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="img/OSPhotoVideo/Adobe.png"&gt;
首先要表明一下立场，我并不是那种敌视商业软件的开源斗士。此外，作为一个外行菜鸟，我购买了图中这些来自 Adobe 的正版软件，这也许能算是一种佐证了。这笔开销虽然可能并不算很高，但对于一个月只有 1500 补助的穷学生来说，是需要相当大的勇气的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/OSPhotoVideo/Tools.png"&gt;
除此以外，我还会经常用到一些免费软件和开源软件。如下图所示这些，都是日常必不可少的工具。然而其中有的软件是有平台限制的，比如渣果公司提供的 iMovie、Garageband、照片，这几个就是 Mac OS 独有的，在 Windows 平台上或许对应的是 Movie Maker、Sibelius、Lightroom，或者也可以用 Corel Videostudio （ 会声会影）来对应 iMovie。HitFilm 是在 D4Darious 的安利下安装的，还没怎么尝试。DaVinci 是调色和简单编辑的一个备选方案，也没怎么用。实际上我现在更偏爱的还是其中几个跨平台的开源软件：Audacity、Blender、ShotCut。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/OSPhotoVideo/Audacity.png"&gt;
想当年买不起 Audition，在网上搜到了 Audacity，惊为天人。功能完善，足够我所需要的声音录制、多轨叠加同步、音调调整等日常需求，开源软件，免费试用，还提供了非常一致的跨平台体验，支持 Windows、Linux、Mac OS。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/OSPhotoVideo/Blender.png"&gt;
听说 Blender，是在奥运那一年看到一个开源电影作品 Big Buck Bunny，那时候就下载安装体验了一把，不过一去十来年了，也还是入门状态。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/OSPhotoVideo/ShotCut.png"&gt;
说来惭愧，我这人见识短浅，昨天才在搜索 QT 相关的内容的时候，才了解到 ShotCut 这个开源项目，一个跨平台的视频编辑工具，简单体验了一下，相当惊艳。&lt;/p&gt;
&lt;p&gt;上面这三个开源软件，都是跨平台的，支持主流三大系统。另外这三者都提供了相当完善的国际化语言支持，有非常完整的中文界面。&lt;/p&gt;
&lt;p&gt;除此以外，我偶尔还会使用 gimp、inkscape 之类的开源软件，不过主要是在 Linux 系统的机器上，在 Mac OS 和 Windows 系统上，还是 Photoshop 和 Illustrator 更方便一些。&lt;/p&gt;</content><category term="Software"></category><category term="Camera"></category><category term="Video"></category><category term="Photo"></category><category term="Software"></category></entry><entry><title>毫无妥协的变焦镜头——美能达 35-70F1:3.5</title><link href="/hao-wu-tuo-xie-de-bian-jiao-jing-tou-mei-neng-da-35-70f135.html" rel="alternate"></link><published>2017-08-23T23:20:00+08:00</published><updated>2017-08-23T23:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-08-23:/hao-wu-tuo-xie-de-bian-jiao-jing-tou-mei-neng-da-35-70f135.html</id><summary type="html">&lt;h6&gt;本文翻译自 Tom Leonard 的&lt;a href="https://outfor30.com/2015/04/22/no-compromise-zoom-lens/"&gt;博客文章&lt;/a&gt;。&lt;/h6&gt;
&lt;p&gt;感谢本文英文版原作者 Tom Leonard 授权本人翻译转载其博客文章，他是一位工程师，也是一名业余摄影家，器材爱好者。&lt;/p&gt;
&lt;p&gt;April 22, 2015&lt;/p&gt;
&lt;h1&gt;NO COMPROMISE ZOOM LENS&lt;/h1&gt;
&lt;p&gt;绝大多数有经验的摄影师都会有这样一种观点：变焦镜头是为了方便而对成像质量做出了妥协。要制造一枚能够替代一堆定焦镜头的变焦镜头，光学设计会变得非常复杂，而且体积会很庞大。生产制作的过程中要有很多因素互相平衡，比如最终的提及尺寸、焦段、成像质量等等。想要一枚变焦镜头拥有定焦镜头一般的成像质量，这种想法挺呆萌的，然而是这样么？&lt;/p&gt;
&lt;p&gt;几周之前，我在研究美能达的镜头制造历史，希望能够发现点有意思的镜头，来充实一下我的镜头收藏库。我发现有一些论坛都在谈论美能达的 MD35-70 F3.5 这枚镜头。首次发售于 1972 年，并且在整个 1980 年代都有延续，产生了多个衍生型号。最后一个版本还增加了微距功能；1： 4 …&lt;/p&gt;</summary><content type="html">&lt;h6&gt;本文翻译自 Tom Leonard 的&lt;a href="https://outfor30.com/2015/04/22/no-compromise-zoom-lens/"&gt;博客文章&lt;/a&gt;。&lt;/h6&gt;
&lt;p&gt;感谢本文英文版原作者 Tom Leonard 授权本人翻译转载其博客文章，他是一位工程师，也是一名业余摄影家，器材爱好者。&lt;/p&gt;
&lt;p&gt;April 22, 2015&lt;/p&gt;
&lt;h1&gt;NO COMPROMISE ZOOM LENS&lt;/h1&gt;
&lt;p&gt;绝大多数有经验的摄影师都会有这样一种观点：变焦镜头是为了方便而对成像质量做出了妥协。要制造一枚能够替代一堆定焦镜头的变焦镜头，光学设计会变得非常复杂，而且体积会很庞大。生产制作的过程中要有很多因素互相平衡，比如最终的提及尺寸、焦段、成像质量等等。想要一枚变焦镜头拥有定焦镜头一般的成像质量，这种想法挺呆萌的，然而是这样么？&lt;/p&gt;
&lt;p&gt;几周之前，我在研究美能达的镜头制造历史，希望能够发现点有意思的镜头，来充实一下我的镜头收藏库。我发现有一些论坛都在谈论美能达的 MD35-70 F3.5 这枚镜头。首次发售于 1972 年，并且在整个 1980 年代都有延续，产生了多个衍生型号。最后一个版本还增加了微距功能；1： 4 的放大倍率。虽然不像专门的微距镜头那么强悍，不过也挺有用的。据说美能达的这枚镜头的光学设计非常优秀，到了黑魔法的地步，所以徕卡直接拿来用到了自己品牌的同焦段 Vario Elmar R 35-70mm 镜头上面。&lt;/p&gt;
&lt;p&gt;eBay 上面有几个不同版本的此镜头。我买来了一个成色最好的，有原版的遮光罩和前后盖。花了 149.99 美元。（译者注：同款镜头带微距版本在淘宝闲鱼上面大概是 500-600，不带微距的 400-500 左右。不过淘宝上的奸商往往把遮光罩版本额外提价，实际上大家只要自己买来 55mm 遮光罩就可以，不要被奸商坑。）&lt;/p&gt;
&lt;p&gt;下面就是用我买来的这枚镜头的照片。看上去很新，功能也都完好。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00646-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00646-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;这镜头非常小巧，让人印象深刻。现在可看不到像这样的镜头了。我同事也拥有蔡司为索尼制造的 E 卡口镜头，那些镜头给我的感觉很廉价。另外，蔡司的 24-70mm 更大也更笨重，而且锐度还不太好。&lt;/p&gt;
&lt;p&gt;然后我就开始体验使用这枚镜头了，跟大家分享一下试验的结果。首先我要说，“难以置信！”即便光圈全开，所有焦段的成像质量都不错，并且相当锐利。我不是那种使用测试表格来寻找瑕疵的用户。我关注的是整体的成像质量。包括成像的宽容度、色彩、对比度、成像特征，以及焦外区域的成像是否干扰注意力等等。如果我对上吗这些都感到满意，就并不一定在意那种用实验室风格找出来的各种参数指标上的缺陷，因为那不是我优先在意的内容。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00085-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00085-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00154-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00154-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00757-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00757-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00067-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00067-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00731-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00731-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00742-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00742-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00745-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00745-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00749-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00749-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00754-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00754-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outfor30.files.wordpress.com/2015/04/dsc00730-edit-small.jpg"&gt;&lt;img alt="上图使用 Minolta MD 35-70mm f/3.5 拍摄" src="https://outfor30.files.wordpress.com/2015/04/dsc00730-edit-small.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图使用 Minolta MD 35-70mm f/3.5 拍摄&lt;/p&gt;
&lt;p&gt;我相信我已经找到了最适合我随身携带的镜头了。看来除非在需要更浅的景深、更大的进光量，或者超过这枚镜头焦段的焦距的时候，我才会考虑换用其他定焦镜头。我非常推荐使用索尼全画幅无反机身的朋友试试这枚镜头。我买了一个 &lt;a href="http://www.amazon.com/Neewer%C2%AE-Adapter-Minolta-E-Mount-NEX-VG10/dp/B00870NQRO/ref=sr_1_1?ie=UTF8&amp;amp;qid=1429724791&amp;amp;sr=8-1&amp;amp;keywords=neewer+md+mc+lens+adapter"&gt;很便宜的转接环&lt;/a&gt; 来安装在索尼机身上，在亚马逊买的，花了大概 12 美元。（译者注：淘宝上大概也就是 30-50元就能买到 MD-NEX 转接环，另外使用 MD-LM 转接环搭配天工的 LM-E 卡口自动对焦环，可以把这种手动镜头当作自动镜头来使用，体验更加完美。）&lt;/p&gt;
&lt;p&gt;以后我将会提供最近购买的新老镜头的各种样片。&lt;/p&gt;</content><category term="Camera"></category></entry><entry><title>清理镜头霉菌</title><link href="/qing-li-jing-tou-mei-jun.html" rel="alternate"></link><published>2017-08-22T23:20:00+08:00</published><updated>2017-08-22T23:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-08-22:/qing-li-jing-tou-mei-jun.html</id><summary type="html">&lt;h6&gt;本文翻译自 Tom Leonard 的&lt;a href="https://outfor30.com/2016/09/24/a-fungus-among-us/"&gt;博客文章&lt;/a&gt;。&lt;/h6&gt;
&lt;p&gt;感谢本文英文版原作者 Tom Leonard 授权本人翻译转载其博客文章，他是一位工程师，也是一名业余摄影家，器材爱好者。&lt;/p&gt;
&lt;p&gt;September 24, 2016&lt;/p&gt;
&lt;h1&gt;A FUNGUS AMONG US&lt;/h1&gt;
&lt;p&gt;没有什么事情比发现镜头内部镜组长了霉菌更让人郁闷了。在一些老旧的镜头中经常能发现霉菌。这东西对品质、质量、二手价格，都有损坏。如果你的镜头长时间处于潮湿环境，这种可恶的霉菌就可能会出现了。&lt;/p&gt;
&lt;p&gt;我和很多人聊过，他们各自都曾经尝试过清理镜头中的霉菌，使用了各种各样的清洁剂和擦拭布。我就直截了当告诉你吧：用标准的镜头清洁液是不能除掉这些霉菌的。丙醇、打火机液体、乙醇（伏特加酒）也都不行。上面这些液体的各种组合也都只会带来划痕，损坏你的镜片镀膜，给你带来无穷的挫败感。&lt;/p&gt;
&lt;p&gt;今天，就让我来跟你分享一下简单而又非破坏性的除掉镜头霉菌的方法吧。如果你有兴趣做一点探索一点努力，你就可以把霉菌这种可恶的镜头毁灭者消灭掉，甚至也可能让一枚经典老镜头起死回生。&lt;/p&gt;
&lt;p&gt;下面是要用到的工具和材料的列表：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;镜头扳手 井字螺丝刀&lt;/strong&gt; – 我购买的是 &lt;strong&gt;&lt;a href="https://www.amazon.com/Neewer-Professional-pointed-Spanner-Repairing/dp/B00J5F6O92/ref=sr_1_2?ie=UTF8&amp;amp;qid=1474715152&amp;amp;sr=8-2&amp;amp;keywords=lens+spanner"&gt;这个 …&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h6&gt;本文翻译自 Tom Leonard 的&lt;a href="https://outfor30.com/2016/09/24/a-fungus-among-us/"&gt;博客文章&lt;/a&gt;。&lt;/h6&gt;
&lt;p&gt;感谢本文英文版原作者 Tom Leonard 授权本人翻译转载其博客文章，他是一位工程师，也是一名业余摄影家，器材爱好者。&lt;/p&gt;
&lt;p&gt;September 24, 2016&lt;/p&gt;
&lt;h1&gt;A FUNGUS AMONG US&lt;/h1&gt;
&lt;p&gt;没有什么事情比发现镜头内部镜组长了霉菌更让人郁闷了。在一些老旧的镜头中经常能发现霉菌。这东西对品质、质量、二手价格，都有损坏。如果你的镜头长时间处于潮湿环境，这种可恶的霉菌就可能会出现了。&lt;/p&gt;
&lt;p&gt;我和很多人聊过，他们各自都曾经尝试过清理镜头中的霉菌，使用了各种各样的清洁剂和擦拭布。我就直截了当告诉你吧：用标准的镜头清洁液是不能除掉这些霉菌的。丙醇、打火机液体、乙醇（伏特加酒）也都不行。上面这些液体的各种组合也都只会带来划痕，损坏你的镜片镀膜，给你带来无穷的挫败感。&lt;/p&gt;
&lt;p&gt;今天，就让我来跟你分享一下简单而又非破坏性的除掉镜头霉菌的方法吧。如果你有兴趣做一点探索一点努力，你就可以把霉菌这种可恶的镜头毁灭者消灭掉，甚至也可能让一枚经典老镜头起死回生。&lt;/p&gt;
&lt;p&gt;下面是要用到的工具和材料的列表：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;镜头扳手 井字螺丝刀&lt;/strong&gt; – 我购买的是 &lt;strong&gt;&lt;a href="https://www.amazon.com/Neewer-Professional-pointed-Spanner-Repairing/dp/B00J5F6O92/ref=sr_1_2?ie=UTF8&amp;amp;qid=1474715152&amp;amp;sr=8-2&amp;amp;keywords=lens+spanner"&gt;这个&lt;/a&gt;&lt;/strong&gt; ，价格为 16.50 美元。.  这个工具是必备的，无可替代，其他东西都会容易对镜头造成伤害。（译者注，大家也可以在中亚搜索 镜头扳手 或者淘宝搜搜 井字螺丝刀，大概三五十块人民币而已，贵一点的也不过六七十元人民币。）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;日本工业标准（JIS ）螺丝刀套件&lt;/strong&gt; – 对于日本制造的镜头，你就可能需要一套日本工业标准的螺丝刀套件（Japanese Industrial Standard (JIS) screwdrivers）。它们看着和飞利浦的平头/十字螺丝刀很像，但还有一点点差别。它们尖端的间距和深度是日标螺丝头独有的，使用其他工具拆卸这些螺丝可能会导致损坏滑丝。我买的是 &lt;strong&gt;&lt;a href="https://www.amazon.com/Moody-Tools-Chromium-Vanadium-Screwdriver/dp/B004PGO1T6/ref=sr_1_1?ie=UTF8&amp;amp;qid=1474715557&amp;amp;sr=8-1&amp;amp;keywords=moody+58-0219"&gt;美国产的一套&lt;/a&gt;&lt;/strong&gt; ，价格为15.00 美元。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;桌面台灯&lt;/strong&gt; – 我是用了两个不同的弯臂台灯，一个是提供了强光定向照明的 led 等，另一个是具有白色扩散罩的多枚 led 灯珠组成的无影台灯。宜家就可以买到这类台灯。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;零件盘&lt;/strong&gt; – 我从当地的小卖店买了一个 2美元的塑料板来放零件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;浸泡碟&lt;/strong&gt; – 我大概是花了 3 美元，买了一个白色的陶瓷材质的碗，本来是用于盛放奶油蛋糕甜品的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;镊子&lt;/strong&gt; – 一般的都可以的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;丁腈手套&lt;/strong&gt; – 这种手套能保护你的手指避免接触杀菌溶液，在你接触镜片的时候也有助于避免弄脏镜片玻璃。&lt;/li&gt;
&lt;li&gt;护目镜 – 你可得好好保护好自己的眼睛。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过氧化氢（双氧水）&lt;/strong&gt; – 就是在药店里面能买到的那种。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;家用氨水&lt;/strong&gt; – 在家庭用品商店我花了几块钱买到了一加仑的这种东西。尽量找那种没添加额外味道制剂的氨水。虽然有无添加剂的两种我都尝试过，而且也没发现用起来有什么不同，不过我还是不喜欢让娇贵的镜片上面有额外的什么化学品残留。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;棉球棉签&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;超细纤维镜头布&lt;/strong&gt; – 这个需要极其干净的才行。不要用你口袋或者相机包里面随身带的那种。任何灰尘和皮肤上的优质都会着落在你镜头的内部镜组中，让你非常郁闷，并且不能完美完成任务。我会把这种用途的镜头布报复你在密闭的塑料袋里面，并且经常更换。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;镜头气吹&lt;/strong&gt; – 我花了 10 美元买了一个 Giotto Rocket 气吹，购买链接在 &lt;strong&gt;&lt;a href="https://www.amazon.com/Giottos-AA1900-Rocket-Blaster-Large/dp/B00017LSPI"&gt;这里&lt;/a&gt;&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一杯含有咖啡因的咖啡之类的饮料&lt;/strong&gt; – 选一种你喜欢的口味。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;音乐&lt;/strong&gt; – 我推荐 Charlie Haden 的 &lt;em&gt;Tokyo Adagio&lt;/em&gt; 这张专辑，或者 Alan Broadbent 的专辑 &lt;em&gt;Blue in Green&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;以下所有照片均使用 iPhone 拍摄&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;东西齐备了，就开始动手吧！为了本文演示，我从当地的相机店买来了一枚旧的 Konica Hexanon AR 40mm f/1.8 镜头。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3065-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3065-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;第一眼一看，可能你回想：“还行吧，不算太严重。”&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3066-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3066-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;朝镜头上面打光，你就能发现在尾部镜头组中有非常恶劣的镜头霉菌。这个地方的霉菌最可恶，因为绝对会影响成像质量。这里的霉菌还不是在后镜片的外侧，而是在内侧的镜片之间生长的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3064-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3064-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;先把它拆开！很可能你的镜头和我的这个不一样，但是拆卸的过程都是差不多的，尤其你的镜头是老镜头，手动对焦的，并且是日本产的话。我强烈推荐你用一个相机（iPhone 之类的就可以）来找下来每一步骤作为存档，这样回头你往回安装的时候就可以参考了。&lt;/p&gt;
&lt;p&gt;使用 JIS 螺丝刀，把镜头上安装卡口的四个螺丝拆下来。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3068-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3068-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;拆下了镜头卡口之后，光圈环就也可以从镜体上拆下来了。为了能清理后镜组，我其实并不需要拆下光圈环，不过我想估计也可能要清理上面的部分，反正我都把全套工具拿出来了。&lt;/p&gt;
&lt;p&gt;这里强烈警告：在光圈环和镜体之间有一个小钢珠，通过一个螺旋弹簧或者舌片状弹簧安装，随时可能把这个小钢珠弹非。你可以通过寻找光圈环的切口来判断这个小球的位置。当你转动光圈环的时候，那种不同档位之间的咔嚓咔嚓的声音就来自于这个小球与这些凹口之间的切换。我建议你把手放到光圈环的那一侧，同时把镜体提起来。我这个镜头里面有很多润滑油和灰尘污垢把这个小球安全固定到洞里面了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3069-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3069-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;光圈环拆下来之后，就可以清理镜片的背面了。我建议你在进行的过程中在这里就做一些初步的清洁。这样有助于你在进行其他工作的时候保持这些部分干净整洁不那么乱。&lt;/p&gt;
&lt;p&gt;镜头扳手是一个很简单的工具。有两个钢制扩张杆，上面安装两个扳手，可以调整间距，以便符合你的镜头环的口径。拇指螺丝可以让你将扳手锁定在要用的宽度上。这种特殊的镜头扳手有平口和针口等不同尖端。这个镜头有一对简单的切口，安装在压片环上。平口的镜头扳手就是用来移除这种接环的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3070-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3070-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;现在压片环也拆下去了，后部镜组就可以从镜头上拆下来了。有几种方式可以拆下这些镜片：首先将镜头倒置在手上来看看镜片能否自己掉下来。大多数情况镜片会自己掉下来。如果没掉下来，你可以试试重新安装压片环，然后用不尖锐的非金属物体来撬动一下，让它动一动。我遇到过的最差的情况，就是我必须把镜头反过来，移除掉全部的前镜组，然后完全打开光圈叶片，接下来使用软硅胶喷射器来把后镜组推出。我只遇到过一次这么麻烦的情况，所以别害怕。只希望通过这些忠告来让你少走弯路做好准备。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3072-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3072-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;本文这个镜头，后镜组就直接掉出来落到我的手上了。是一片非常薄的玻璃镜片，一定要非常小心轻拿轻放，避免弄碎他。我使用软质地的不或者镜片擦拭布，按照顺序摆放所有接环和镜片玻璃。一定要注意镜片的凹凸形状，这样在往回安装的时候你才不会弄混镜片朝向。&lt;/p&gt;
&lt;p&gt;在我看来用手机拍照记录是很好的办法。好了，仔细看看照片。你可以发现后镜组中残存的那片镜片是所有霉菌聚集的地方。第一片镜片上面也有一点点，但不像第二片那样明显。咱们把它们拿出来吧。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3073-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3073-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;这枚镜头的镜片组的构造中，在最后一片镜片和往内侧的另外一片镜片中间有一个隔环。要移除这个环，只需要把镜头用手提起来就可以。你可能需要护着镜头的前部，这样来保证所有镜组都在其安装的位置。一定要小心，因为有时候内部镜组会随着这个环一起掉下来。本次使用的这个镜头没有一同掉下。如果你感觉到有不止一个物体掉到手里，别动！把其余的镜片放回去，然后小心地看看你手里的是什么，记下顺序和朝向。接下来把每一个部件放到擦拭布上面，确保不要让任何金属或者其他玻璃触碰到这些镜片的表面。内部镜组可能有一些非常柔软的镀膜，很容易划伤。轻微的划伤虽然不是世界末日，不过你还是能免则免的好。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3074-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3074-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;好了，现在我们拆下来了内侧镜片了，上面长满了霉菌。几乎已经覆盖了整个镜片玻璃的凹面。看到镜片周围边缘上那些黑色的东西了么？有时候当你把镜片浸泡到溶液的时候，这些东西会剥落或者脱落。这种黑色的东西是用来降低内部反射的，如果这东西开始剥落或者在你重新安装的时候开始掉下来了，我建议尽可能把他们都除掉然后重新涂。我用黑色记号笔就成功涂抹恢复过。镜片玻璃的边缘都是未抛光的，这样黑色墨水能够附着在上面。我通常都会涂黑两三次来保证效果。你可以通过镜片中央使用强光定向照明来查看这些镜片的边缘。黑色记号笔的优点在于不影响玻璃镜片的直径，这样你在重新安装回去的时候也不会有困难。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3076-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3076-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3077-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3077-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;接下来就是重头戏了：去除霉菌！&lt;/p&gt;
&lt;p&gt;我曾经使用一些注射器来进行溶液测量，不过完全没有这个必要。咱们的清理霉菌溶液由 1：1 的等比例过氧化氢（双氧水）和氨水组成。过去我就用氨水的盖子来测量每种化学品，获得相同剂量。如果可以的话，建议尽量戴上手套和眼睛，并且在通风良好的地方操作。氨水有非常强烈的挥发性。两种药剂每种来一盖子，这肯定没什么难的。对于小型用途，我只需要每种药剂 5毫升，配出来总共 10毫升的溶液。在溶液盘内的底部放一些镜头擦拭布之类的东西，避免镜片被意外划伤。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3080-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3080-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;将你的镜片轻轻放入溶液内。浸泡至少两分钟。你可能会看到一些气泡冒出，这是因为溶液正在消灭真菌。浸泡几分钟之后，使用棉球轻轻擦拭掉残余的霉菌。一定不能太用力，我们是用化学手段移除霉菌，而不是机械手段。如果还有霉菌残留在镜片上，只要多泡在溶液里面一阵就可以了。我最长曾经泡过 20 分钟才移除掉一个镜头的霉菌（没记错的话，大概是一枚徕卡 Summaron 35mm 镜头）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3081-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3081-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;所有的霉菌消除掉之后，把镜片放进一个水槽里面，可以用水轻轻冲洗。不要在镜片上面擦拭，只要让水在两面都直接流过就可以。溶液洗干净之后，用气吹把水滴吹干净。水干了之后，使用超级新且极其干净的超细纤维布轻轻擦拭镜头。接下来，照明检查一下镜片。从两侧用不同的光线来检查，确保所有霉菌都除掉了，并且保证玻璃上面没有灰尘或者污渍。如果看着没什么问题，把镜片放到干净的柔软超细纤维布上面，然后盖好，避免空气中的灰尘落在上面。接下来清洁其他的镜片。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3082-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3082-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;反正我工具都拿出来了，我就把所有镜组的镜片都清洗了一遍。我准备了一大碗溶液，这样也可以清洗一下光圈环了。&lt;/p&gt;
&lt;p&gt;使用镜头扳手，移除勤勉的压片环，这样就漏出了前镜组的固定环。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3083-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3083-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;接下来把它拆下去。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3084-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3084-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;然后跟刚才对后镜组进行清洗的过程类似，把所有镜片都从前镜组中拆下来。这写镜片没有霉菌，不过有一些灰尘和污垢。把每个镜片都拆下来放到溶液中浸泡，然后清洗、吹干、用超细纤维布擦拭。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3086-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3086-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;都清洗完了，到了装回去的步骤了。前镜组清洁完毕也都吹干了，然后检查了一下光圈环。情况都很棒。然后我把前镜组、固定环、压片环都安装回去。现在这个镜头看上去干净又漂亮！&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3093-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3093-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;然后安装后镜组。透亮又干净，恢复了本来面目。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3090-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3090-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;在牙刷上抹一点洗洁灵，就可以清洗干净脏兮兮的光圈环上的油污。在凹口上稍微加一点润滑油（日本产的 #30 号润滑油），这样能保证光圈的顺滑。合成润滑油也可以使用，不过要确保使用的是高温润滑脂，否则在夏天会有液态润滑脂流进镜头的其他部分。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3094-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3094-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;我把后镜组放进 91% 的异丙醇里面来进行清洗。每个镜头的光圈环安装接口都各有不同。柯尼卡的镜头是将整个光圈组件扣在镜头卡口的内侧。也有的镜头不是这样，而是有单独的零件组成一个单独部分，必须移除才能拆卸卡口。不过无论哪种方式，拆卸都并不困难，都是有一个螺旋弹簧固定着的金属环。如果你有一个镜头要清洗卡口，只要慢慢来别着急，每一步骤拍好照片做记录。这东西又不是火箭工程航天科学那么复杂。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3095-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3095-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;最后，安装回去之后，这个镜头看上去又像是新的一样了。整个清洗的过程是两个小时零一分钟。这还包括拍照来发这篇记录所用的额外时间。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3098-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3098-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;这个任务很简单，甚至一个小朋友也能完成。或者至少小朋友可能会觉得自己能做到吧。我儿子就喜欢看着我摆弄镜头。只要我折腾这些精细的事情的时候，他都喜欢在一边观察学习。我很期待他长大能成为一个修理者，有这方面乐趣也是好的。我太太用 iPhone 拍下啦我俩在一起的这个镜头。非常感谢我的太太，我很喜欢这张照片！&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3101-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3101-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;最后来一张照片，这次清洗的这枚柯尼卡 Hexanon AR 40mm f/1.8  镜头通过转接环安装到了索尼 A7R2 机身上。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_3100-edit-small" src="https://outfor30.files.wordpress.com/2016/09/img_3100-edit-small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;希望这篇文章能对你有所鼓励和帮助。如果你有关于这方面的任何问题，请随时留言，我会尽我所能给予解答。&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>美能达 MD 35-70 F3.5 变焦镜头</title><link href="/mei-neng-da-md-35-70-f35-bian-jiao-jing-tou.html" rel="alternate"></link><published>2017-08-15T23:20:00+08:00</published><updated>2017-08-15T23:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-08-15:/mei-neng-da-md-35-70-f35-bian-jiao-jing-tou.html</id><summary type="html">&lt;p&gt;前几天我翻译了一篇 &lt;a href="https://zhuanlan.zhihu.com/p/28563055"&gt;Tom Leonard 的文章&lt;/a&gt;，介绍了一款美能达 MD 40-80mm f2.8 齿轮箱版本镜头，由于设计独特，以及存量有限，这款镜头的售价普遍在三四千元以上，有的朋友留言表示太贵了，那么这次咱们就来看看一个素质据说类似的镜头，同样是 Tom Leonard 在文中提到的，美能达 MD 35-70mm f/3.5 Macro （微距版本，整个同焦段系列的第三版），用 Tom Leonard 的话说，这是一枚他最喜欢的“无与伦比”的镜头，而且据他所说，这枚镜头完全能匹敌  MD 40-80mm f2.8 齿轮箱版本镜头：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &amp;quot;... Comparing this to my favorite zoom lens, the …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;前几天我翻译了一篇 &lt;a href="https://zhuanlan.zhihu.com/p/28563055"&gt;Tom Leonard 的文章&lt;/a&gt;，介绍了一款美能达 MD 40-80mm f2.8 齿轮箱版本镜头，由于设计独特，以及存量有限，这款镜头的售价普遍在三四千元以上，有的朋友留言表示太贵了，那么这次咱们就来看看一个素质据说类似的镜头，同样是 Tom Leonard 在文中提到的，美能达 MD 35-70mm f/3.5 Macro （微距版本，整个同焦段系列的第三版），用 Tom Leonard 的话说，这是一枚他最喜欢的“无与伦比”的镜头，而且据他所说，这枚镜头完全能匹敌  MD 40-80mm f2.8 齿轮箱版本镜头：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &amp;quot;... Comparing this to my favorite zoom lens, the incredible Minolta MD 35-70mm f/3.5, I would say it at least equals it. &amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h6&gt;下文翻译自 Phillip Reeve 的&lt;a href="https://phillipreeve.net/blog/minolta-md-zoom-35-70mm-3-5-review/"&gt;博客文章&lt;/a&gt;。部分报价信息等有更新，都改为中国大陆电商平台当前的合理报价。&lt;/h6&gt;
&lt;p&gt;感谢 Phillip Reeve 授权翻译转载本文！&lt;/p&gt;
&lt;p&gt;本文英文版原作者 Phillip Reeve 热衷于户外拍摄，酷爱手动镜头，他的博客中有他自己整理的 &lt;a href="http://phillipreeve.net/blog/manual-minolta-lens-ratings/"&gt;美能达镜头集合&lt;/a&gt;。&lt;/p&gt;
&lt;h1&gt;美能达 MD 35-70MM 1: 3.5 恒定光圈手动变焦镜头&lt;/h1&gt;
&lt;h1&gt;&lt;a href="https://phillipreeve.net/blog/wp-content/uploads/2015/06/MD3570.jpg"&gt;&lt;img alt="MD3570" src="https://phillipreeve.net/blog/wp-content/uploads/2015/06/MD3570.jpg"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;这款 MD 35-70mm 1:3.5 镜头非常具有性价比，重量也很轻，虽然变焦范围有限，但是也还算够用，而且提供的画质非常棒。&lt;/p&gt;
&lt;h1&gt;参数信息&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;数据&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;直径&lt;/td&gt;
&lt;td&gt;69 mm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;长度&lt;/td&gt;
&lt;td&gt;68.5 mm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;滤镜尺寸&lt;/td&gt;
&lt;td&gt;55mm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;重量&lt;/td&gt;
&lt;td&gt;365g&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;最大放大倍率&lt;/td&gt;
&lt;td&gt;0.1-0.25 (微距模式)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;最近对焦距离&lt;/td&gt;
&lt;td&gt;80cm-33cm (微距模式)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光圈叶数&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;镜片结构&lt;/td&gt;
&lt;td&gt;8/7（8片7组）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;价格&lt;/strong&gt; (2017年08月18日11:04:19): 正常价格大概也就是300-500，带微距版本的可能要400-600，这都是完美成色的，成色差一些的要更低很多。&lt;/p&gt;
&lt;h1&gt;样片&lt;/h1&gt;
&lt;p&gt;&lt;img alt="winterfarben3" src="https://c2.staticflickr.com/8/7300/11390475714_9d587c3792_c.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Sony a7 | 70mm |f/5.6&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/birnenbaumgarten/15050744232" title="magical forest by Phillip Reeve, on Flickr"&gt;&lt;img alt="magical forest" src="https://c2.staticflickr.com/6/5570/15050744232_3f40fd9a55_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony a7 | 35mm |f/11&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/birnenbaumgarten/13121896283" title="the pond by Phillip Reeve, on Flickr"&gt;&lt;img alt="the pond" src="https://c2.staticflickr.com/4/3790/13121896283_f67aa449f0_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sony a7 | 50mm |f/8&lt;/p&gt;
&lt;p&gt;在 flickr 的 &lt;a href="https://www.flickr.com/photos/birnenbaumgarten/sets/72157633993569718"&gt; Minolta MD 3.5/35-70&lt;/a&gt; 上面可以看到更多样片。&lt;/p&gt;
&lt;h1&gt;版本&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://phillipreeve.net/blog/wp-content/uploads/2015/06/Minolta_3570mm-5.jpg"&gt;&lt;img alt="一定要注意1:4 的微距只在第三版本里面才有。" src="https://phillipreeve.net/blog/wp-content/uploads/2015/06/Minolta_3570mm-5-257x300.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一定要注意1:4 的微距只在第三版本里面才有。&lt;/p&gt;
&lt;p&gt;美能达一共生产了三个版本的 35-70 f3.5  恒定光圈变焦手动镜头：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最早的版本，&lt;strong&gt; Minolta MD Zoom Rokkor 35-70mm 1:3.5 &lt;/strong&gt;，发售于 1978 年。 据传言徕卡当时采用了同样的光学元件在自家的 Vario-Elmar-R 35-70mm f3.5 镜头上，最近对焦距离是 1m。（&lt;strong&gt;译者注：这个版本大概也是淘宝网上所说的黄标版本。&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;第二个版本，&lt;strong&gt; Minolta MD Zoom 35-70mm 1:3.5  &lt;/strong&gt;，这个版本去掉了 Rokkor 字样，然后对焦结构外观也有改变。&lt;/li&gt;
&lt;li&gt;第三版， &lt;strong&gt;Minolta MD Zoom 35-70mm 1:3.5&lt;/strong&gt; ，发售与 1983 年，只有这一版本才具有微距模式，最近对焦距离 80cm，能提供 1：4 的微距模式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我从来没有用过前两个版本，不过根据来自&lt;a href="http://artaphot.ch/"&gt;artaphot.ch &lt;/a&gt; 网站的 Stephan 所说，第一个版本要显著逊色于后面的第二个版本，&lt;a href="http://artaphot.ch/minolta-sr/objektiv-vergleiche/323-nex-5n-und-minolta-md-zooms-bei-50mm-teil-iii"&gt;德语网站原文&lt;/a&gt; ，我个人推测可能第二个版本和第三个版本的光学结构是一样的，区别只是是否有微距。（&lt;strong&gt;译者注：然而国内电商平台上面，二手镜头贩卖价格最高的似乎反而是第一版，被商家标为“黄标”，并且宣传说有所谓的“徕卡血统”，甚至能炒到 780 元的高价，远高于后续两个版本同样成色 500-600 的价格。&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;由于第二个版本和第三个版本只有很小的价格差距，所以我推荐选购第三个版本，毕竟有微距模式，更方便。千万远离那个第一版本，也就是带有“Rokkor”字样的。&lt;/p&gt;
&lt;h1&gt;做工和手感&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://phillipreeve.net/blog/wp-content/uploads/2015/06/Minolta_3570mm.jpg"&gt;&lt;img alt="Minolta_3570mm" src="https://phillipreeve.net/blog/wp-content/uploads/2015/06/Minolta_3570mm.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;安装到 索尼 a7 上的 Minolta MD 3.5/35-70 镜头&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以今天的标准来看，这枚镜头的做工还是很不错的，但是跟最顶级的手动镜头还是不必了。这枚 3.5/35-70 镜头略微有一些塑料感。&lt;/p&gt;
&lt;p&gt;镜筒和接口都是金属材质，其他部位则为塑料或者玻璃质。对焦环和光圈环的手感有一些廉价感。&lt;/p&gt;
&lt;p&gt;这枚镜头不是推拉变焦，而是有一个旋转变焦环。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对焦环&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对焦环旋转大概 10°，对焦距离从 80cm 转到 1m，然后继续转 90° 就到了无穷远位置。&lt;/p&gt;
&lt;p&gt;对焦环旋转起来很顺滑，阻尼适中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;光圈&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;光圈环在 f/3.5- f/5.6 和 f/16 - f/22 都是整个档调整，在 f/5.6 - f/16 每一步则调整半个档。&lt;/p&gt;
&lt;p&gt;光圈环是塑料材质的，手感还行吧，咔嚓咔嚓的。&lt;/p&gt;
&lt;p&gt;此镜头一共有 7 片光圈叶片。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;遮光罩&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://phillipreeve.net/blog/wp-content/uploads/2015/06/Minolta_3570mm-3.jpg"&gt;&lt;img alt="Minolta_3570mm-3" src="https://phillipreeve.net/blog/wp-content/uploads/2015/06/Minolta_3570mm-3.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原厂自带的遮光罩很小巧，能起到保护前镜组的作用，又不至于增加很大的体积。塑料做的，摸起来也还挺结实的，连接得比较稳固。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;尺寸和重量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这款 3.5/35-70 镜头的尺寸中等。安装到 索尼 A7 上面也不算头重脚轻，正好比较平衡，当然&lt;a href="http://phillipreeve.net/blog/useful-accessory-sony-alpha-7-l-bracket/"&gt;添加一个 L-形外架&lt;/a&gt; 能更有助于改善平衡。&lt;/p&gt;
&lt;p&gt;相比索尼 50 f1.4 镜头，这枚镜头宽出来了 5mm，长度更长 25mm。然后重量为 365g，也比 50 f1.4 更重了 100g。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;滤镜&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;滤镜接口是金属材质的，在对焦的时候随着前镜组旋转。&lt;/p&gt;
&lt;h1&gt;微距模式（Macro Mode）&lt;/h1&gt;
&lt;p&gt;这枚镜头的最近对焦距离很长，是 80cm；而大多数 35mm 定焦镜头的最近对焦距离是 30cm 而 50mm 定焦镜头一半则是 45cm，所以这些定焦镜头能提供更高的放大倍率。&lt;/p&gt;
&lt;p&gt;好在这个镜头的第三版，也就是微距版本，体用了一个微距模式。只需要打开微距开关就可以开启这个模式了。&lt;/p&gt;
&lt;h1&gt;光学性能&lt;/h1&gt;
&lt;p&gt;下面的测试结果都是把这枚镜头安装到索尼 a7 上进行拍摄测得的。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;抗眩光&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;作为一枚来自 1980 年代的镜头，抗眩光能力超出了我的预料。在有明亮光源出现的时候会有一点对比度上的损失，但是整个图像依然还是可用的，稍微后期一下就可以了。我见过一些镜头要远远逊色于这枚。鬼影控制的也非常出色。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/96189377@N08/19232585886" title="Minolta MD 3.5/35-70 | 35mm | f/8 by Phillip Reeve Data, on Flickr"&gt;&lt;img alt="Minolta MD 3.5/35-70 | 35mm | f/8" src="https://c1.staticflickr.com/1/475/19232585886_1d1a4697e4_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果使用其他镜头，上图照片外的太阳光会导致更严重的眩光。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Minolta MD 3.5/35-70 | 35mm | f/11" src="https://c1.staticflickr.com/1/266/19072544299_d8a8b4f460_c.jpg"&gt;&lt;/p&gt;
&lt;p&gt;35mm | f/11 | 没有任何鬼影&lt;/p&gt;
&lt;h2&gt;虚化&lt;/h2&gt;
&lt;p&gt;f 3.5 光圈下的虚化还不错，不过虚化的光斑有比较清晰的边缘。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/birnenbaumgarten/8998087505" title="Bokeh35 by Phillip Reeve, on Flickr"&gt;&lt;img alt="Bokeh35" src="https://c1.staticflickr.com/3/2844/8998087505_10892b8523_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;f/3.5&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/birnenbaumgarten/8998087401" title="Bokeh56 by Phillip Reeve, on Flickr"&gt;&lt;img alt="Bokeh56" src="https://c1.staticflickr.com/3/2889/8998087401_d4cbc24ef6_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;f/5.6&lt;/p&gt;
&lt;p&gt;在 f 5.6 虚化的光斑边缘就弱了很多，不过会显示出光圈的形状，因为光圈是七片直叶片的，而不是圆形叶片的。&lt;/p&gt;
&lt;p&gt;我更倾向于使用 f 5.6 的光圈
当然，想要那种浅显直白的新手最喜欢的浅景深效果，还是有很多&lt;a href="http://phillipreeve.net/blog/minolta-mc-rokkor-58mm-11-2/"&gt;更适合的镜头&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;色差&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;横向色差（Lateral chromatic aberrations ）在 35mm 左右控制得还算不错，在 50mm 左右控制得相当出色，在 70mm 就基本看不到色差了。&lt;/p&gt;
&lt;p&gt;轴向色差(Axial chromatic aberrations，虚化边缘位置) 仅在 f/3.5 的时候能看到。&lt;/p&gt;
&lt;h3&gt;畸变&lt;/h3&gt;
&lt;p&gt;在 35mm 有一定程度的桶形畸变。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/96189377@N08/19253190322" title="Minolta MD 3.5/35-70 | 35mm | Dsitortion test by Phillip Reeve Data, on Flickr"&gt;&lt;img alt="Minolta MD 3.5/35-70 | 35mm | Dsitortion test" src="https://c1.staticflickr.com/1/267/19253190322_cf531b5a39_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;a href="https://www.flickr.com/photos/96189377@N08/19233056006/in/dateposted/"&gt;50mm&lt;/a&gt; 基本没有任何畸变，而在 &lt;a href="https://www.flickr.com/photos/96189377@N08/18638595463/in/dateposted/"&gt;70mm&lt;/a&gt;会有很轻微的枕形畸变。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;锐度&lt;/strong&gt;&lt;/h2&gt;
&lt;h1&gt;&lt;strong&gt;35mm&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://phillipreeve.net/blog/wp-content/uploads/2015/07/Minolta_MD_3570mmf3p5_35mm.jpg"&gt;&lt;img alt="Minolta MD 3.5/35-70 35mm infinity test" src="https://phillipreeve.net/blog/wp-content/uploads/2015/07/Minolta_MD_3570mmf3p5_35mm-140x300.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/3.5:&lt;/strong&gt; 中心和中部锐度很出色，有一点点对比度降低，边缘成像发柔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/5.6: &lt;/strong&gt; 整图的对比度和锐度都很高。特别尖端的边缘部位稍微还有一点点柔，不过临近部位的锐度都已经足够优秀了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/8:&lt;/strong&gt; 边缘成像明显改善。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/11: &lt;/strong&gt; 中心成像锐度有一点点降低，边缘仅有特别尖角位置的极少数像素成像不太锐利。&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;50mm&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://phillipreeve.net/blog/wp-content/uploads/2015/07/Minolta_MD_3570mmf3p5_50mm.jpg"&gt;&lt;img alt="Minolta MD 35-70mm f/3.5 50mm test" src="https://phillipreeve.net/blog/wp-content/uploads/2015/07/Minolta_MD_3570mmf3p5_50mm-140x300.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/3.5:&lt;/strong&gt; 整图锐度都很高，仅在边缘有一点点柔。对比度稍微有点低。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/5.6: &lt;/strong&gt; 中心和中部区域非常锐利，边缘也足够锐利。对比度优秀。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/8:&lt;/strong&gt; 这时候的表现堪比定焦镜头一样的锐利。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/11: &lt;/strong&gt; 边缘有了进一步的一点点改善，但是中心部分锐利程度有降低。&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;70mm&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://phillipreeve.net/blog/wp-content/uploads/2015/07/Minolta_MD_3570mmf3p5_70mm.jpg"&gt;&lt;img alt="Minolta MD 35-70mm f/3.5 70mm sharpness test" src="https://phillipreeve.net/blog/wp-content/uploads/2015/07/Minolta_MD_3570mmf3p5_70mm-140x300.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/3.5:&lt;/strong&gt; 相比 50mm 同样光圈下有所弱化：对比度不如 50mm 同样光圈，锐度还不错。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/5.6: &lt;/strong&gt; 中心和中部区域都非常锐利，边缘也足够锐利。对比度优秀。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/8:&lt;/strong&gt; 这时候的表现堪比定焦镜头一样的锐利。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f/11: &lt;/strong&gt; 边缘有了进一步的一点点改善，但是中心部分锐利程度有降低。&lt;/p&gt;
&lt;h1&gt;同焦段的其他选手&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;卡尔蔡司 Carl Zeiss Vario-Sonnar 3,4/35 – 70 mm:&lt;/strong&gt; 在风光摄影师群体中，这枚镜头享有极高的声誉。我认为蔡司这枚镜头比本文所评测的美能达 35-70 f3.5 稍微好一点，也就是 35mm 端，以及 f3.4 光圈，这两方面的表现稍微好些，蔡司这枚镜头的不足在于是推拉式变焦，并且要更重一些，有 475g 了。&lt;a href="http://www.zeiss.de/content/dam/Photography/new/pdf/de/downloadcenter/contax_yashica/vario-sonnar_t_34_35-70_ger.pdf"&gt;点击这里查看MTF 曲线&lt;/a&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;徕卡 LEICA VARIO-ELMAR-R 1:4/35-70 mm: &lt;/strong&gt; 更昂贵很多，也更加沉重，也是非常有名气的一枚镜头。徕卡这枚镜头的 MTF 曲线显示在 35mm 端有一些暗角，跟美能达这款镜头很相似。做工当然是一流的了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://phillipreeve.net/blog/rolling-review-carl-zeiss-vario-tessar-t-fe-424-70-za/"&gt;索尼 FE 4/24-70 ZA OSS&lt;/a&gt; 这枚镜头在 f4 的光圈下要比本文评测的美能达 35-70 在 f3.5 光圈下有更高的多的对比度，所以用于采访等用途，还是选择原厂这个比较适合。然而到了 f8 光圈，美能达这枚镜头就要更加锐利了，所以对于风光拍摄用途，还是推荐美能达这款，是更佳的选择。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;结论&lt;/h1&gt;
&lt;p&gt;这款美能达 MD 35-70mm 1:3.5 镜头相当优秀，性能出色，能够替代掉若干定焦镜头，让你外出拍摄更轻便。而且 1：4 的微距模式也让此镜头能用于更多场景。当然，在浅景深大光圈虚化方面，就要有所牺牲了。&lt;/p&gt;
&lt;p&gt;在 40-70mm 焦段，这枚镜头已经能够与很多非常优秀的定焦镜头竞争，并且在边缘成像方面都胜过了价格高昂的&lt;a href="http://phillipreeve.net/blog/rolling-review-carl-zeiss-vario-tessar-t-fe-424-70-za/"&gt;Sony 24-70 F4&lt;/a&gt;。
在 35mm 端，大概有 98% 的图像都很锐利，不过边缘尖角部位会比较柔。在 35mm 还有比较明显的畸变，不过在 50mm 和 70mm 端畸变控制得很优秀，色散和光晕也都还有但很微弱。&lt;/p&gt;
&lt;p&gt;需要注意的是 f3.5 光圈的对比度不太高，并且虚化效果也生硬。如果你需要轻便又灵活的镜头，这也是个不错的选择。我通常喜欢用这个镜头在城市中闲逛或者去野外的短途拍摄。&lt;/p&gt;
&lt;p&gt;总的来说，这枚镜头非常优秀，超过了所有更加昂贵的多的现代变焦镜头。&lt;/p&gt;
&lt;h1&gt;高分辨率样片&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/96189377@N08/19368189132" title="Minolta MD 3.5/35-70 | 40mm | f/8 by Phillip Reeve Data, on Flickr"&gt;&lt;img alt="Minolta MD 3.5/35-70 | 40mm | f/8" src="https://c1.staticflickr.com/1/268/19368189132_3179818f24_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;40mm | f/8&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/96189377@N08/19071085580" title="Minolta MD 3.5/35-70 | 35mm | f/8 by Phillip Reeve Data, on Flickr"&gt;&lt;img alt="Minolta MD 3.5/35-70 | 35mm | f/8" src="https://c1.staticflickr.com/1/461/19071085580_c7f7fd7708_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;35mm | f/8&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/96189377@N08/18753682723" title="Minolta MD 3.5/35-70 | 70mm | f/5.6 by Phillip Reeve Data, on Flickr"&gt;&lt;img alt="Minolta MD 3.5/35-70 | 70mm | f/5.6" src="https://c1.staticflickr.com/1/426/18753682723_e2c3294eae_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;70mm | f/5.6&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/96189377@N08/19262508581" title="Minolta MD 3.5/35-70 | 35mm | f/3.5 by Phillip Reeve Data, on Flickr"&gt;&lt;img alt="Minolta MD 3.5/35-70 | 35mm | f/3.5" src="https://c1.staticflickr.com/1/290/19262508581_de65dc6519_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;35mm | f/3.5&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/96189377@N08/18636203764" title="Minolta MD 3.5/35-70 | 50mm | f/8 by Phillip Reeve Data, on Flickr"&gt;&lt;img alt="Minolta MD 3.5/35-70 | 50mm | f/8" src="https://c2.staticflickr.com/4/3731/18636203764_a277f09df8_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;50mm | f/8&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/96189377@N08/19072533589" title="Minolta MD 3.5/35-70 | 70mm | f/5.6 by Phillip Reeve Data, on Flickr"&gt;&lt;img alt="Minolta MD 3.5/35-70 | 70mm | f/5.6" src="https://c1.staticflickr.com/1/556/19072533589_501774591c_c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;70mm | f/5.6&lt;/p&gt;
&lt;p&gt;更多样片可以在 &lt;a href="https://www.flickr.com/photos/96189377@N08/albums/72157634136487528"&gt;Minolta MD 35-70mm 1:3.5 &lt;/a&gt;这个相册中找到，当然，需要科学上网姿势。&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>齿轮箱变焦镜头，一种被遗忘的设计</title><link href="/chi-lun-xiang-bian-jiao-jing-tou-yi-chong-bei-yi-wang-de-she-ji.html" rel="alternate"></link><published>2017-08-13T23:20:00+08:00</published><updated>2017-08-13T23:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-08-13:/chi-lun-xiang-bian-jiao-jing-tou-yi-chong-bei-yi-wang-de-she-ji.html</id><summary type="html">&lt;h6&gt;本文翻译自 Tom Leonard 的&lt;a href="https://outfor30.com/2017/08/13/a-forgotten-solution/"&gt;博客文章&lt;/a&gt;。英文原版也同时转载于&lt;a href="https://www.dpreview.com/articles/6896135379/a-forgotten-solution-why-this-strange-1975-zoom-lens-is-so-sharp"&gt;DPreview&lt;/a&gt;。&lt;/h6&gt;
&lt;p&gt;感谢本文英文版原作者 Tom Leonard 授权本人翻译转载其博客文章，他是一位工程师，也是一名业余摄影家，器材爱好者。&lt;/p&gt;
&lt;p&gt;本文原文发表于 2017 年 8 月 13 日。&lt;/p&gt;
&lt;h1&gt;A FORGOTTEN SOLUTION&lt;/h1&gt;
&lt;p&gt;这几年来，我收集了一枚非常罕见的镜头。当初买来主要是因为觉得这枚镜头有收藏价值，然后一直放到最近，我都没有怎么把玩过这枚镜头。这枚镜头就是生产于 1975年的  美能达（Minolta） MC Rokkor-X 40-80mm f/2.8 手动对焦镜头。当初这枚镜头刚刚问世的时候，市面上的变焦镜头在画质上根本没有一枚能与之相提并论，所以实际上这枚镜头一直都是独孤求败的状态，直到近年来，这种情况才有所改变。这很大程度上是由于这枚镜头所采用的非常独特的齿轮箱设计（Gearbox design），这种设计的初衷是为了克服变焦镜头要面对的一些技术问题，这些技术问题目前也依然还困扰着现代的变焦镜头 …&lt;/p&gt;</summary><content type="html">&lt;h6&gt;本文翻译自 Tom Leonard 的&lt;a href="https://outfor30.com/2017/08/13/a-forgotten-solution/"&gt;博客文章&lt;/a&gt;。英文原版也同时转载于&lt;a href="https://www.dpreview.com/articles/6896135379/a-forgotten-solution-why-this-strange-1975-zoom-lens-is-so-sharp"&gt;DPreview&lt;/a&gt;。&lt;/h6&gt;
&lt;p&gt;感谢本文英文版原作者 Tom Leonard 授权本人翻译转载其博客文章，他是一位工程师，也是一名业余摄影家，器材爱好者。&lt;/p&gt;
&lt;p&gt;本文原文发表于 2017 年 8 月 13 日。&lt;/p&gt;
&lt;h1&gt;A FORGOTTEN SOLUTION&lt;/h1&gt;
&lt;p&gt;这几年来，我收集了一枚非常罕见的镜头。当初买来主要是因为觉得这枚镜头有收藏价值，然后一直放到最近，我都没有怎么把玩过这枚镜头。这枚镜头就是生产于 1975年的  美能达（Minolta） MC Rokkor-X 40-80mm f/2.8 手动对焦镜头。当初这枚镜头刚刚问世的时候，市面上的变焦镜头在画质上根本没有一枚能与之相提并论，所以实际上这枚镜头一直都是独孤求败的状态，直到近年来，这种情况才有所改变。这很大程度上是由于这枚镜头所采用的非常独特的齿轮箱设计（Gearbox design），这种设计的初衷是为了克服变焦镜头要面对的一些技术问题，这些技术问题目前也依然还困扰着现代的变焦镜头。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08379-edit-small.jpg?w=768&amp;amp;h=614"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MD 35-70mm f/3.5 Macro (第三代)镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;时光回溯到 1959 年，这一年诞生了第一枚商用的 35mm 静态相机（still camera）变焦镜头，是由 Voigtlander 发布的 Bessamatic-mount Zoomar 36-82mm f/2.8 镜头。这枚镜头的机械设计估计大家都不会觉得陌生，对焦和变焦都是通过调整镜筒上的转动环来实现的。这种简单的螺旋设计（helicoid design）目前也是我们变焦镜头最常见的制造方法，用于变焦和对焦。当你转动变焦/对焦环的时候，光学组件就通过螺纹内筒前后移动。这种设计会导致安装在螺旋内筒中的光学组件有固定的运动比。这样会带来一个问题，就是在不同的焦距上，每个焦距都需要对透镜/透镜组进行一些不同的调整，以便矫正像差，而螺旋内筒的固定运动比就不能满足这个需求。当然，螺旋内筒的设计相对来说比较简单，易于加工制造，可以根据镜片的物理设计来确定形状。如果一个镜头的设计初衷就是尽最大可能少做各种妥协，那么看上去就可能会和现在商店里面销售的镜头大不一样了。厂商们都是为了简单方便，依然都普遍采用螺旋内容的设计，而不愿意去探索尝试使用光学的方案解决机械缺陷。所以多年以来，镜头的设计者都已经习惯了妥协，他们在计算机的帮助下，在固定运动比的螺旋设计的限制之下，再去提升改进变焦镜头的光学设计。现代的变焦镜头依然不如定焦镜头，只不过由于非球面透镜以及各种花样翻新的涂层的帮助，让之间的差距缩小了一些。&lt;/p&gt;
&lt;p&gt;在 20 世纪 70 年代初，美能达的工程师则跳出了思维定式，创造出了一个能够精准改变镜组位置的变焦镜头的设计。他们设计的调整机构需要放到一个齿轮箱内，这样就能使得变焦镜头的变焦非常精确。这种设计不再有螺旋设计的局限性，每一组镜组都是彼此独立运动。整个镜头有 12 个镜组，各自独立地线性运动，通过齿轮来控制。通过固定比例运动的链条，在整个对焦变焦行程中，所有镜组都可以精准调整到最佳位置，以最佳的方式矫正整个焦距范围内的相差。他们创造的最关键部分就是如何让一个变焦镜头能够在变焦和对焦行程中像定焦镜头那样有准确的镜组位置，简单理解的理论就是这样。这个解决方案导致了相当怪异突出的外观，但这一设计也称得上是独特的。这样一来这枚镜头内镜组的位置就肯定不会有任何误差了。&lt;/p&gt;
&lt;p&gt;这枚镜头只有 560 g 重，应该说并不太笨重。事实上，这枚镜头即便内部全都是金属结构，也只有尼康当前的 24-70mm f/2.8 VR 变焦镜头的一半重量。&lt;/p&gt;
&lt;p&gt;对焦动作通过调整大拨轮实现，而变焦则通过移动杠杆臂来控制。这两种操作都非常简单又顺畅，只需相当短的移动距离。通过景深标尺，可以使用对焦拨轮进行非常精确地对焦到各个距离。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08381-edit-small.jpg?w=768&amp;amp;h=614"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MD 35-70mm f/3.5 Macro (第三代)镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该镜头的口径为 55mm。从前镜组往里看，能看到固定在镜身左侧的齿轮箱的轮廓。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08385-edit-small.jpg?w=768&amp;amp;h=614"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MD 35-70mm f/3.5 Macro (第三代)镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我还没说的是，这个镜头还有微距模式！镜头上有一个金属杆，将其拔齿轮箱，然后逆时针旋转之后再推进去，就把内部的镜组朝前移动了，这就增长了传感器/胶片平面距离齿轮部件的距离（其实也就是增长了成像距离，跟安装额外的微距环道理类似）。这就降低了最近成像距离（Minimum Focal Distance），在 40mm 端，从原本的 1.01m 拉近到了 0.37m。&lt;/p&gt;
&lt;p&gt;下图中，这个金属杆所处的是正常拍摄模式的位置：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08387-edit-small.jpg?w=768&amp;amp;h=614"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MD 35-70mm f/3.5 Macro (第三代)镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下图中，金属杆就调整到微距模式的位置了。当推入金属杆的时候，对焦长度杠杆就随着内部镜组向前移动了。这个设计很酷炫哈！&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08394-edit-small.jpg?w=768&amp;amp;h=614"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MD 35-70mm f/3.5 Macro (第三代)镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来咱们用这枚镜头来拍一些东西，来看看这些工程师的神器设计的效果吧。&lt;/p&gt;
&lt;p&gt;我的妹妹告诉我，在我住的地方不远，有这样沿着一条双向公路的一排旧仓。昨天我过去看了一下。再回来的路上拍了下面的这张照片。使用的是这枚镜头的 40mm 端，光圈使用了最大的 f/2.8。这是我当时拍的第一张照片，当时挺匆忙的，因为想要抓拍到那种独特的光线。草坪上的并不是晕影。那就是头顶的一篇很厚的黑云在上面投射出来的影像，造就了这个很奇特的场景光线。我拍下这个场景之后，太阳很快就又重新出现了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08340-edit-small.jpg?w=768&amp;amp;h=512"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MC Rokkor-X 40-80mm f/2.8 镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后同样在这次的图中，遇到了下图中的老式雪佛兰警车。拍摄焦距为 80mm，光圈为 f/8。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08339-edit-small.jpg?w=768&amp;amp;h=622"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MC Rokkor-X 40-80mm f/2.8 镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;让我很感兴趣的是在拍摄车身明亮的镀铬部分时候，镜头的色差控制如何。此前我用过的 1980 年代以前生产的老镜头，在拍摄这种场景的时候就没有不产生紫边的。感谢美能达工程师，因为这枚镜头真的一点紫边也没有。4200 万像素的 RAW 文件放大到 400 % 都不会有任何的紫边和色散。拍摄焦距为 80mm，光圈为 f/4。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08336-edit-small.jpg?w=768&amp;amp;h=600"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MC Rokkor-X 40-80mm f/2.8 镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我家前院的一种名为 Jelly Palm 的树长满了果子。下面这张照片使用了微距模式。拍摄焦距为 40mm，光圈为 f/2.8。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08332-edit-small.jpg?w=768&amp;amp;h=512"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MC Rokkor-X 40-80mm f/2.8 镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;餐桌上面的一碗香蕉。拍摄焦距大约是 50mm，光圈为 f/5.6。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08307-edit-small.jpg?w=768&amp;amp;h=576"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MC Rokkor-X 40-80mm f/2.8 镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;院子里面的玉兰树（Magnolia tree）发出了新芽。下图使用微距模式，拍摄焦距为 40mm，光圈为 f/2.8。在阴影和背光中，颜色和对比度都很好，而且焦外的背景也很平缓光滑，不干扰主体。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08327-edit-small.jpg?w=768&amp;amp;h=576"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MC Rokkor-X 40-80mm f/2.8 镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我的二女儿，很好心停下来让我来拍最后这张。拍摄焦距为 80mm，光圈为 f/2.8。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://outfor30.files.wordpress.com/2017/08/dsc08325-edit-small.jpg?w=768&amp;amp;h=614"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图使用 Sony A7RmkII 机身转接了这枚 Minolta MC Rokkor-X 40-80mm f/2.8 镜头 拍摄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实拍下来，我只能说，这个镜头太棒了。这个奇怪的齿轮箱驱动的设计，带来的结果就是一枚非常出色的中焦变焦镜头。当我最开始使用这枚镜头拍摄的时候，确实也觉得使用杠杆和齿轮来调整的操作方式有点不习惯，不过过了一阵之后就逐渐喜欢上了这种操作；这样操作起来很有乐趣。拿着这枚镜头不像传统那些镜头那样，把手握在镜筒上。我试试用左手手掌支撑齿轮箱位置，然后使用大拇指来调节变焦杠杆，使用食指来转动对焦拨轮。对焦的行程恰到好处，你不用担心手指需要挪动到不自然的位置，也不用做出来回重复的动作。&lt;/p&gt;
&lt;p&gt;对于那些想要拥有一枚有历史意义的镜头，或者想要改编拍摄思路的人，我强烈推荐这枚镜头。与我最爱的变焦镜头，无与伦比的美能达 MD 35-70mm f/3.5 相比，我觉得这两者能打平手。无论在体积、重量，还是焦段，这两者都很接近。实际上，美能达 35-70mm f/3.5 这枚镜头正式衍生自美能达 40-80mm f/2.8 （所以，我正好用衍生出来的新镜头去拍摄了老镜头的照片）。
美能达估计也觉得这样不同寻常的设计以及复杂的加工，都会使得这枚齿轮箱镜头成本高昂，所以他们进行了妥协。这样的齿轮箱镜头只生产了两代。我的这枚是第一带的 “MC” 版本。在 1977 年美能达生产了同系列的另外一个 “MD” 版本，然后就取消了。目前在网上都能买得到这两个版本的镜头，不过我必须说明，这个镜头的价格特别高，只适合那些专注的收藏家了。一枚品相好，功能正常的这样的镜头，目前的价格大概是 600-1000 美元。某些同型号镜头的齿轮箱可能不能用了，要找一家店去拆开修理，可是超级难的一件事。这种情况的功能故障的镜头，估计也会卖到 200-300 美元。&lt;/p&gt;</content><category term="Camera"></category><category term="Camera"></category><category term="Lens"></category><category term="Photo"></category></entry><entry><title>GeoPython 一个 Python 实现各种地质学日常用途的开源项目</title><link href="/geopython-yi-ge-python-shi-xian-ge-chong-di-zhi-xue-ri-chang-yong-tu-de-kai-yuan-xiang-mu.html" rel="alternate"></link><published>2017-07-30T16:20:00+08:00</published><updated>2017-07-30T16:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-07-30:/geopython-yi-ge-python-shi-xian-ge-chong-di-zhi-xue-ri-chang-yong-tu-de-kai-yuan-xiang-mu.html</id><summary type="html">&lt;h5&gt;作者: CycleUser&lt;/h5&gt;
&lt;h5&gt;QQ群： 560675626&lt;/h5&gt;
&lt;p&gt;下载以及了解更多，请访问 &lt;a href="https://github.com/chinageology/GeoPython"&gt;GitHub 项目主页&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;挖坑&lt;/h2&gt;
&lt;p&gt;去年开始把自己编写的一系列简单的 Python 脚本整理起来，于是就有了&lt;a href="https://zhuanlan.zhihu.com/p/25786642"&gt;知乎上的那篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;后来去年年底肿瘤做了个手术，然后身体恢复得不是太好，状态一直比较狗带，所以重构工作做得也很慢。&lt;/p&gt;
&lt;p&gt;好在现在是大概重新实现了 GUI 界面，然而并没有使用&lt;a href="https://zhuanlan.zhihu.com/python-kivy?topic=Kivy"&gt;当时翻译的 Kivy&lt;/a&gt;，而是从头学了 QT，这真是一个悲伤的故事。&lt;/p&gt;
&lt;h2&gt;填坑&lt;/h2&gt;
&lt;p&gt;然后现在 GeoPython 有了新的 GUI 了，能在界面中对数据文件进行简单的修改排序和保存了，而且每一个出现的图都单独弹出一个小窗口，并且可以进行各种细致的定制了。&lt;/p&gt;
&lt;p&gt;功能上，目前还没有完全实现覆盖之前老版本的功能，不过也有点模样了。&lt;/p&gt;
&lt;p&gt;前几天，陆续实现了 TAS、REE、Trace、当然还有计算锆石稀土中的 Ce4/Ce3 的比值来估算岩浆岩氧逸度的功能。&lt;/p&gt;
&lt;p&gt;今天又刚刚重新实现了极射赤平投影（Stereo …&lt;/p&gt;</summary><content type="html">&lt;h5&gt;作者: CycleUser&lt;/h5&gt;
&lt;h5&gt;QQ群： 560675626&lt;/h5&gt;
&lt;p&gt;下载以及了解更多，请访问 &lt;a href="https://github.com/chinageology/GeoPython"&gt;GitHub 项目主页&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;挖坑&lt;/h2&gt;
&lt;p&gt;去年开始把自己编写的一系列简单的 Python 脚本整理起来，于是就有了&lt;a href="https://zhuanlan.zhihu.com/p/25786642"&gt;知乎上的那篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;后来去年年底肿瘤做了个手术，然后身体恢复得不是太好，状态一直比较狗带，所以重构工作做得也很慢。&lt;/p&gt;
&lt;p&gt;好在现在是大概重新实现了 GUI 界面，然而并没有使用&lt;a href="https://zhuanlan.zhihu.com/python-kivy?topic=Kivy"&gt;当时翻译的 Kivy&lt;/a&gt;，而是从头学了 QT，这真是一个悲伤的故事。&lt;/p&gt;
&lt;h2&gt;填坑&lt;/h2&gt;
&lt;p&gt;然后现在 GeoPython 有了新的 GUI 了，能在界面中对数据文件进行简单的修改排序和保存了，而且每一个出现的图都单独弹出一个小窗口，并且可以进行各种细致的定制了。&lt;/p&gt;
&lt;p&gt;功能上，目前还没有完全实现覆盖之前老版本的功能，不过也有点模样了。&lt;/p&gt;
&lt;p&gt;前几天，陆续实现了 TAS、REE、Trace、当然还有计算锆石稀土中的 Ce4/Ce3 的比值来估算岩浆岩氧逸度的功能。&lt;/p&gt;
&lt;p&gt;今天又刚刚重新实现了极射赤平投影（Stereo）功能，其中吴尔夫网和施密特网都可以即时任意切换；另外今天还重新实现了玫瑰花图，可以随意即时切换节理、走向、倾向、倾角作图，步长从1-30任意随时动态调整，可以选择单组样品或者多组样品成图。&lt;/p&gt;
&lt;p&gt;目前为止，据我所知，同行的软件当中实现上面这个锆石氧逸度计算功能的，好像还没有；具有赤平投影和玫瑰花图功能的，则好像没有 GeoPython 这样各种自定义即时显示；其他功能类似的，又没有GeoPython 跨平台的优势。&lt;/p&gt;
&lt;p&gt;更多功能，还在重构之中。大家有任何需求，只要提供数学公式和样本数据用于检验，我们慢慢一个个加上去就是了。&lt;/p&gt;
&lt;h2&gt;使用方法&lt;/h2&gt;
&lt;p&gt;单独的 app 应用文件，以后将只提供 Windows 平台的 exe 文件；对其他平台的用户，建议大家在 Python 环境中使用 GeoPython，这样能省去开发者打包上传的时间，而且大家也能及时更新下载到最新的版本。而且这样大家逐渐开始尝试使用 Python，由于 GeoPython 现在有了重建中的图形界面，所以应该不会感觉到太多的痛苦。&lt;/p&gt;
&lt;h3&gt;Windows 用户&lt;/h3&gt;
&lt;p&gt;如果你在使用 Windows7 操作系统，可能会出现&lt;code&gt;api-ms-win-crt&lt;/code&gt;无法定位这样的错误，所以先要安装 KB2999226 这个补丁，然后安装 &lt;code&gt;Visual C++ Redistributable 2015&lt;/code&gt;。
当然，我已经把这部分打包了，&lt;a href="https://pan.baidu.com/s/1kVwSQ95"&gt;32位操作系统下载&lt;/a&gt;，&lt;a href="https://pan.baidu.com/s/1qY34ocW"&gt;64位操作系统下载&lt;/a&gt;。
然后到&lt;a href="https://github.com/chinageology/GeoPython/blob/master/Download.md"&gt;下载页面&lt;/a&gt;下载压缩包，解压缩之后探索着就可以用了。&lt;/p&gt;
&lt;h3&gt;在 Python 中使用&lt;/h3&gt;
&lt;h4&gt;使用 PIP 安装&lt;/h4&gt;
&lt;p&gt;首先当然是大家要安装一个 Python，需要用 3.5 版本以上的，大家可以去&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/"&gt;清华的源下载&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;推荐使用 Anaconda3-4.0.0 以及更新的 Anaconda3 版本。&lt;/p&gt;
&lt;p&gt;关于 Anaconda 的一些帮助可以参考&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/"&gt;清华的官方说明&lt;/a&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install geopython
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;在 Python 内的使用方法&lt;/h4&gt;
&lt;p&gt;在通过 PIP 安装好了 GeoPython 之后，就可以在 Python 环境中使用它了。只需要在解释器内（例如 ipython 之类的）输入下面几行代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;import sys
import geopython as gp
sys.exit&lt;span class="o"&gt;(&lt;/span&gt;gp.begin&lt;span class="o"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样就能看到全新实现的图形界面的 GeoPython 了。&lt;/p&gt;
&lt;p&gt;界面和成图还很粗糙，相信我们以后会越来越好的。我不是专门的软件开发人员，实际上也就是一群脑袋发热的地质学人，把自己捅咕出来的锤子之类的简单工具拿出来给大家一起凑活用。如果你有高明的意见建议，欢迎提出批评指正等等，如果你要喷我们做的太丑或者代码写得丑，那也欢迎你帮我们改进。如果只是喷，那就去吃粑粑吧。&lt;/p&gt;
&lt;p&gt;全新的 TAS 功能使用的数据文件模板为：&lt;a href="https://github.com/chinageology/GeoPython/blob/master/NewGUI/TAS.xlsx"&gt;TAS.xlsx&lt;/a&gt;
&lt;img alt="" src="https://raw.githubusercontent.com/chinageology/GeoPython/master/img/NewTAS.png"&gt;&lt;/p&gt;
&lt;p&gt;全新的 锆石 Ce 比例计算氧逸度功能使用的数据文件模板为： &lt;a href="https://github.com/chinageology/GeoPython/blob/master/NewGUI/ZirconCe.xlsx"&gt;ZirconCexlsx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/chinageology/GeoPython/master/img/NewZirconCe.png"&gt;&lt;/p&gt;
&lt;p&gt;稀土和微量元素数据文件模板：
&lt;a href="https://github.com/chinageology/GeoPython/blob/master/NewGUI/Trace27.xlsx"&gt;Trace27.xlsx&lt;/a&gt;
&lt;a href="https://github.com/chinageology/GeoPython/blob/master/NewGUI/Trace37.xlsx"&gt;Trace37.xlsx&lt;/a&gt;
&lt;a href="https://github.com/chinageology/GeoPython/blob/master/NewGUI/REE.xlsx"&gt;REE.xlsx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/chinageology/GeoPython/master/img/NewTrace.png"&gt;&lt;/p&gt;
&lt;p&gt;全新实现的极射赤平投影和玫瑰花图功能所用的数据文件模板： &lt;a href="https://github.com/chinageology/GeoPython/blob/master/NewGUI/Structure.xlsx"&gt;Structure.xlsx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/chinageology/GeoPython/master/img/Rose.png"&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="Geology"></category></entry><entry><title>去中心化的安全通信软件 GNU Ring</title><link href="/qu-zhong-xin-hua-de-an-quan-tong-xin-ruan-jian-gnu-ring.html" rel="alternate"></link><published>2017-07-29T16:20:00+08:00</published><updated>2017-07-29T16:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-07-29:/qu-zhong-xin-hua-de-an-quan-tong-xin-ruan-jian-gnu-ring.html</id><content type="html">&lt;p&gt;&lt;a href="https://ring.cx/en"&gt;去年底进入 GNU 项目的即时通讯软件，GNU Ring 今天刚刚更新了 1.0 版本&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;GNU Ring 的特点是去中心化和强加密，能用于文字传输、语音和视频聊天，可以粗略看作是体验更加完美的 BitMessenger。&lt;/p&gt;
&lt;p&gt;对于新注册的账户来说，最重要的就是一定要牢记账号密码，开发者目前说忘记后无法找回。目前该软件支持 Mac、Linux、Windows、Android 这几个主流操作系统，推荐大家尝试一下。&lt;/p&gt;
&lt;p&gt;为什么推荐新发明出来的轮子呢？因为安全，加密，无广告，不被打扰。&lt;/p&gt;
&lt;p&gt;下载地址参考：&lt;a href="https://ring.cx/en/download"&gt;Install Ring&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="Chat"></category></entry><entry><title>对号入座</title><link href="/dui-hao-ru-zuo.html" rel="alternate"></link><published>2017-07-12T23:20:00+08:00</published><updated>2017-07-12T23:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-07-12:/dui-hao-ru-zuo.html</id><summary type="html">&lt;p&gt;很无奈，今天帝都的雾霾依然如狗，令人如痴如醉。&lt;/p&gt;
&lt;p&gt;此外手机丢失了，让我非常伤心。&lt;/p&gt;
&lt;p&gt;然后分享一句吕思勉先生的话：“虽有弊病，人总只怪身居其位的人不好，而不怪到这制度不好。譬如我们现在，天天骂着奸商，却没有人攻击商业制度一样。”&lt;/p&gt;
&lt;p&gt;接下来再分享另外一段吕思勉前辈的话：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img\Worship.png"&gt;&lt;/p&gt;
&lt;p&gt;这里面关于国人“崇古观念太重”的说法，非常赞。&lt;/p&gt;
&lt;p&gt;然而这还不够，我以为国人的窠臼观念远远不仅限于崇古，而是发展到了“乱崇”。&lt;/p&gt;
&lt;p&gt;何为“乱崇”？即无原则无立场地崇拜各种“怪力乱神”。&lt;/p&gt;
&lt;p&gt;这种“乱崇”，在很多群体上都有体现。&lt;/p&gt;
&lt;p&gt;首先就体现在那些似乎本应年高有德的一部分中老年群体，他们不考虑他人的安全和观感，不在意法律和社会规范，不认同公序良俗，不讲究理性和科学。&lt;/p&gt;
&lt;p&gt;譬如前些日子听说有老年女性在航班飞机的发动机内扔硬币，有所谓“祈福”的解释；再比如近些天常见的各种中老年群体在机动车道上进行的所谓“暴走健身”；又比如前些日子被曝光的诸如刘洪斌之类的所谓“神医表演艺术家”；还比如所有中老年群体在朋友圈中转发的各种锦鲤和养生秘术。&lt;/p&gt;
&lt;p&gt;此外还体现在那些本应锐意进取的某些青年人群，他们单纯认同物质财富的积累和占有，完全放弃独立思想和批判精神，极度追求类似群居动物的互相舔舐一样的吹捧，强烈保有莫名来源的盲目自信乃至拒绝任何学习更新甚至攻击撕咬所有不同观点。&lt;/p&gt;
&lt;p&gt;譬如有大群的青年人对某些获取了巨额利润的商人、演艺圈或文化圈的名人或者政界人士高喊“父亲 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;很无奈，今天帝都的雾霾依然如狗，令人如痴如醉。&lt;/p&gt;
&lt;p&gt;此外手机丢失了，让我非常伤心。&lt;/p&gt;
&lt;p&gt;然后分享一句吕思勉先生的话：“虽有弊病，人总只怪身居其位的人不好，而不怪到这制度不好。譬如我们现在，天天骂着奸商，却没有人攻击商业制度一样。”&lt;/p&gt;
&lt;p&gt;接下来再分享另外一段吕思勉前辈的话：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img\Worship.png"&gt;&lt;/p&gt;
&lt;p&gt;这里面关于国人“崇古观念太重”的说法，非常赞。&lt;/p&gt;
&lt;p&gt;然而这还不够，我以为国人的窠臼观念远远不仅限于崇古，而是发展到了“乱崇”。&lt;/p&gt;
&lt;p&gt;何为“乱崇”？即无原则无立场地崇拜各种“怪力乱神”。&lt;/p&gt;
&lt;p&gt;这种“乱崇”，在很多群体上都有体现。&lt;/p&gt;
&lt;p&gt;首先就体现在那些似乎本应年高有德的一部分中老年群体，他们不考虑他人的安全和观感，不在意法律和社会规范，不认同公序良俗，不讲究理性和科学。&lt;/p&gt;
&lt;p&gt;譬如前些日子听说有老年女性在航班飞机的发动机内扔硬币，有所谓“祈福”的解释；再比如近些天常见的各种中老年群体在机动车道上进行的所谓“暴走健身”；又比如前些日子被曝光的诸如刘洪斌之类的所谓“神医表演艺术家”；还比如所有中老年群体在朋友圈中转发的各种锦鲤和养生秘术。&lt;/p&gt;
&lt;p&gt;此外还体现在那些本应锐意进取的某些青年人群，他们单纯认同物质财富的积累和占有，完全放弃独立思想和批判精神，极度追求类似群居动物的互相舔舐一样的吹捧，强烈保有莫名来源的盲目自信乃至拒绝任何学习更新甚至攻击撕咬所有不同观点。&lt;/p&gt;
&lt;p&gt;譬如有大群的青年人对某些获取了巨额利润的商人、演艺圈或文化圈的名人或者政界人士高喊“父亲”、“岳父”、“大大（某些地区方言中表示对父亲的称呼）”，对某些面向姣好的演艺人士或者富家子弟高喊“老公”等人类配偶之间的称呼；再比如他们不自己读书思考，而是听取某些写出来几首香艳辞赋吟唱多年而弄风月、或从传媒行业浸淫多年的油滑混账之类面相龌龊之辈给他们带来所谓“历史思考”与“逻辑思维”。又比如他们嘲笑高龄拍照爱好者的所谓老法师行径，而自己又在各种社交媒体上面大肆参与所谓集赞营销，互相给出各种违心的赞美；还比如他们在各种问答网站上面强行回答自己只是一知半解甚至根本不了解的领域，对所有纠正者进行撕咬。&lt;/p&gt;
&lt;p&gt;而我呢？正好处于这两者中间的过渡时期，是一个丑陋的人，一个低俗的人，一个脱离了高级趣味的人。&lt;/p&gt;
&lt;p&gt;那么你呢？&lt;/p&gt;</content><category term="Story"></category></entry><entry><title>基于 Raspbian 构建 Python 开发环境</title><link href="/ji-yu-raspbian-gou-jian-python-kai-fa-huan-jing.html" rel="alternate"></link><published>2017-05-09T16:20:00+08:00</published><updated>2017-05-09T16:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-05-09:/ji-yu-raspbian-gou-jian-python-kai-fa-huan-jing.html</id><summary type="html">&lt;p&gt;多年以前，袁萌老前辈曾经跟我谈及当时刚刚诞生的 Raspberry Pi，表示这种单板机对于教育事业会有很大帮助。奈何那时候我见识短浅，无法完全理解老先生的思路和远见。&lt;/p&gt;
&lt;p&gt;已经很久没有见过老先生了，上一次见到他，还是在白大哥的婚礼上，那也是三四年前了。&lt;/p&gt;
&lt;p&gt;听说老先生现在改用 Windows 10 了，而最初还颇为无奈。
这让我想起当年我去为老先生安装 Ubuntu 的日子，那时候我才二十几岁，懵懂无知，有机会在老先生身边听闻教诲，奈何资质愚钝。&lt;/p&gt;
&lt;p&gt;时光飞快，五年过去了，前几天有一个同学送给我一枚初代的 Raspberry Pi。&lt;/p&gt;
&lt;p&gt;我拿到手上那一刻，仿佛感受到了五年前的那种惊喜。&lt;/p&gt;
&lt;p&gt;于是我大概整理记录一下，基于 Raspberry Pi 构建一个 Python 开发环境的简单过程。&lt;/p&gt;
&lt;h2&gt;系统安装&lt;/h2&gt;
&lt;p&gt;首先自然是安装操作系统，五年前我还是 Scientific Linux 的拥趸，还曾经带着一众小伙伴玩红帽系，而如今我已经完全倒向 Debian 了，所以我选择了 Raspbian。&lt;/p&gt;
&lt;p&gt;安装方法可以参考 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;多年以前，袁萌老前辈曾经跟我谈及当时刚刚诞生的 Raspberry Pi，表示这种单板机对于教育事业会有很大帮助。奈何那时候我见识短浅，无法完全理解老先生的思路和远见。&lt;/p&gt;
&lt;p&gt;已经很久没有见过老先生了，上一次见到他，还是在白大哥的婚礼上，那也是三四年前了。&lt;/p&gt;
&lt;p&gt;听说老先生现在改用 Windows 10 了，而最初还颇为无奈。
这让我想起当年我去为老先生安装 Ubuntu 的日子，那时候我才二十几岁，懵懂无知，有机会在老先生身边听闻教诲，奈何资质愚钝。&lt;/p&gt;
&lt;p&gt;时光飞快，五年过去了，前几天有一个同学送给我一枚初代的 Raspberry Pi。&lt;/p&gt;
&lt;p&gt;我拿到手上那一刻，仿佛感受到了五年前的那种惊喜。&lt;/p&gt;
&lt;p&gt;于是我大概整理记录一下，基于 Raspberry Pi 构建一个 Python 开发环境的简单过程。&lt;/p&gt;
&lt;h2&gt;系统安装&lt;/h2&gt;
&lt;p&gt;首先自然是安装操作系统，五年前我还是 Scientific Linux 的拥趸，还曾经带着一众小伙伴玩红帽系，而如今我已经完全倒向 Debian 了，所以我选择了 Raspbian。&lt;/p&gt;
&lt;p&gt;安装方法可以参考&lt;a href="https://www.raspberrypi.org/documentation/installation/installing-images/README.md"&gt;官方网站的说明&lt;/a&gt; 以及其他很多指南，这里只简要说一下。&lt;/p&gt;
&lt;p&gt;首先为了运行操作系统，准备一个 SD 卡，我选择了一张 16 G 的闪迪 SD 卡，这样容量起码和我的 Chromebook 相当，用起来估计起码是够用了。在 Mac OS X 的磁盘工具里面选中这个存储卡，格式化成 mbr 分区表模式的 FAT （MS-DOS） 格式；根据官方说明似乎当 SD 卡容量超过 32 G 的时候就需要格式化成 FAT32 。不过这都无所谓，我没纠结这些。&lt;/p&gt;
&lt;p&gt;然后是下载&lt;a href="http://vx2-downloads.raspberrypi.org/NOOBS/images/NOOBS-2017-04-10/NOOBS_v2_4_0.zip"&gt;这个镜像&lt;/a&gt;，用迅雷之类的都可以，速度还不错。下载之后解压缩到刚刚格式化好的 SD 卡的根目录，我选用的是 7zip。&lt;/p&gt;
&lt;p&gt;接下来把这张 SD 卡插进 Raspberry Pi 的卡槽，连接电源、键鼠、启动，在启动界面选择安装 Raspbian 即可。&lt;/p&gt;
&lt;p&gt;由于刚刚我给出的链接是 NOOBS 的最简单安装模式，所以应该是非常新手友善的，如果不习惯英文还可以在这个界面调整用繁体中文。&lt;/p&gt;
&lt;p&gt;安装这一部分就不多说了。&lt;/p&gt;
&lt;h2&gt;更换更新源&lt;/h2&gt;
&lt;p&gt;安装好之后的第一件事，就是改用清华提供的更新源：&lt;/p&gt;
&lt;p&gt;这里需要改动 /etc/apt 目录下的 sources.list 文件，所以需要使用管理员权限（sudo），安装好的系统应该已经自带 nano 了，就用这个来编辑一下 /etc/apt/sources.list 文件。参考命令行为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo nano /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;先在行首添加 &lt;code&gt;#&lt;/code&gt; 来注释掉所有已有的源。
刚刚我们那个下载链接里面的是基于 Debian 8 的，所以接下来在另起一行添加下面两行内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ jessie main non-free contrib
deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ jessie main non-free contrib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：网址末尾的raspbian重复两次是必须的。因为Raspbian的仓库中除了APT软件源还包含其他代码。APT软件源不在仓库的根目录，而在raspbian/子目录下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;确定没问题之后，ctrl + O 写入，然后 ctrl + X 退出，接着就是用 &lt;code&gt;sudo apt update&lt;/code&gt; 命令，更新软件源列表，更新之后再 &lt;code&gt;sudo apt upgrade&lt;/code&gt; 来更新系统。&lt;/p&gt;
&lt;h2&gt;安装开发工具&lt;/h2&gt;
&lt;p&gt;准备工作都做好了，现在就是要安装咱们要用的 Python 包了，比如常用的 cython、numpy、matplotlib 之类的包，以及 spyder 之类的 IDE。&lt;/p&gt;
&lt;p&gt;这里推荐使用 apt 安装，因为我尝试了用 pip 安装的时候发现各种错误，很麻烦。 apt 安装的步骤如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt update
sudo apt install python-matplotlib
sudo apt install python3-matplotlib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样使用 apt 来安装 matplotlib 的过程中会同时安装其他必要的包，例如 numpy 等等。所以依赖关系比较好解决&lt;/p&gt;
&lt;p&gt;接下来就是安装我非常喜欢的 IDE 了，界面很赞的 Spyder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt update
sudo apt install spyder
sudo apt install spyder3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;我还需要用到 pandas 和 xlrd，这两个我就在安装了上面的包之后用 pip 来安装了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt update
sudo apt install python-dev python-pip python3-dev python3-pip
pip install pandas xlrd
pip3 install pandas xlrd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上面的命令中，先是手动安一下 pip 以避免系统没有自带 pip，然后是再通过 pip 来安装这两个包。&lt;/p&gt;
&lt;p&gt;上面的命令中加了 3 的表示是针对 Python3 的，没有加的就是针对 Python2 了。&lt;/p&gt;
&lt;p&gt;Raspberry Pi 上面有的包无法安装，比如 Anaconda 和 TensorFlow，这两个我就没能用 pip 安装成功，似乎是不支持 armv6l。&lt;/p&gt;
&lt;p&gt;我这个初代的 Raspberry Pi 只能安装一个 Miniconda 3.5.5 armv6l，下载地址在&lt;a href="http://repo.continuum.io/miniconda/Miniconda-3.5.5-Linux-armv6l.sh"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下载这个 sh 文件之后，复制到 home 目录下的个人目录，例如我的用户名是 pi，那就复制到 /home/pi/ 这个文件夹下面。然后在终端中输入：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/bin/bash Miniconda-3.5.5-Linux-armv6l.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;接下来就是按照指示来进行安装即可了。&lt;/p&gt;
&lt;p&gt;不太推荐使用这个，版本太旧了。&lt;/p&gt;
&lt;h2&gt;使用 PyEnv 安装和管理多版本&lt;/h2&gt;
&lt;p&gt;首先安装依赖包：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后使用脚本安装 Pyenv：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer &lt;span class="p"&gt;|&lt;/span&gt; bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;根据提示修改环境变量，然后重新运行终端。&lt;/p&gt;
&lt;p&gt;接下来就是来安装一个全新的 Python 3.6.1，我非常喜欢这个版本，因为字典有序了，所以我就喜欢，爱咋地咋地咯~&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install &lt;span class="m"&gt;3&lt;/span&gt;.6.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;剩下的内容就跟全新配置开发环境一样，使用 pip 来安装你想要的包就可以了。&lt;/p&gt;
&lt;p&gt;以上这些就是在 Raspberry Pi 上面构建 Python 开发的基本环境的基本过程。&lt;/p&gt;
&lt;p&gt;对 Python 和 Machine Learning 感兴趣的话可以关注一下我的两个专栏：
&lt;a href="https://zhuanlan.zhihu.com/python-kivy"&gt;Python 学习之路&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zhuanlan.zhihu.com/MachineLearn"&gt;Machine Learning&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果有兴趣参与对&lt;a href="https://github.com/Kivy-CN/Duke-STA-663-CN"&gt;杜克大学 STA663&lt;/a&gt; 和 &lt;a href="https://github.com/Kivy-CN/Stanford-CS-229-CN"&gt;斯坦福 CS229&lt;/a&gt; 的翻译，可以加入我们的 &lt;a href="https://github.com/kivy-cn"&gt;GitHub Team&lt;/a&gt;&lt;/p&gt;</content><category term="Raspbian"></category><category term="Raspbian"></category><category term="RaspberryPi"></category><category term="Python"></category><category term="IDE"></category><category term="Linux"></category></entry><entry><title>让我害怕的</title><link href="/rang-wo-hai-pa-de.html" rel="alternate"></link><published>2017-05-06T16:20:00+08:00</published><updated>2017-05-06T16:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-05-06:/rang-wo-hai-pa-de.html</id><summary type="html">&lt;h6&gt;本文无任何参考意义，所有内容全属虚构，是本人在文学创作上的一种尝试。&lt;/h6&gt;
&lt;p&gt;昨天发了一篇抱怨教室不安装空气净化器的文字。
然后有网友表示对我的担忧，他说：“小心秋后算账，有人默默看着你。”&lt;/p&gt;
&lt;p&gt;他给出了一个连接：https://www.zhihu.com/question/59191415/answer/165148856&lt;/p&gt;
&lt;p&gt;我很感激他的关心，但我不太觉得这有什么可担心。&lt;/p&gt;
&lt;p&gt;作为一个温和派东北人，我很少怕什么东西。&lt;/p&gt;
&lt;p&gt;我不怕美国人，用英语对着骂街基本也都能占上风，这可能一定程度上是遗传了我爷爷的基因，他当年就在战场上打过美国人，并且胜利归国。&lt;/p&gt;
&lt;p&gt;而且出于辩证唯物主义信仰和国际主义精神，即便敌人强大如美国，如果真发生了战争，我也愿意与之战斗，而且也会充满信心，因为我相信自己不会是单独一个人。&lt;/p&gt;
&lt;p&gt;我也不怕公职人员，因为他们本来不就应该是服务人民大众的同志么？&lt;/p&gt;
&lt;p&gt;我有很多同学，他们有的加入了地方的地矿单位，有的加入了黄金部队，有的去了边陲做教师，有的去当了人民警察。我曾经跟他们各种侃大山、练习题、逃课、吃烤串、出野外等等，他们是我所熟悉的公职人员的最主要的群体。&lt;/p&gt;
&lt;p&gt;当然，在我的印象中，他们都比我忙碌很多，生活也更充实很多。其中似乎大部分都不怎么上网闲聊 …&lt;/p&gt;</summary><content type="html">&lt;h6&gt;本文无任何参考意义，所有内容全属虚构，是本人在文学创作上的一种尝试。&lt;/h6&gt;
&lt;p&gt;昨天发了一篇抱怨教室不安装空气净化器的文字。
然后有网友表示对我的担忧，他说：“小心秋后算账，有人默默看着你。”&lt;/p&gt;
&lt;p&gt;他给出了一个连接：https://www.zhihu.com/question/59191415/answer/165148856&lt;/p&gt;
&lt;p&gt;我很感激他的关心，但我不太觉得这有什么可担心。&lt;/p&gt;
&lt;p&gt;作为一个温和派东北人，我很少怕什么东西。&lt;/p&gt;
&lt;p&gt;我不怕美国人，用英语对着骂街基本也都能占上风，这可能一定程度上是遗传了我爷爷的基因，他当年就在战场上打过美国人，并且胜利归国。&lt;/p&gt;
&lt;p&gt;而且出于辩证唯物主义信仰和国际主义精神，即便敌人强大如美国，如果真发生了战争，我也愿意与之战斗，而且也会充满信心，因为我相信自己不会是单独一个人。&lt;/p&gt;
&lt;p&gt;我也不怕公职人员，因为他们本来不就应该是服务人民大众的同志么？&lt;/p&gt;
&lt;p&gt;我有很多同学，他们有的加入了地方的地矿单位，有的加入了黄金部队，有的去了边陲做教师，有的去当了人民警察。我曾经跟他们各种侃大山、练习题、逃课、吃烤串、出野外等等，他们是我所熟悉的公职人员的最主要的群体。&lt;/p&gt;
&lt;p&gt;当然，在我的印象中，他们都比我忙碌很多，生活也更充实很多。其中似乎大部分都不怎么上网闲聊，更很少看到有在知乎上面进行各种讨论的。&lt;/p&gt;
&lt;p&gt;所以，我想表达的是，我所认识的公职人员基本都是楷模一样的人物，而且有的人确实为了事业而牺牲了很多，甚至一切，比如我的室友大罗去年就牺牲在野外地质调查途中。&lt;/p&gt;
&lt;p&gt;所以看到&lt;a href="https://www.zhihu.com/question/59191415/answer/165148856"&gt;网友分享的链接&lt;/a&gt;中那些用词所体现的沟通素质和政治素养，让我很难将其与我所认识的对应群体联系起来。&lt;/p&gt;
&lt;p&gt;网上的信息真假莫辨，比如知乎上也发生过男人冒充女人，国人冒充外国人之类的事情，所以值得怀疑的就是某些散布具有挑唆甚至敌对情绪的人员的身份，未必可以轻信。&lt;/p&gt;
&lt;p&gt;另外我不担心什么秋后算账，毕竟我只是抱怨一下教室的硬件而已，而且从客观上来说，我的着眼点还是广大青少年学生的身体健康，以及全民的健康防范意识。&lt;/p&gt;
&lt;p&gt;所以所谓好XX默默看着我，我并不担心，身正有何惧怕的？&lt;/p&gt;
&lt;p&gt;下面说说我真的害怕的。&lt;/p&gt;
&lt;p&gt;我们学校有若干教工人员，貌美温婉，笑颜如花，对其他老师艳若桃李；而对学生颐指气使，苦大仇深，冷若冰霜。&lt;/p&gt;
&lt;p&gt;我记得当初我肿瘤手术跟她请假遭到了拒绝。所以后来我只能错过一个经验丰富的大夫。当然，我想一个学生的生命健康可能对她来说不算什么。&lt;/p&gt;
&lt;p&gt;后来学校组织党课学员看电影《湄公河行动》，而我此前跟我太太一起自费就看过这部电影了，作为一个坚定的共产主义者以及一个节俭朴素的人，我强烈要求把机会让给没有看过的同学，正好这时候支部书记也跟我商量说有一位同学想看，让我把票让出去。出于无产阶级的革命友谊，我自然是当仁不让地把机会让给支部书记的这位同学。因为我希望学校的经费不要浪费，也希望维护好同学们的阶级友谊。&lt;/p&gt;
&lt;p&gt;但是后来那名教工人员对我提出了强烈的批评，然后我意识到当时同学风传的一些事情可能是真的，比如她可能真的是强制要求看过的同学也要重新看一次，她可能真的是不尊重党内民主，不尊重学校的经费，不尊重科研工作。&lt;/p&gt;
&lt;p&gt;而我这种真正的信仰者，喜欢求真务实的人，可能会让这样的群体很不舒服。&lt;/p&gt;
&lt;p&gt;后来可能是由于坦诚直白以及坚定的信仰，我在党课班上被评为优秀学员。&lt;/p&gt;
&lt;p&gt;我爷爷当年在朝鲜战场上都没能入党，我居然有这样的机会，作为一个坚定的共产主义者，这让我感到非常荣幸。&lt;/p&gt;
&lt;p&gt;然而，后来我得知自己早已经被拦在后续项目的名单之前。
似乎我们这届有两个名额，而她空下了我的名额把我踢出。&lt;/p&gt;
&lt;p&gt;我当初在医院做手术，所以委托了一个师弟去帮我代取材料。我最初以为是我这位师弟没有尽心帮我而导致了问题的发生，于是找到学工办公室去询问情况。&lt;/p&gt;
&lt;p&gt;结果却发现并不是我所能控制的任何原因导致的，而是因为，她把我从名单中删掉了。&lt;/p&gt;
&lt;p&gt;她的理由是：“我作为你的辅导员，不知道你到底是几年级，更不知道你是不是直博生。”&lt;/p&gt;
&lt;p&gt;我当时看着那张精心雕琢了妆容的面孔，那是一张非常美艳动人的面孔，却是我所见过的最令我厌恶的面孔。&lt;/p&gt;
&lt;p&gt;我最害怕的东西有两种，一种是各种虫豸，比如蜘蛛蚂蚁蚊子苍蝇蟑螂臭虫，另一种就是这样精致妆容又让人莫名感到厌恶的人。&lt;/p&gt;
&lt;p&gt;我一直认为，基层中的类似的一小撮人，很可能是共产主义事业最紧迫的敌人，相比网上那些散布言论的身份不明人员，这些在底层用尽各种方法来降低广大人民群众的体验的人，才是最需要整风的。&lt;/p&gt;
&lt;p&gt;我害怕的，是自己的信仰被一小撮这样的人掌握在手中，用各种各样美好的理由和说辞来实现一些其他的目的。&lt;/p&gt;
&lt;p&gt;我害怕的，是如果战争来临，当我和同伴们一起慷慨赴国难的时候，这样妆容精致的美人永远只会安逸地迎接最终的胜利者，成为永远的赢家。&lt;/p&gt;</content><category term="Story"></category></entry><entry><title>我想活下去</title><link href="/wo-xiang-huo-xia-qu.html" rel="alternate"></link><published>2017-05-05T11:20:00+08:00</published><updated>2017-05-05T11:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-05-05:/wo-xiang-huo-xia-qu.html</id><summary type="html">&lt;p&gt;昨天，2017 年 5 月 4 日，是青年节，也是一次相当严重的雾霾污染天气。
我看到好多人都跟我一样纪念当年的进步先辈，看到现在的社会建设，感到由衷欣慰，笑得张开了嘴。
然后开始咳嗽，咽喉疼痛，眼睛刺痛。&lt;/p&gt;
&lt;p&gt;我随手打开了手机搜了一下，虽然其他人还在讨论学术，我走神了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;中国环境监测总站05月04日09时更新空气质量指数:500(严重污染)
北京空气质量实时数据 (24小时趋势图) 更新时间:2017-05-04 09:00
&lt;img alt="" src="http://cms-bucket.nosdn.127.net/catchpic/9/95/950db96e9cb0882d8a43e4b1c081312e.png?imageView&amp;amp;thumbnail=550x0"&gt;
北京空气质量历史数据 (过去10天趋势图) 更新时间:2017-05-04 09:00
&lt;img alt="" src="http://cms-bucket.nosdn.127.net/catchpic/f/fa/fad26a3a47503190f54bbeb59faba414.png?imageView&amp;amp;thumbnail=550x0"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我能感觉到自己的眼睛开始逐渐刺痛，咽喉开始感觉到一股莫名的燥热，喘息觉得逐渐地越来越吃力。&lt;/p&gt;
&lt;p&gt;是的，我是一个“完蛋又可恶”的敏感体质者，我的呼吸道等多重系统都非常敏感又脆弱，社会达尔文主义的流氓大可以称我为“劣质的淘汰品”。&lt;/p&gt;
&lt;p&gt;然而尼玛体质敏感不是我主观意愿决定的对不对？&lt;/p&gt;
&lt;p&gt;我真的不想活在空气污染里，更不想这么死掉。&lt;/p&gt;
&lt;p&gt;我还想每个月领取国家的 1500 元人民币的博士补助 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;昨天，2017 年 5 月 4 日，是青年节，也是一次相当严重的雾霾污染天气。
我看到好多人都跟我一样纪念当年的进步先辈，看到现在的社会建设，感到由衷欣慰，笑得张开了嘴。
然后开始咳嗽，咽喉疼痛，眼睛刺痛。&lt;/p&gt;
&lt;p&gt;我随手打开了手机搜了一下，虽然其他人还在讨论学术，我走神了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;中国环境监测总站05月04日09时更新空气质量指数:500(严重污染)
北京空气质量实时数据 (24小时趋势图) 更新时间:2017-05-04 09:00
&lt;img alt="" src="http://cms-bucket.nosdn.127.net/catchpic/9/95/950db96e9cb0882d8a43e4b1c081312e.png?imageView&amp;amp;thumbnail=550x0"&gt;
北京空气质量历史数据 (过去10天趋势图) 更新时间:2017-05-04 09:00
&lt;img alt="" src="http://cms-bucket.nosdn.127.net/catchpic/f/fa/fad26a3a47503190f54bbeb59faba414.png?imageView&amp;amp;thumbnail=550x0"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我能感觉到自己的眼睛开始逐渐刺痛，咽喉开始感觉到一股莫名的燥热，喘息觉得逐渐地越来越吃力。&lt;/p&gt;
&lt;p&gt;是的，我是一个“完蛋又可恶”的敏感体质者，我的呼吸道等多重系统都非常敏感又脆弱，社会达尔文主义的流氓大可以称我为“劣质的淘汰品”。&lt;/p&gt;
&lt;p&gt;然而尼玛体质敏感不是我主观意愿决定的对不对？&lt;/p&gt;
&lt;p&gt;我真的不想活在空气污染里，更不想这么死掉。&lt;/p&gt;
&lt;p&gt;我还想每个月领取国家的 1500 元人民币的博士补助。
我还想继续翻译各种我认为很有趣味和意义的课程。
我还想刚写完一篇文章准备润色好发出去参与更大规模的学术讨论。
我还想毕业之后赶紧找个博士后站点之后生个宝宝来一点点看着他长大。
我还想赚点钱让媳妇休息一下，也让爸妈和岳父岳母都不用再操劳。&lt;/p&gt;
&lt;p&gt;我刚刚才三十岁，我还想再活七十年八十年。
昨晚骑着自行车回来的路上，虽然我戴着 N95 的口罩却依然异常痛苦。
感觉似乎自己就这样下去可能很快就死掉了。。。&lt;/p&gt;
&lt;p&gt;而我的媳妇每天上下班更是奔波在公交和地铁之间，我每次想到她都觉得很对不住她，因为我还在读书，几乎没有任何收入，家里的开销都靠她辛辛苦苦讲课的收入。&lt;/p&gt;
&lt;p&gt;还好我回到了家，打开了空气净化器，但是空气净化器报警了。于是我拆下旧的滤芯，来换上新的。&lt;/p&gt;
&lt;p&gt;当然我习惯性来拍照了。
实际上眼前这种景象已经不能震撼我了，我在几年前就开始每次都习惯这种情况了。&lt;/p&gt;
&lt;p&gt;不过我记不清这个滤芯是1月换的还是2月换的了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Air.jpg"&gt;
空气净化器滤芯的颜色对比。
我遇到过无数人跟我说这点污染没什么，但是如果他们自己把这些黑色的东西吸取进入肺中，还会这么说么？&lt;/p&gt;
&lt;p&gt;我的屋里有两台空气净化器7×24小时开动，窗户密封通过空调新风系统进行换气循环。我几乎从来没在污染的天气开过窗户，这里的净化器滤芯尚且如此。&lt;/p&gt;
&lt;p&gt;那么大家想象一下，你开着窗户进雾霾的办公室会什么样？&lt;/p&gt;
&lt;p&gt;强迫青少年雾霾天气跑步又是什么样？&lt;/p&gt;
&lt;p&gt;没有任何保护措施每天开窗上课的高校教室又什么样？&lt;/p&gt;
&lt;p&gt;当然，我这个净化器滤芯的功耗、风速、使用时间等等都没有任何定量，所以必然不能作为科学实验来解读。甚至我推测可能有洗地之徒会说假如时间足够长，这些污染物分批多次进入人体就可以代谢排出去等等。&lt;/p&gt;
&lt;p&gt;总之我们不能指望这世界上的无耻之徒，他们总要为丑恶的事物辩护的。&lt;/p&gt;
&lt;p&gt;我想我们应该做的是保护自己。&lt;/p&gt;
&lt;p&gt;所以，同学们，你们是否有考虑要求学校在教室中安空气净化器并且至少不在强雾霾天开窗户？&lt;/p&gt;
&lt;p&gt;然后，老师们，你们是否有想到自己以及子女也可能受到了污染的伤害，或者至少要求学校给办公室安放空气净化器？&lt;/p&gt;
&lt;p&gt;最后，每一个人，哪怕你是坚定的洗地之徒，哪怕你有多么的无耻无底线，那是否要尊重他人保护自身生命健康安全的最基本的权利？&lt;/p&gt;
&lt;p&gt;是的，治理雾霾我没出什么力，因为我不会开汽车，也没有直接烧煤，更不控制某家工厂的排放量。所以我只能保护我自己，戴口罩，开净化器。&lt;/p&gt;
&lt;p&gt;那么，保护自己有错么？如果没有，大家是否应该一起行动起来保护自己？&lt;/p&gt;</content><category term="Work"></category></entry><entry><title>笨蛋徐阶的故事</title><link href="/ben-dan-xu-jie-de-gu-shi.html" rel="alternate"></link><published>2017-04-22T00:00:00+08:00</published><updated>2017-04-22T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-22:/ben-dan-xu-jie-de-gu-shi.html</id><summary type="html">&lt;p&gt;本文内容是对&lt;a href="http://data.book.hexun.com/chapter-1026-2-22.shtml"&gt;当年明月所写的徐阶的觉醒(7)&lt;/a&gt;的拙劣模仿，侵删。&lt;/p&gt;
&lt;p&gt;徐阶想不通，他忿忿不平了，他出离愤怒了，这个圈子怎么会是这个样子！
　　它不是民间所传言的那个知识殿堂，更不是自由讨论交流分享的象牙塔，这是一个灰蒙蒙的小圈子，所有的人最为关心的，只是自己的名利得失。
　　所谓批判性思维，所谓自由思考，在那些慵懒又精明的同侪心中，统统归结为两个字——幼稚。&lt;/p&gt;
&lt;p&gt;绝望的情绪弥漫在徐阶的心中，他突然发现，自己三十多年所信奉的人类自由、公开透明的处事原则原来竟然被人认为是毫无用处，连烧钱水文章的几个人生赢家都比不了，兼济天下、探索真理？真是笑话！&lt;/p&gt;
&lt;p&gt;徐阶终于遇到了他人生中的最大危机——信仰的危机，多年所学已然无用，世上还有什么东西可以相信？可以坚持！？&lt;/p&gt;
&lt;p&gt;然而他最终没有放弃，因为他还有第二个选择——良知之学，知行合一。
　　我的一位地学专业毕业的好朋友曾经这样对我说：学校里不应该开数学、计算机等课程了，因为学生学完就扔了甚至不学，没什么卵用。&lt;/p&gt;
&lt;p&gt;这是一句至理名言。作为这个世界上最为抽象的智慧以及这种智慧的最广泛的应用手段，数学和计算机是无数前人一生思考和探索的结晶，他们吃过许多亏，受过许多苦，才最终将其浓缩为代码上的短短数行。&lt;/p&gt;
&lt;p&gt;一个浮躁的青年同行是不会懂得这些的，他们太自大，太自卑 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;本文内容是对&lt;a href="http://data.book.hexun.com/chapter-1026-2-22.shtml"&gt;当年明月所写的徐阶的觉醒(7)&lt;/a&gt;的拙劣模仿，侵删。&lt;/p&gt;
&lt;p&gt;徐阶想不通，他忿忿不平了，他出离愤怒了，这个圈子怎么会是这个样子！
　　它不是民间所传言的那个知识殿堂，更不是自由讨论交流分享的象牙塔，这是一个灰蒙蒙的小圈子，所有的人最为关心的，只是自己的名利得失。
　　所谓批判性思维，所谓自由思考，在那些慵懒又精明的同侪心中，统统归结为两个字——幼稚。&lt;/p&gt;
&lt;p&gt;绝望的情绪弥漫在徐阶的心中，他突然发现，自己三十多年所信奉的人类自由、公开透明的处事原则原来竟然被人认为是毫无用处，连烧钱水文章的几个人生赢家都比不了，兼济天下、探索真理？真是笑话！&lt;/p&gt;
&lt;p&gt;徐阶终于遇到了他人生中的最大危机——信仰的危机，多年所学已然无用，世上还有什么东西可以相信？可以坚持！？&lt;/p&gt;
&lt;p&gt;然而他最终没有放弃，因为他还有第二个选择——良知之学，知行合一。
　　我的一位地学专业毕业的好朋友曾经这样对我说：学校里不应该开数学、计算机等课程了，因为学生学完就扔了甚至不学，没什么卵用。&lt;/p&gt;
&lt;p&gt;这是一句至理名言。作为这个世界上最为抽象的智慧以及这种智慧的最广泛的应用手段，数学和计算机是无数前人一生思考和探索的结晶，他们吃过许多亏，受过许多苦，才最终将其浓缩为代码上的短短数行。&lt;/p&gt;
&lt;p&gt;一个浮躁的青年同行是不会懂得这些的，他们太自大，太自卑，他们或许能够在野外定名出玄武质砂岩，却不相信有人可能在显微镜下能真正给出那些石头的来龙去脉。所以他们虽然手握样品和数据，却只是照做的机器，满怀热情地临摹前人的各种手段，也不管是否理解就上了流水线。&lt;/p&gt;
&lt;p&gt;徐阶大致就是这样一个人，他也不懂，虽然他了解地学的各种内容，却并不知道该怎样去做。至于他对十年前在校训上看到的四个字,则更是不得要领。&lt;/p&gt;
&lt;p&gt;什么是求真务实？答：就是求真并且务实。评：废话。&lt;/p&gt;
&lt;p&gt;徐阶反复思考着这四个字，却始终摸不着头脑，各种老前辈谈起这几个字的时候那郑重肃穆的表情依然浮现在他的眼前，他肯定这些老先生不是在拿大家开涮。&lt;/p&gt;
&lt;p&gt;但问题是他怎么都看不出这四个字有什么作用，难道像念咒一样把它念出来，岩石类型就能自动显示出来，构造形迹就都自觉改变成高亮颜色，各种鬼知道是否被人为调整过的数据就能跳跃起来唱歌？所谓大地之学，所谓光明之学，在这个现实的世界中，又有何用处？&lt;/p&gt;
&lt;p&gt;于茫茫黑暗之中，光明何处去寻？！&lt;/p&gt;
&lt;p&gt;百思不得其解的徐阶沉默了，在同学们的无视旁观和不屑嘲讽中，他开始了漫长的思考。&lt;/p&gt;
&lt;p&gt;在痛苦的思索中，他终于发现，自己可能犯了一个根本的错误，他坚守三十年的信念和原则是存在很大问题的。这套传统道德体系或许是对的，却并无用处。真正决定大多数人行为的，是另一样东西。
　　只要找到这样东西，就能解决所有的难题。于是徐阶决定，否定自己所有的过往，把一切推倒重来，去找到那样东西。&lt;/p&gt;
&lt;p&gt;探索没有用，批判精神没有用，交流讨论也没有用，这玩意除了让人昏昏欲睡外，并没有任何作用。&lt;/p&gt;
&lt;p&gt;在剥除这个丑恶世界的所有伪装之后，徐阶终于找到了最后的答案——利益。
　　胸怀天下、舍生取义的绝对道德确实是存在的，可惜的是这玩意太高级，付出的代价太高，从古自今，除了个别先进分子外，大多数同学可能都不愿消费。&lt;/p&gt;
&lt;p&gt;利益，只有充足的利益，才有驱动人们的魔力，这就是这个世界的真实面目，极其的残酷，却异常的真实。&lt;/p&gt;
&lt;p&gt;在这个残酷的现实面前，徐阶终于明白了求真务实的真意，无论有多么创新的思想和革新性的手段，要让人接受，还必须懂得两个字——妥协。只有妥协，只有不触碰任何同行的满足感、成就感，只有不能让他们面对大家都需要不断学习和提高的这一现实，也只有不去进行什么信息关联度的提升和方法手段定量化程度的提高，而是要互相捧，多强调各地的独特性和复杂性，多强调新方法新工具的不足以进行否定，多强调老模型的经典以进行推崇，百般努力去证明进步是困难的所以没有必要去尝试进步，才能适应这个死水一滩的圈子。&lt;/p&gt;
&lt;p&gt;于是在醒悟的那一天，徐阶丢弃了他曾信奉几十年的准则和理念，面对那些昏沉欲睡浑浑噩噩的同行，作出了一个司空见惯的决定。&lt;/p&gt;
&lt;p&gt;不久之后，徐阶的同学们惊奇地发现，几乎在一夜之间，那个曾经兴奋地高谈阔论成矿作用过程中信息的最大限度提取和不同维度的成矿相关信息的比对与整合的徐阶突然退隐江湖，老老实实地转了行。&lt;/p&gt;
&lt;p&gt;在纳闷和兴奋的情绪交织中，他们向长者通报了这个好消息，然而出乎他们意料的是，长者并没有丝毫的惊讶和喜悦，似乎这早在他预料之中。毕竟他都在这个圈子经历了这么多年，又有什么问题是他没看出来的呢？只是他要么没什么办法来解决，要么是对自己能折腾出来的波澜没有信心罢了。&lt;/p&gt;
&lt;p&gt;毕竟你们这些年轻人啊，naive，simple，你们现在想到的问题，长者当年早都想到过的。他五十年没能解决，你们三十年又能怎样？指出问题对于解决问题意义并不大，因为老一辈人都知道这些问题的存在，他们并不比年轻的这一代笨，而且从考学的难度和筛选比例来看，老一辈人远远比现在年轻的学生们更称得上是精英。他们都面对这些问题没有奈何，只是结成了各自松散的帮派来维持生计。你们这群年轻人，看到了几个小纰漏就以为发现了大问题，就觉得愤世嫉俗要去改新革命，简直是笑话。你们看到的想到的谈论的那些个什么科学问题，那算什么？真正决定一个个项目去留以及一群群从业人员生计的，还是人际关系。而徐阶呢？不会喝酒拼酒，在酒席上动不动就端着盘子开吃；不会看人眉眼高低，自己想说什么说什么；不会顺情说好话，看着别人拍马都要吐；不会堆砌数据水文章，非要写起码能让自己信服并且不觉得丢人的文字。这简直就是一个彻头彻尾的笨蛋。&lt;/p&gt;</content><category term="Story"></category><category term="Discuss"></category><category term="Communicate"></category><category term="University"></category><category term="Scholar"></category></entry><entry><title>这些年见过的丑恶</title><link href="/zhe-xie-nian-jian-guo-de-chou-e.html" rel="alternate"></link><published>2017-04-22T00:00:00+08:00</published><updated>2017-04-22T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-22:/zhe-xie-nian-jian-guo-de-chou-e.html</id><summary type="html">&lt;p&gt;我现在三十岁，见识的世界十分有限。然而在这相当有限的见识中，却也遇到过很多五彩缤纷的事物。&lt;/p&gt;
&lt;p&gt;比如丑恶。&lt;/p&gt;
&lt;p&gt;幼儿园时期常见到的一种丑恶，是比丑心理。
具体情况例如：小朋友 A 在墙脚嘘嘘被老师批评，然后 A 表示很不服气地说：“小朋友 B 还在门口拉粑粑呢！你为什么只管我嘘嘘呢？！”
后来我发现这可能是一种比较常见的现象，为了方便抨击，我就胡乱称之为“比丑心理”。这种情景经常能够看得见，每当出现某些敏感的或者不敏感的丑闻的时候，总会有一些智力层次和业务水平都很有提升空间的网络舆论相关行业的从业者，会说：“XXX还不如这里呢！”“XXX国情景更差呢！”就如同那个在墙脚嘘嘘的小朋友 A 一样，他们有这样一种逻辑，就是似乎只要找到比自己更加丑恶的存在，那么就可以为自己的丑恶来辩白，证明自己的丑恶是合理的可以谅解的。&lt;/p&gt;
&lt;p&gt;小学时期常见到的一种丑恶，是故意作恶。
具体情况例如：小朋友 A 长大了，成为小同学 A。 某天 A 看到同学 B 的一双新鞋子很干净，就要上去踩一脚，然后辩解称 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;我现在三十岁，见识的世界十分有限。然而在这相当有限的见识中，却也遇到过很多五彩缤纷的事物。&lt;/p&gt;
&lt;p&gt;比如丑恶。&lt;/p&gt;
&lt;p&gt;幼儿园时期常见到的一种丑恶，是比丑心理。
具体情况例如：小朋友 A 在墙脚嘘嘘被老师批评，然后 A 表示很不服气地说：“小朋友 B 还在门口拉粑粑呢！你为什么只管我嘘嘘呢？！”
后来我发现这可能是一种比较常见的现象，为了方便抨击，我就胡乱称之为“比丑心理”。这种情景经常能够看得见，每当出现某些敏感的或者不敏感的丑闻的时候，总会有一些智力层次和业务水平都很有提升空间的网络舆论相关行业的从业者，会说：“XXX还不如这里呢！”“XXX国情景更差呢！”就如同那个在墙脚嘘嘘的小朋友 A 一样，他们有这样一种逻辑，就是似乎只要找到比自己更加丑恶的存在，那么就可以为自己的丑恶来辩白，证明自己的丑恶是合理的可以谅解的。&lt;/p&gt;
&lt;p&gt;小学时期常见到的一种丑恶，是故意作恶。
具体情况例如：小朋友 A 长大了，成为小同学 A。 某天 A 看到同学 B 的一双新鞋子很干净，就要上去踩一脚，然后辩解称：“新鞋子总要踩一踩才好穿，这是一种优良传统。”
这种现象我后来遇到的不多。不过听闻在中原某些文化昌盛源远流长的文化大省中存在闹伴娘闹洞房等很神奇的民俗，甚至被报道出存在各种按照社会普遍道德难以认同的所谓“优良传统”。我发现那些为不文明行为辩解的人就和小朋友 A 一样，故意在作恶，而且还用各种借口来试图建立自己作恶的合理性，同时还身体力行地保卫这种维护作恶的所谓“传统”，衍生更多的恶。&lt;/p&gt;
&lt;p&gt;中学时期常见到的一种丑恶，是极端自私。
具体情况例如：小同学 A 又长大了，进入了中学成了同学 A。某天冬天天气很冷，屋里暖气比较热，A 穿得比较多，觉得热了，他并不脱下自己的外套，而是不顾其他同学的感受，打开窗户放进冷气，然后辩解称：“我感到特别热，所以就开窗户。你们觉得冷，为什么不多穿衣服呢？”
这种现象后来遇到的特别多。走在学校里经常能看到各种人模狗样的龟孙在他人身边吸烟，不听任何阻拦甚至气焰嚣张。这类人往往是各种丑恶现象的集中体现，他们身上还有各种多种多样的丑恶亟待发掘和保护。&lt;/p&gt;
&lt;p&gt;大学时期常见到的一种丑恶，是打消斗志。
具体情况例如：那个同学 A 进入了大学，也成个大学生。每天他面对着其他同学做各种事，都要在各个阶段各个角度来去打消别人的斗志。比如经常说：“你打篮球有什么用，又不能去NBA。”“你背单词有什么用，你还能学得有多好？”这种人往往是自己不太喜欢努力，比如懒惰，比如自卑等等，但是同时又看不得别人努力，所以一定要长期在各个方面传播这种负面情绪，专门去打消他人的积极性。一旦成功了，他可能会得到莫大的成就感和满足感，因为终于又有一个人没比自己强到哪去；如果没成功，而对方努力之后并没有太大的成功，他就会沾沾自喜道：“你看你不听我的，听我的早点放弃好了吧？”；而如果对方没理这孙子而是继续努力有所作为，他就可能避而不谈，或者说一些对方的缺点短处，以此来表达：“当初我告诉你要注重其他方面的发展而你不听，现在你就发展得不够完整吖！”
这种是最大的丑恶。因为一般情况大家都甚至很难发现其实这是一种丑恶，包括作恶者本身也根本不会意识到自己的这种丑恶。
这种现象我经常能遇到，比如我想用计算机编程语言来实现一个地质学上某些数据的辅助评估模块，就从零开始学习和翻译编程语言教程，继而写出来一些基础的计算和分类的小公举，然后又进而学习和翻译一些机器学习相关的基础知识和算法。而我身边的一些同学中，就有人提出这种丑恶的问题：“别人都做过了，你为什么还要做？”“你弄着东西有什么用？”&lt;/p&gt;
&lt;p&gt;我本来是想详细跟着解释一下我这个整套的设计思路和想法以及行动路线和现在的进展步骤的。后来我才想到，面对丑恶，应该怼回去怼死他才行。&lt;/p&gt;
&lt;p&gt;为什么别人做过了，就不能再去尝试呢？别人都已经学会走路了，那么处于趴着状态还不会走路的人就不应该再去学习走路继而去奔跑了么？别人都已经拿到过奥运冠军了，为什么还是有人要继续训练和尝试挑战世界纪录呢？别人都能有自己的贡献和对他人提供的帮助了，为什么我们还要去做这些事情而不是躺在那里做伸手党呢？别人都已经在活着了，你又为什么还要活下去？&lt;/p&gt;
&lt;p&gt;我有一万句MMP，但是这种作恶的人不值得对他说任何话。&lt;/p&gt;
&lt;p&gt;所以我会选择像对待所有狗人一样，遇到这样的人，就对他说：嗯，你是对的。&lt;/p&gt;</content><category term="Story"></category><category term="Discuss"></category><category term="Communicate"></category><category term="University"></category><category term="Scholar"></category></entry><entry><title>Why I translate English books into Chinese</title><link href="/why-i-translate-english-books-into-chinese.html" rel="alternate"></link><published>2017-04-21T00:00:00+08:00</published><updated>2017-04-21T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-21:/why-i-translate-english-books-into-chinese.html</id><summary type="html">&lt;h1&gt;为何我要翻译书籍和学习资料呢？&lt;/h1&gt;
&lt;p&gt;我曾经翻译过一些&lt;a href="https://zhuanlan.zhihu.com/p/24644499"&gt;东西&lt;/a&gt;。
虽然我的翻译水平很差，技术水平也很差，但一直还都保持着这个习惯。
偶尔总是陆陆续续地翻译一些自己觉得很喜欢的学习资料。
比如&lt;a href="https://zhuanlan.zhihu.com/p/26424530"&gt;我在翻译中文版的斯坦福大学的CS229的讲义&lt;/a&gt;以及&lt;a href="https://zhuanlan.zhihu.com/p/26397099"&gt;杜克大学用Python讲计算机统计学的STA663课程的中文翻译&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然后我经常遇到一些朋友提出类似这样的问题：&lt;/p&gt;
&lt;p&gt;“为什么要翻译？”
“英文版不好么？”
“你的英文水平，直接看原版不够么？”&lt;/p&gt;
&lt;p&gt;其实这类问题就不好回答了。
怎么说呢？
如果是前些年，看原版应该还费点力气。目前单就阅读和简单的理解来说，看原版基本是没有任何压力的。&lt;/p&gt;
&lt;p&gt;在刚刚开始翻译 &lt;a href="http://lgithub.com/cycleuser/ThinkPython-CN"&gt;ThinkPython&lt;/a&gt; 的时候，一些术语对我来说还比较难，甚至是一些编程方面的基础内容，我都还很生疏。
然后后来翻译 &lt;a href="http://github.com/cycleuser/Kivy-CN"&gt;Kivy 中文开发指南&lt;/a&gt;的时候，由于有之前的经历，一些基础的编程方面的术语我都大概了解了，所以翻译起来也不那么吃力了，不过有的内容还是初次接触，所以还是有各种地方翻译得很不理想。&lt;/p&gt;
&lt;p&gt;所以，翻译的这个过程首先是一个学习的过程，某种程度类似费曼教学法，就好比以教促学，要表达清楚的前提是要理解透彻。当然，这两方面我还都没做到，但我依然在努力。&lt;/p&gt;
&lt;p&gt;上面说的这些是现实原因，实际上还有更深层次的一种原因。&lt;/p&gt;
&lt;p&gt;那就是我的信仰。&lt;/p&gt;
&lt;p&gt;往高大上了说，我去做这类事情是因为我的共产主义信仰 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;为何我要翻译书籍和学习资料呢？&lt;/h1&gt;
&lt;p&gt;我曾经翻译过一些&lt;a href="https://zhuanlan.zhihu.com/p/24644499"&gt;东西&lt;/a&gt;。
虽然我的翻译水平很差，技术水平也很差，但一直还都保持着这个习惯。
偶尔总是陆陆续续地翻译一些自己觉得很喜欢的学习资料。
比如&lt;a href="https://zhuanlan.zhihu.com/p/26424530"&gt;我在翻译中文版的斯坦福大学的CS229的讲义&lt;/a&gt;以及&lt;a href="https://zhuanlan.zhihu.com/p/26397099"&gt;杜克大学用Python讲计算机统计学的STA663课程的中文翻译&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然后我经常遇到一些朋友提出类似这样的问题：&lt;/p&gt;
&lt;p&gt;“为什么要翻译？”
“英文版不好么？”
“你的英文水平，直接看原版不够么？”&lt;/p&gt;
&lt;p&gt;其实这类问题就不好回答了。
怎么说呢？
如果是前些年，看原版应该还费点力气。目前单就阅读和简单的理解来说，看原版基本是没有任何压力的。&lt;/p&gt;
&lt;p&gt;在刚刚开始翻译 &lt;a href="http://lgithub.com/cycleuser/ThinkPython-CN"&gt;ThinkPython&lt;/a&gt; 的时候，一些术语对我来说还比较难，甚至是一些编程方面的基础内容，我都还很生疏。
然后后来翻译 &lt;a href="http://github.com/cycleuser/Kivy-CN"&gt;Kivy 中文开发指南&lt;/a&gt;的时候，由于有之前的经历，一些基础的编程方面的术语我都大概了解了，所以翻译起来也不那么吃力了，不过有的内容还是初次接触，所以还是有各种地方翻译得很不理想。&lt;/p&gt;
&lt;p&gt;所以，翻译的这个过程首先是一个学习的过程，某种程度类似费曼教学法，就好比以教促学，要表达清楚的前提是要理解透彻。当然，这两方面我还都没做到，但我依然在努力。&lt;/p&gt;
&lt;p&gt;上面说的这些是现实原因，实际上还有更深层次的一种原因。&lt;/p&gt;
&lt;p&gt;那就是我的信仰。&lt;/p&gt;
&lt;p&gt;往高大上了说，我去做这类事情是因为我的共产主义信仰，翻译和分享知识，无偿分享自己的劳动成果，这算是无私奉献，是一个共产主义者的本分。&lt;/p&gt;
&lt;p&gt;往小了说，我现在这些做法的另一方面原因是由于童年的阴影，类似某种心理创伤的后遗症之类的。&lt;/p&gt;
&lt;p&gt;当年我十几岁的时候，别说英文书籍和资料了，连中文书籍都买不到，后来去了镇子和县城读书，在书店看到很多中文的书也买不起。我就去书店里面挑自己喜欢的书来抄，又被管理人员赶了出去。&lt;/p&gt;
&lt;p&gt;一直到我二十岁的时候，来了北京，但是英语还很次，所以也看不了英文书，并且也不知道该看哪些，一头雾水。所以当时也还只能看中文书，而学校图书馆里面的又都是泛黄的旧书满都是过时的各种“从入门到放弃”以及“叹号墙”之类的。&lt;/p&gt;
&lt;p&gt;所以就学英语呗，慢慢学。终于我三十岁了，然而英语也还是挺差的，不过好歹能看CS方面的一般书籍了，而且逐渐地还越发流畅无压力了。&lt;/p&gt;
&lt;p&gt;这时候，我就会想到自己当年的无奈，无助，无人问津。&lt;/p&gt;
&lt;p&gt;所以我如今在阅读的同时，会尽量抽时间来翻译，希望能帮助到当前这个时代中跟当年的我类似需要一点点帮助的人。
有时也幻想，如果当年能有人稍微帮一帮我该有多好，可惜那时候我没有互联网，没有计算机，没有如今的各种。&lt;/p&gt;
&lt;p&gt;1996年，因为价格太贵，我退回了学校里订购的 12 元的新华字典，让我母亲帮我从乡里面低价买来一本盗版的现代汉语词典。在接下来的十年里，这本现代汉语词典是我的启蒙读物，然而那时候我没有相机等拍照设备，所以没有照片。&lt;/p&gt;
&lt;p&gt;2006年，我在县城里面的新华书店查找关于斯宾塞的书籍，并且抄写一些鲁迅作品中的片段，然后被工作人员赶了出去。后来去所就读中学的老师办公室用他的电脑，发现了搜索引擎和网络论坛这些新鲜的事物。&lt;/p&gt;
&lt;p&gt;2016年8月14日，我使用Kindle 多看 1000 天整的日子，我一直保留着下面的这张图片作为纪念。我用它看过了上千的书籍和文献，让我有了自己前所未有的收获，激发了我各种各样的思路和想法，指导了我做各种各样的事情。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="img/Reading.jpg"&gt;&lt;/p&gt;
&lt;p&gt;所以为什么我要翻译东西然后无偿分享给所有人呢？
那是一个二十年后的我希望能跨越时空去帮助二十年前的我。&lt;/p&gt;
&lt;p&gt;这就和我在本科时代就经常在路上帮助迷路之人或者给同学辅导课程一样，只是我的一种选择，也是我的一种习惯。&lt;/p&gt;
&lt;p&gt;我想要这样做，仅此而已。&lt;/p&gt;</content><category term="Story"></category><category term="Discuss"></category><category term="Communicate"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Introduction of STA663</title><link href="/introduction-of-sta663.html" rel="alternate"></link><published>2017-04-16T00:00:00+08:00</published><updated>2017-04-16T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-16:/introduction-of-sta663.html</id><summary type="html">&lt;h1&gt;基于 Python 的计算机统计学&lt;/h1&gt;
&lt;h1&gt;简介&lt;/h1&gt;
&lt;p&gt;这一套课件实际上是一些相当粗糙的讲座笔记的草稿，基于 IPython notebook ，这门课程从 2015 年春季开始的，针对硕士生的统计学课程，&lt;a href="https://stat.duke.edu/courses/statistical-computing-and-computation"&gt;课程地址原本在这里，但是这个链接实际上已经不能访问了&lt;/a&gt;。译者注：现在的链接&lt;a href="http://people.duke.edu/~ccc14/sta-663/index.html"&gt;可能应该是在这个链接&lt;/a&gt;。这个课程主要介绍的内容是在&lt;strong&gt;优化&lt;/strong&gt;和&lt;strong&gt;模拟&lt;/strong&gt;这两方面的各种算法的开发，这些内容也是计算统计学的核心内容。各种各样的算法和数据集的复杂度都会逐渐增加，（一维 -&amp;gt; 多维，固定 -&amp;gt; 自适应，线性 -&amp;gt; 并行 -&amp;gt; 大规模并行，少量数据 -&amp;gt; 巨量数据），这是为了让学这门课的学生能够掌握并联系下面这些内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;练习可重现的分析（reproducible analysis）&lt;/li&gt;
&lt;li&gt;掌握基本的数据管理和处理技能&lt;/li&gt;
&lt;li&gt;使用 Python 语言来进行统计计算&lt;/li&gt;
&lt;li&gt;使用数学和统计学的链接库来提高效率&lt;/li&gt;
&lt;li&gt;能够理解和优化线性代码（serial code）&lt;/li&gt;
&lt;li&gt;能够掌握不同的并行开发范式并高效利用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;算法上，主要集中在以下两方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优化（Optimization …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;基于 Python 的计算机统计学&lt;/h1&gt;
&lt;h1&gt;简介&lt;/h1&gt;
&lt;p&gt;这一套课件实际上是一些相当粗糙的讲座笔记的草稿，基于 IPython notebook ，这门课程从 2015 年春季开始的，针对硕士生的统计学课程，&lt;a href="https://stat.duke.edu/courses/statistical-computing-and-computation"&gt;课程地址原本在这里，但是这个链接实际上已经不能访问了&lt;/a&gt;。译者注：现在的链接&lt;a href="http://people.duke.edu/~ccc14/sta-663/index.html"&gt;可能应该是在这个链接&lt;/a&gt;。这个课程主要介绍的内容是在&lt;strong&gt;优化&lt;/strong&gt;和&lt;strong&gt;模拟&lt;/strong&gt;这两方面的各种算法的开发，这些内容也是计算统计学的核心内容。各种各样的算法和数据集的复杂度都会逐渐增加，（一维 -&amp;gt; 多维，固定 -&amp;gt; 自适应，线性 -&amp;gt; 并行 -&amp;gt; 大规模并行，少量数据 -&amp;gt; 巨量数据），这是为了让学这门课的学生能够掌握并联系下面这些内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;练习可重现的分析（reproducible analysis）&lt;/li&gt;
&lt;li&gt;掌握基本的数据管理和处理技能&lt;/li&gt;
&lt;li&gt;使用 Python 语言来进行统计计算&lt;/li&gt;
&lt;li&gt;使用数学和统计学的链接库来提高效率&lt;/li&gt;
&lt;li&gt;能够理解和优化线性代码（serial code）&lt;/li&gt;
&lt;li&gt;能够掌握不同的并行开发范式并高效利用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;算法上，主要集中在以下两方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优化（Optimization）&lt;ul&gt;
&lt;li&gt;牛顿-拉普森算法（Newton-Raphson，NR算法），函数式编程和向量化&lt;/li&gt;
&lt;li&gt;积分算法（Quadrature），自适应方法&lt;/li&gt;
&lt;li&gt;梯度下降法（Gradient descent），用于多个变量的情况&lt;/li&gt;
&lt;li&gt;广义线性模型算法（Solving GLMs），多变量 + C/C++  的接口&lt;/li&gt;
&lt;li&gt;期望最大化算法，多变量 + 有限混合模型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;仿真和重采样（Simulation and resampling0&lt;ul&gt;
&lt;li&gt;Bootstrap法，并行编程的基础&lt;/li&gt;
&lt;li&gt;"Map（映射）"和"Reduce（归约），适用于针对大规模数据的统计&lt;/li&gt;
&lt;li&gt;蒙特卡罗模拟算法（Monte Carlo simulations），更大规模的并行编程&lt;/li&gt;
&lt;li&gt;MCMC算法（马尔可夫链蒙特卡罗(Markov Chain Monte Carlo)），多重采样，使用 GPU 进行编程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我（原作者）相信在 Duke 大学本专业内，这应该是第一次基于 Python 来讲的这门课，所以这门课会非常有意思。这也意味着教这门课需要准备很多新内容，我（原作者）就直接从已有的各种公有领域的 IPython notebook 里面来摘抄了。&lt;/p&gt;</content><category term="Duke"></category><category term="Translation"></category><category term="Lesson"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Job</title><link href="/job.html" rel="alternate"></link><published>2017-04-13T00:00:00+08:00</published><updated>2017-04-13T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-13:/job.html</id><summary type="html">&lt;h1&gt;Python 的前景和学习方向&lt;/h1&gt;
&lt;p&gt;本文整理自我在&lt;a href="https://www.zhihu.com/question/58419367/answer/156913703"&gt;这个问题&lt;/a&gt;里的回答。相比原版回答，结尾部分添加了若干私货。&lt;/p&gt;
&lt;p&gt;Python 在语法上算是比较简单易学，相对其他各种语言，对新手更加友好，学习曲线非常平缓。各种算法用 Python 来实现都相对来说更加简单又易读。&lt;/p&gt;
&lt;p&gt;因此，有一种趋势，就是很多像我这种外行人，开始学习和使用 Python 来实现某些自己行业内的某些用途。所以现在 Python 有很多新制作的各种轮子，深度学习，数理统计，化学计算，量化交易，等等。但像我这样的人往往可能也像我一样，学得很浅，就能凑合着拿一些框架和模块来应对简单的工作，也就可能像我一样不再太深入探索，而觉得自己掌握的基本够用了。&lt;/p&gt;
&lt;p&gt;此外，在涉及到性能敏感的应用场景，Python 则未必能够完美胜任，甚至即便使用 cython 和 pypy 之类的加速，也难以全面实现 C++ 等的运行速度。我的一些前辈高人，在处理遥感相关的数据时还是以 C++ 为主 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Python 的前景和学习方向&lt;/h1&gt;
&lt;p&gt;本文整理自我在&lt;a href="https://www.zhihu.com/question/58419367/answer/156913703"&gt;这个问题&lt;/a&gt;里的回答。相比原版回答，结尾部分添加了若干私货。&lt;/p&gt;
&lt;p&gt;Python 在语法上算是比较简单易学，相对其他各种语言，对新手更加友好，学习曲线非常平缓。各种算法用 Python 来实现都相对来说更加简单又易读。&lt;/p&gt;
&lt;p&gt;因此，有一种趋势，就是很多像我这种外行人，开始学习和使用 Python 来实现某些自己行业内的某些用途。所以现在 Python 有很多新制作的各种轮子，深度学习，数理统计，化学计算，量化交易，等等。但像我这样的人往往可能也像我一样，学得很浅，就能凑合着拿一些框架和模块来应对简单的工作，也就可能像我一样不再太深入探索，而觉得自己掌握的基本够用了。&lt;/p&gt;
&lt;p&gt;此外，在涉及到性能敏感的应用场景，Python 则未必能够完美胜任，甚至即便使用 cython 和 pypy 之类的加速，也难以全面实现 C++ 等的运行速度。我的一些前辈高人，在处理遥感相关的数据时还是以 C++ 为主，大概就是因为这种原因。&lt;/p&gt;
&lt;p&gt;所以总体上看， Python 特点是学的人众多且来源复杂，学起来简单却易学难精，轮子众多但质量良莠不一，且熟悉轮子有时候需要比语言学习更多很多的精力。&lt;/p&gt;
&lt;p&gt;这会导致一种什么情况呢？
会有很多新人试图通过学习 Python 来作为起步的语言，进入计算机相关行业。而人群中往往只有少数人是足够努力的。这就可能会导致在 Python 使用圈子中，低层次甚至像我这种初级水平的超低层次开发者，逐渐增多并且可能会占到多数。&lt;/p&gt;
&lt;p&gt;而且由于像我这种低水平的人对深入探索感到吃力，可能更乐于追捧一些自己在网络上看到的所谓“热点”。比如可能看见某些社交平台上遮天蔽日的各种爬虫相关，就以为 Python 最适合来做这个，对其他方面就不怎么太上心了。再比如，看到某些大号发给新人的转行指南，加之以少数通过努力成功赚到第一桶金的先行者的分享，就也可能痴迷 flask，并以此作为主攻方向。&lt;/p&gt;
&lt;p&gt;这并没有什么问题，这都是人的自由选择，只是这些选择往往建立在跟从的基础上，因为往往没有太多人愿意选择前途未卜的自行探索之路，更愿意遵从同类已探索出来的安全道路。&lt;/p&gt;
&lt;p&gt;这种扎堆的情况会导致某些方面的人满为患，并且在短期内会极大降低 Python 开发者平均的薪酬和业内评价，可能会让市场上产生一种偏见，认为 Python 是外行转行、低水平开发者、低薪酬的代名词。&lt;/p&gt;
&lt;p&gt;注意，作为一名外行的超低水平开发者，并我不是说爬虫和flask代表了低技术水平，只是说聚集的新人太多会容易拉低平均水平。&lt;/p&gt;
&lt;p&gt;那有什么推荐的思路么？还真有。
我建议大家可以考虑一下结合自己的专业，来把 Python 作为一个辅助工具，解决行业内的各种事，而不是扎堆挤进专业的程序员群体去参加人海中的短兵肉搏。这样能发挥自己之前所学，不至于完全从零起步，劣势不会太显著，甚至如果本行的经验比较丰富，还可能会形成某种优势。&lt;/p&gt;
&lt;p&gt;以上就是我对 Python 学习者工作前景的认识，由于自身水平所限，非常粗浅和鄙陋，没有太大参考意义。&lt;/p&gt;
&lt;p&gt;至于可以学习的方向，目前据我所知，有爬虫和数据采集与可视化等的数据方向，flask 和 django 之类的web方向，区块链和加密等相关的数字货币方向，tensorflow 和 pytorch等机器学习方向，用 kivy 或者 pyqt 的跨平台 GUI 开发方向，还有各种结合了学科知识的各种科学计算和实验仿真模拟的方向。&lt;/p&gt;
&lt;p&gt;当然了，说句纯废话：Python 是一门编程语言，虽然有擅长的某些事，也基本能做差不多任何事，所以学习者在使用的时候，完全不必要限制于某几个特定方向。冷静下来，先旁观一下市场，再自己做思考，选择自己想做的，而不是看到招聘网站的广告和培训班的各种宣传就无脑认同而照做。&lt;/p&gt;
&lt;p&gt;正如@董伟明  在 &lt;a href="https://zhuanlan.zhihu.com/p/26149723"&gt;Python 技术分享的乱象中所说的&lt;/a&gt;那样，当前 Python 相关的圈子存在各种各样的奇葩现象。&lt;/p&gt;
&lt;p&gt;最多的就是动不动就万事万物唯有爬虫；
或者就是随便搞来一些盗版电子书分享链接，或者抄来几句笼统的格言警句一样水的东西，堆砌在某些个回答里面，然后结尾放上自己的营销推广；
要么是招聘网站，要么是培训机构，用各种神标题来带节奏，纷纷鼓吹各种转行迅速致富月薪过万走上成功之路等等，来迷惑和煽动新人，带来各种类似成功学一样的信徒氛围。&lt;/p&gt;
&lt;p&gt;乌烟瘴气妖魔鬼怪。&lt;/p&gt;
&lt;p&gt;我想这里要引用我的一位师兄的话：“仰望星空，脚踏实地。”
星空是偶尔看看来辨别方向和天时的，要是每天总抬头那么看，会容易得颈椎病；而脚下的大地是每天都要触碰的，是现在一切的基础和依托，所以得留心看着点，别掉坑里面。
那么怎么留心各种坑呢？
我相信大家的智商，其实只要稍微冷静一下，还是很好筛选一下哪些声音值得听取的，分辨哪些声音背后是铜臭，而哪些声音背后是单纯的分享，这并不会很难。&lt;/p&gt;
&lt;p&gt;而最重要的还不止于此，最重要的是专心学习，付出自己所能给出的最大程度的努力，做了就不能让自己后悔没有足够努力。&lt;/p&gt;</content><category term="Work"></category><category term="Discuss"></category><category term="Communicate"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Push</title><link href="/push.html" rel="alternate"></link><published>2017-04-12T00:00:00+08:00</published><updated>2017-04-12T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-12:/push.html</id><summary type="html">&lt;h1&gt;学习的动力&lt;/h1&gt;
&lt;table&gt;
&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=29822980&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;&lt;table&gt;
&lt;/table&gt;



[这首歌](http://music.163.com/#/song?id=29822980)来自我的同行、偶像、楷模、人生赢家，Randy Marsh先生。



我曾经经历过这样一种阶段，做什么事情都觉得没有什么兴致，缺乏动力，什么都不想做，又莫名其妙地对所有事情都感到特别厌倦和疲惫。

从本科入学的时候就有这个情况。比如某个课程上，老师在前面给推荐了一些文献书籍等等，然后本来我还想着应该看看，可是他要求必须分成若干小组，每个小组必须翻译完毕某一篇文章。当时就没了动力，觉得很没意思，文献翻译得自然很应付，至于理解和思考根本就是扯了，因为读都懒得读进去。

再比如本来想着应该看看哪些文献，提取整理一些数据做个对比啊什么的。然后正好这时候老师找过去给说应该看哪些文章啊，要写一写哪些总结啊，要提出一些什么问题啊。这时候当然要满满诚意地应允下来，一口一个是啊是啊好的好的。然而到了具体动手做的时候，就又没有最开始那么多动力了。

我当时觉得自己真实缺乏动力，考虑对自己严格要求约束一下，弄个什么奖惩机制之类的。


而有的时候我又发现自己很有动力，比如翻译[ Python 教材和 Kivy 文档](https …&lt;/table&gt;</summary><content type="html">&lt;h1&gt;学习的动力&lt;/h1&gt;
&lt;table&gt;
&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=29822980&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;&lt;table&gt;
&lt;/table&gt;



[这首歌](http://music.163.com/#/song?id=29822980)来自我的同行、偶像、楷模、人生赢家，Randy Marsh先生。



我曾经经历过这样一种阶段，做什么事情都觉得没有什么兴致，缺乏动力，什么都不想做，又莫名其妙地对所有事情都感到特别厌倦和疲惫。

从本科入学的时候就有这个情况。比如某个课程上，老师在前面给推荐了一些文献书籍等等，然后本来我还想着应该看看，可是他要求必须分成若干小组，每个小组必须翻译完毕某一篇文章。当时就没了动力，觉得很没意思，文献翻译得自然很应付，至于理解和思考根本就是扯了，因为读都懒得读进去。

再比如本来想着应该看看哪些文献，提取整理一些数据做个对比啊什么的。然后正好这时候老师找过去给说应该看哪些文章啊，要写一写哪些总结啊，要提出一些什么问题啊。这时候当然要满满诚意地应允下来，一口一个是啊是啊好的好的。然而到了具体动手做的时候，就又没有最开始那么多动力了。

我当时觉得自己真实缺乏动力，考虑对自己严格要求约束一下，弄个什么奖惩机制之类的。


而有的时候我又发现自己很有动力，比如翻译[ Python 教材和 Kivy 文档](https://zhuanlan.zhihu.com/p/24644499)的时候，就是自己一直都希望能把这件事做完做好，每次翻译的时候都很有动力。
再比如编写 [GeoPython](https://zhuanlan.zhihu.com/p/25786642) 的时候，遇到不知道如何去实现某些功能的情况，四处搜索和查找资料可以持续几个小时，一直到问题解决。再比如用 Adobe Illustrator 来编辑整理论文用的图件，也能花上几个小时的时间来一点点调整对齐线条和图框等等。面对这些本来很枯燥的事情反而动力澎湃。


后来我去搜索相关的内容，发现好多人都有类似的情况，就是自己本来想做的事情，一旦由他人要求去做，动力就会削弱。貌似是有一个动机转换的过程。
在自己想做一件事的时候，驱动我们做这件事的是内部动机，这种动机持久而强大，会让我们轻松就完成需要高度自律的工作；而一旦存在外界的要求和指示，这种内部动机就转换成了外部动机，就很容易让我们产生厌倦和懈怠了，因为会让我们觉得这是别人要求的，而不是自己主动想去这样做。


所以很多事情都会得到解释了。同门的老师和师兄推荐英文文献，我就可能不喜欢看，因为这是外部动机；而我自己喜欢看计算机相关的文档并且进行翻译，这就会持续下去，这是内部动机。同理，有的同学不喜欢听英语的学术报告会，觉得跟不上又听不懂；而他却又可能在感兴趣的情况下看一些无中文字幕的英语影视作品。


怎么办？在动机转换过程中放任自己么？当然不要这样了，我有一个很不成熟的思路，就是对动机进行二次拆解转换。

当遇到别人要求的事情的时候，先自己深思熟虑一下，考虑好这件事自己是不是本来也准备做的，如果正巧是这种情况，一定要多次反复提醒自己，保持好内部动机，将外部动机解读为对自己的某种鼓励、肯定或者支持之类的。

那么还有另外一种情况，就是别人提醒你要求你做的事情，可能是你之前并不想做的，怎么办？你得好好考虑一下是不是要接纳这件事，让它成为你自己决定要做的事情，这样就转换成内部动机；如果你不能接纳，请一定赶紧及时和对方表达清楚。清晰流畅的信息沟通是高效率工作和生活的关键，这样也节省了他人的时间。

如果就是懒癌拖延症晚期怎么办？想想这件事的延误会对你的未来造成哪些影响，以及你是否愿意为之买单，就可以了。</content><category term="Work"></category><category term="Discuss"></category><category term="Communicate"></category><category term="Programming"></category><category term="Science"></category></entry><entry><title>Learning</title><link href="/learning.html" rel="alternate"></link><published>2017-04-09T00:00:00+08:00</published><updated>2017-04-09T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-09:/learning.html</id><summary type="html">&lt;h1&gt;关于上课的一些事&lt;/h1&gt;
&lt;p&gt;我数学物理基础最差，因为比较笨，搞不懂那么多灵活的技巧性的问题，高考时候就是这两科丢分，本科时期就是这两科挂科，考研多亏没有这两个，要不我就狗带了。&lt;/p&gt;
&lt;p&gt;研一阶段，我是很害怕数值分析和多元统计的，倒是对C++我很喜欢，因为本科时候必修课学过C，选修课学过C++，此外编程啊计算机相关的内容，都是确定性特别强的，会了就是会了，不会就是不会，通常咱们这些非计算机专业的课程中，不会有那种特别需要技巧性的东西。这就适合我这种笨人。&lt;/p&gt;
&lt;p&gt;然而后来我才发现，其实数值分析反而不太难，毕竟都是几百年前大明朝大清朝时代的那些个老外弄的，无非是按照某些固定步骤进行计算，趋近于某个值的时候就当做满意了之类的。所以学得也不太吃力。刚开课的时候我问过教数值分析的高老师，怎么才能学会呢？他说你把所有题都做一遍就会了。然后我就信了，就真的把教材上面所有题目都做了一遍。事实证明这个确实有效，因为大概做完了之后，我就发现这些题目其实都无非就是改改数字和形式，本质上问的东西没差太多。&lt;/p&gt;
&lt;p&gt;让我有了更多思考的还是C++。当然这个不仅仅是因为课堂上柯老师特别认真负责讲解得详细深入。而是我开始问自己，学这个编程语言要有什么用处呢？我陆续跟身边的一些同学谈论起这个话题，然而得到的答案大部分都是：没什么用。这让我很不甘心，我觉得这个时代计算机是最广泛应用的日常工具之一，甚至淘汰掉了纸笔，那么与之相关的技能必然不应该是无用的。&lt;/p&gt;
&lt;p&gt;仔细一想，我觉得问题出在自己身上。
自己如果不喜欢某个学科 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;关于上课的一些事&lt;/h1&gt;
&lt;p&gt;我数学物理基础最差，因为比较笨，搞不懂那么多灵活的技巧性的问题，高考时候就是这两科丢分，本科时期就是这两科挂科，考研多亏没有这两个，要不我就狗带了。&lt;/p&gt;
&lt;p&gt;研一阶段，我是很害怕数值分析和多元统计的，倒是对C++我很喜欢，因为本科时候必修课学过C，选修课学过C++，此外编程啊计算机相关的内容，都是确定性特别强的，会了就是会了，不会就是不会，通常咱们这些非计算机专业的课程中，不会有那种特别需要技巧性的东西。这就适合我这种笨人。&lt;/p&gt;
&lt;p&gt;然而后来我才发现，其实数值分析反而不太难，毕竟都是几百年前大明朝大清朝时代的那些个老外弄的，无非是按照某些固定步骤进行计算，趋近于某个值的时候就当做满意了之类的。所以学得也不太吃力。刚开课的时候我问过教数值分析的高老师，怎么才能学会呢？他说你把所有题都做一遍就会了。然后我就信了，就真的把教材上面所有题目都做了一遍。事实证明这个确实有效，因为大概做完了之后，我就发现这些题目其实都无非就是改改数字和形式，本质上问的东西没差太多。&lt;/p&gt;
&lt;p&gt;让我有了更多思考的还是C++。当然这个不仅仅是因为课堂上柯老师特别认真负责讲解得详细深入。而是我开始问自己，学这个编程语言要有什么用处呢？我陆续跟身边的一些同学谈论起这个话题，然而得到的答案大部分都是：没什么用。这让我很不甘心，我觉得这个时代计算机是最广泛应用的日常工具之一，甚至淘汰掉了纸笔，那么与之相关的技能必然不应该是无用的。&lt;/p&gt;
&lt;p&gt;仔细一想，我觉得问题出在自己身上。
自己如果不喜欢某个学科，往往是因为早期吃了点苦头，学得吃力，然后又心里面不愿意去承认是因为自己不够努力或者不够聪明，所以就给自己找借口说自己不喜欢这个科目。比如我对数学和物理一直都是这样的态度。而如果突然发现有的内容还是能学会能掌握的，就开始觉得也不是那么可怕了。比如我对数值分析就是从最开始的恐惧到最后的习以为常。&lt;/p&gt;
&lt;p&gt;这种状况会形成一个循环，可以是越来越逃避越来越抵触，比如觉得什么模拟啊哪有什么用啊，什么大地构造啊好复杂扯得什么鬼啊；也可能是越来越有兴趣越来越乐在其中，比如想探索一下平时自己做的事情有哪些能用计算机编程来进行简化，或者又想看看能不能从经典文章中抽离出各种计算步骤甚至数学模型等等。&lt;/p&gt;
&lt;p&gt;所以研一的生活结束之后，我克服了对数学的恐惧，培养了对编程的兴趣。而我的一位很要好的同学，因为极度痛恨C++而导致长期无法通过此课程的考核，最终似乎是肄业了。&lt;/p&gt;
&lt;p&gt;这让我有了很多乱七八糟的想法。如果在某个时刻，你开始告诉自己说自己不喜欢某一个科目，我觉得，可能就得仔细反思一下了。因为其实很可能还是因为不够努力或者不够聪明。&lt;/p&gt;
&lt;p&gt;不够努力这个事情我觉得好解决，就努力就行了。但现实是残酷的，我的师弟小丁曾经比我还重，他努力减肥就比我瘦好多成了一枚大帅哥。像他这样就是有志者事竟成的那种人，我坚信他的努力能力是很赞的。而另外有的其他我认识的一些朋友，就是每天经常在看各种言情剧，也经常说自己要学英语看文章来崛起，但是几年来他还是看言情剧的状态更多见。这个故事告诉我们，不够努力就去努力是很没用的一句话，能做到去努力，可能需要客服很多障碍，比如习惯，安逸的舒适区等等，挺不容易的。&lt;/p&gt;
&lt;p&gt;另外一个就悲催了，不够聪明怎么办？我多次遇到过这个问题，有时候那些个数学问题我就是不懂啊不懂啊，然后我就愤怒，对自己这么笨很生气，我就摔键盘摔鼠标。摔坏了之后我媳妇给我买了新鼠标，并且告诉我不要这样了。后来我买了个打拳击的不倒翁，每次遇到了算法不会写或者功能不会实现，我就打他几下发泄一下，然后接着啃。当然了，我也不是一直在憋着，憋了半天弄不明白，我就会四处找那些比我聪明而又比我有经验的高人。这些高人可以是我的老师们，也可以是各种后来居上的师弟，因为年轻人里面更容易藏龙卧虎。所以我对不够聪明的解决有两个思路，要么自己硬抗，要么找人帮忙。&lt;/p&gt;
&lt;p&gt;然而几年前的时候，我就基本上完了读书生涯中的全部课程了。那时候我才发现，有课上的日子是幸福的。因为所有要学的东西都有人探索过来，并且总结了非常详细的经验来分享和讲解给大家。而从那时起，我要面对的未知内容往往都是散乱零碎的，甚至没有人去认真当回事对待过的，甚至是没有被关注过的学科之间的弱交叉点。一切都需要自己摸索，零星能搜索到的几篇文献也不一定是引导还是误导。感觉就像是身处爆表的雾霾当中。&lt;/p&gt;
&lt;p&gt;啊，我又扯了很远很多很乱，然后不好收尾了。
结尾自然还是总结一下了。我的建议就是：选课要清醒，不要畏难而逃避；上课要认真，因为你交了学费吖；然后学了就尽量尽自己所能做到的最好程度，这样既尊重自己的生命，也开发自己的潜能。如果怕困难又不愿意努力，你应该换一件事情去做。&lt;/p&gt;</content><category term="Work"></category><category term="Discuss"></category><category term="Communicate"></category><category term="Programming"></category><category term="Science"></category></entry><entry><title>CIPW</title><link href="/cipw.html" rel="alternate"></link><published>2017-04-06T00:00:00+08:00</published><updated>2017-04-06T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-06:/cipw.html</id><summary type="html">&lt;h1&gt;关于 CIPW 计算&lt;/h1&gt;
&lt;p&gt;CIPW 的设计初衷真不错，而且在那么久之前就有这种程序化的一步一步来拼的思路，很适合编程实现。&lt;/p&gt;
&lt;p&gt;不过目前来看，国外流传比较广的计算表格是&lt;a href="http://minerva.union.edu/hollochk/kth/"&gt;美国联合学院的Kurt Hollocher&lt;/a&gt;这位老兄的，下载地址在&lt;a href="https://pan.baidu.com/s/1skN5ugd"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;他的这个 Excel 表格做的非常细致，每一步都很清晰，不过其中有两处标注出了错，但我检查过，应该是不影响计算的。实际上我就是把他的表格中的算法抽了出来重新实现了，又加了批量计算的几个循环体。&lt;/p&gt;
&lt;p&gt;国内估计用的比较多的是路远发老师的GeoKit进行计算，但是路老师的计算过程，如果按照&lt;a href="geokit.net/CIPW.htm"&gt;他的网站上面的流程&lt;/a&gt;，似乎和 Kurt 的有所差别，尤其是在 Sr 和 Ni 等元素的处理上，步骤完全不一样。&lt;/p&gt;
&lt;p&gt;Kurt 的这个表格是 Leon Bagas 分享给我的，他个人推荐用这个，目前我也暂时先用这个来计算了。&lt;/p&gt;
&lt;p&gt;我的 &lt;a href="https://github.com/chinageology/GeoPython"&gt;GeoPython&lt;/a&gt;  里面还是选择了用 Kurt 的计算思路，因为其中的计算流程更清晰一些。&lt;/p&gt;
&lt;p&gt;在计算结果上 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;关于 CIPW 计算&lt;/h1&gt;
&lt;p&gt;CIPW 的设计初衷真不错，而且在那么久之前就有这种程序化的一步一步来拼的思路，很适合编程实现。&lt;/p&gt;
&lt;p&gt;不过目前来看，国外流传比较广的计算表格是&lt;a href="http://minerva.union.edu/hollochk/kth/"&gt;美国联合学院的Kurt Hollocher&lt;/a&gt;这位老兄的，下载地址在&lt;a href="https://pan.baidu.com/s/1skN5ugd"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;他的这个 Excel 表格做的非常细致，每一步都很清晰，不过其中有两处标注出了错，但我检查过，应该是不影响计算的。实际上我就是把他的表格中的算法抽了出来重新实现了，又加了批量计算的几个循环体。&lt;/p&gt;
&lt;p&gt;国内估计用的比较多的是路远发老师的GeoKit进行计算，但是路老师的计算过程，如果按照&lt;a href="geokit.net/CIPW.htm"&gt;他的网站上面的流程&lt;/a&gt;，似乎和 Kurt 的有所差别，尤其是在 Sr 和 Ni 等元素的处理上，步骤完全不一样。&lt;/p&gt;
&lt;p&gt;Kurt 的这个表格是 Leon Bagas 分享给我的，他个人推荐用这个，目前我也暂时先用这个来计算了。&lt;/p&gt;
&lt;p&gt;我的 &lt;a href="https://github.com/chinageology/GeoPython"&gt;GeoPython&lt;/a&gt;  里面还是选择了用 Kurt 的计算思路，因为其中的计算流程更清晰一些。&lt;/p&gt;
&lt;p&gt;在计算结果上，我在 &lt;a href="https://github.com/chinageology/GeoPython"&gt;GeoPython&lt;/a&gt;  里面使用了 ChemPy 来获取元素的原子量以及各种矿物的分子量，而 Kurt 原版是选择了小数点后两位小数的近似值。所以 GeoPython 里面用的原子量和分子量可能会更精确一些，这在 CIPW 计算结果上会体现在个位数的偶尔差异，以及小数点后数值的明显差异。 ChemPy 是一个化学方面的 Python 模块，我比较推荐使用；而 Kurt 的计算表格中由于使用了 Excel 等原因，数位有所取舍。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/chinageology/GeoPython"&gt;GeoPython&lt;/a&gt; 的 CIPW 模块是这样设计的：数据输入用一个 CIPW.xlsx 或者 CIPW.csv，其中一定要注意的是单位问题，Sr、Ba、Ni、Cr、Zr 这几个元素用的是 ppm，而其他的项目都是质量百分比。&lt;/p&gt;
&lt;p&gt;计算出来的结果用额外的文件来存储。生成的四个 csv 文件，Claced 的是计算出来的各种岩石参数，比如 DI 值、 Mg# 等等；Result 是计算出来的摩尔数，也就是直接的结算结果；Volume 和 Weight 分别是转成 体积分数和质量分数的结果。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/chinageology/GeoPython/blob/master/Download.md"&gt;下载链接请点击这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其实不太推荐大家用打包好的 exe 或者 app，而更推荐从 pip 上面来安装 GeoPython，因为每次最新的版本都会首先更新到 pip 上面去，另外打包的版本由于要包含 Python 解释器以及所有依赖包，体积很大，Windows 版本接近 200MB， OSX 版本更是有 800MB 之大。&lt;/p&gt;
&lt;p&gt;当然如果没有 Python 使用经验的话，暂时只能下载打包好的程序了。&lt;/p&gt;
&lt;p&gt;我非常鼓励地学同行们一起来学习和使用 Python，我们不必要非常精通，只要能用 Python 来解决一些日常的问题就可以了。&lt;/p&gt;</content><category term="Work"></category><category term="GeoPython"></category><category term="Python"></category></entry><entry><title>My Old Man</title><link href="/my-old-man.html" rel="alternate"></link><published>2017-04-05T00:00:00+08:00</published><updated>2017-04-05T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-05:/my-old-man.html</id><summary type="html">&lt;h1&gt;最近在忙的一些事&lt;/h1&gt;
&lt;h2&gt;从一首老歌开始&lt;/h2&gt;
&lt;table&gt;
&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=351385&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href="http://music.163.com/#/song?id=351385"&gt;这首歌&lt;/a&gt;是我父亲跟我现在一样大年纪的时候听的，他应该是个老摇滚迷，当年我记得他还听唐朝乐队。我从小就最佩服我父亲，一来是他个子比我高，二来是他能用易拉罐做电视天线，这让我觉得很神奇。&lt;/p&gt;
&lt;p&gt;我不具备我父亲的智力、魄力、决断力，各方面来说，我都是弱化版本，我唯一胜过他的是体重。&lt;/p&gt;
&lt;p&gt;我最钦佩他的学习和适应的能力，从青年时代开始，他从事过很多不同的工作，尝试过不同的行业，在行业下行时刻都能毅然决断，尝试新事物，探索新领域，在各个领域中都非常优秀。&lt;/p&gt;
&lt;p&gt;这几年，我自己也遇到了行业下行的情境，内心充满忧愁，对学科的前景感到非常悲观。这时我就会想起，父亲在跟我这样大的时候，他遇到的情况要更加艰难。如果换做是我面对当年他的处境，真不知道自己能不能扛得住。然而每次挑战都被他应对了下来，并且家里从居无定所四处漂泊到逐渐安定衣食无忧，日子也越来越改善了。一直以来，他都是我的榜样，让我知道应该当断则断，眼光放长远，未来有希望。&lt;/p&gt;
&lt;h2&gt;我当前的状况&lt;/h2&gt;
&lt;p&gt;最近几年，我的身体素质逐渐变差，已经基本无法胜任野外地质工作了。所以我开始捡起来早些年比较关注的计算机应用方面的一些技能，重新开始学习编程，翻译了一些&lt;a href="http://blog.cycleuser.org/my-translations.html"&gt;书籍资料&lt;/a&gt;，又开始组装一些工作站 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;最近在忙的一些事&lt;/h1&gt;
&lt;h2&gt;从一首老歌开始&lt;/h2&gt;
&lt;table&gt;
&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=351385&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href="http://music.163.com/#/song?id=351385"&gt;这首歌&lt;/a&gt;是我父亲跟我现在一样大年纪的时候听的，他应该是个老摇滚迷，当年我记得他还听唐朝乐队。我从小就最佩服我父亲，一来是他个子比我高，二来是他能用易拉罐做电视天线，这让我觉得很神奇。&lt;/p&gt;
&lt;p&gt;我不具备我父亲的智力、魄力、决断力，各方面来说，我都是弱化版本，我唯一胜过他的是体重。&lt;/p&gt;
&lt;p&gt;我最钦佩他的学习和适应的能力，从青年时代开始，他从事过很多不同的工作，尝试过不同的行业，在行业下行时刻都能毅然决断，尝试新事物，探索新领域，在各个领域中都非常优秀。&lt;/p&gt;
&lt;p&gt;这几年，我自己也遇到了行业下行的情境，内心充满忧愁，对学科的前景感到非常悲观。这时我就会想起，父亲在跟我这样大的时候，他遇到的情况要更加艰难。如果换做是我面对当年他的处境，真不知道自己能不能扛得住。然而每次挑战都被他应对了下来，并且家里从居无定所四处漂泊到逐渐安定衣食无忧，日子也越来越改善了。一直以来，他都是我的榜样，让我知道应该当断则断，眼光放长远，未来有希望。&lt;/p&gt;
&lt;h2&gt;我当前的状况&lt;/h2&gt;
&lt;p&gt;最近几年，我的身体素质逐渐变差，已经基本无法胜任野外地质工作了。所以我开始捡起来早些年比较关注的计算机应用方面的一些技能，重新开始学习编程，翻译了一些&lt;a href="http://blog.cycleuser.org/my-translations.html"&gt;书籍资料&lt;/a&gt;，又开始组装一些工作站，还开始尝试了一些并行计算方面的内容，比如 &lt;a href="http://blog.cycleuser.org/macos-pycuda-python-pyenv.html"&gt;CUDA&lt;/a&gt; 以及 &lt;a href="http://blog.cycleuser.org/pycuda-tutorial-zhong-wen-ban.html"&gt;PyCUDA&lt;/a&gt; 等等。&lt;/p&gt;
&lt;p&gt;这几天我对&lt;a href="https://github.com/chinageology/GeoPython"&gt; GeoPython&lt;/a&gt; 逐渐进行了改进，对一些类进行了重构，增加了任意组合自定义 Harker 图解、批量锆石氧逸度计算、批量 CIPW 计算这些功能，还有更多功能处于筹划之中。&lt;/p&gt;
&lt;p&gt;总的来说，我现在专注的内容有两方面：
    ① 软件开发方面：以 Python 为基础，简单的跨平台开发、科学计算、数学应用等等；
    ② 硬件搭建方面：以 CUDA 和 PHI 为主的小型并行计算平台，硬件的组建，系统的安装维护，软件体系的搭配组合。&lt;/p&gt;
&lt;p&gt;这两方面本身我都是外行，所以我并没有打算转行去当程序员或者运维工程师等，那种想法也不太现实，因为隔行如隔山，我的水平太低，要追赶很远才可以，效率低，还浪费了我之前在地质学领域这十年的经历。&lt;/p&gt;
&lt;p&gt;所以我的想法是，把这两方面的技能发挥到地质学相关的工作中去，在除了野外工作之外的其他环节，发挥自己的一点微薄之力。&lt;/p&gt;
&lt;p&gt;很多人都在说，国内地学领域的生产环境技术差、管理差，学术圈子的氛围暮气重、压力大，我曾经也发过类似的抱怨。然后后来我意识到与其指手画脚，不如专心做点事情。所以我先是写了那个用移动设备测试存储产状的工具，后来又开始做 &lt;a href="https://github.com/chinageology/GeoPython"&gt;GeoPython&lt;/a&gt; 这个项目，目的就是能够改善定量程度低以及各种手绘作图的情景。&lt;/p&gt;
&lt;p&gt;还有很多其他的想法，比如试图把一些繁琐而又以体力劳动为主的基础数据处理工作交给计算机，进而用计算机来进行基础的分析，再训练计算机进行若干稍进阶的分析识别，等等。&lt;/p&gt;
&lt;p&gt;从某种程度上来说，其实这也算是一种转换，只是并非转换了行业，而是在行内转了方向。&lt;/p&gt;
&lt;p&gt;只是不知道自己的选择，是吃螃蟹，吃狼桃，还是吃瘪~~&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/img/First.jpg"&gt;&lt;/p&gt;</content><category term="Story"></category><category term="Memory"></category><category term="Story"></category></entry><entry><title>Python Use Str in a List to create new Var</title><link href="/python-use-str-in-a-list-to-create-new-var.html" rel="alternate"></link><published>2017-04-01T00:00:00+08:00</published><updated>2017-04-01T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-04-01:/python-use-str-in-a-list-to-create-new-var.html</id><summary type="html">&lt;h1&gt;Python 中用列表中的字符串元素作为名字来创建新变量&lt;/h1&gt;
&lt;h2&gt;问题的提出&lt;/h2&gt;
&lt;p&gt;今天我在写一个与计算化学相关的某个 Python 脚本的时候，突然有了一个这样的疑问：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果给定一个列表(list) a;
已知该列表中的元素均为字符串(str);
列表中元素的个数 n 以及作为列表元素的这些字符串的值都是不预知的;
那么，如何以这些列表元素作为变量名称来批量创建 n 个新变量呢？
以创建 n 个新列表为例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是我开始在 &lt;a href="V2mm.tech"&gt;V2mm&lt;/a&gt; 的群以及其他小伙伴的群里面求助，得到了以 &lt;a href="http://blog.riverrun.xyz"&gt;River&lt;/a&gt; 和 &lt;a href="https://xuanwo.org"&gt;Xuanwo&lt;/a&gt; 等技术流的指点。总结如下：&lt;/p&gt;
&lt;h2&gt;用类实现&lt;/h2&gt;
&lt;p&gt;这两种方法是 &lt;a href="http://blog.riverrun.xyz"&gt;River&lt;/a&gt; 提供的。&lt;/p&gt;
&lt;h3&gt;方法1 静态类型&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;Python 中用列表中的字符串元素作为名字来创建新变量&lt;/h1&gt;
&lt;h2&gt;问题的提出&lt;/h2&gt;
&lt;p&gt;今天我在写一个与计算化学相关的某个 Python 脚本的时候，突然有了一个这样的疑问：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果给定一个列表(list) a;
已知该列表中的元素均为字符串(str);
列表中元素的个数 n 以及作为列表元素的这些字符串的值都是不预知的;
那么，如何以这些列表元素作为变量名称来批量创建 n 个新变量呢？
以创建 n 个新列表为例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是我开始在 &lt;a href="V2mm.tech"&gt;V2mm&lt;/a&gt; 的群以及其他小伙伴的群里面求助，得到了以 &lt;a href="http://blog.riverrun.xyz"&gt;River&lt;/a&gt; 和 &lt;a href="https://xuanwo.org"&gt;Xuanwo&lt;/a&gt; 等技术流的指点。总结如下：&lt;/p&gt;
&lt;h2&gt;用类实现&lt;/h2&gt;
&lt;p&gt;这两种方法是 &lt;a href="http://blog.riverrun.xyz"&gt;River&lt;/a&gt; 提供的。&lt;/p&gt;
&lt;h3&gt;方法1 静态类型&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

&lt;span class="n"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;方法2 动态类型&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;MyClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MyClass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;# [] [] []&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;用字典&lt;/h2&gt;
&lt;p&gt;这种方法是 &lt;a href="http://o00o.site/"&gt;FlagPlus&lt;/a&gt; 提供的思路；&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:[]})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://blog.riverrun.xyz"&gt;River&lt;/a&gt; 给出了精简的建议:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;用类加字典&lt;/h2&gt;
&lt;p&gt;这种方法是我基于 &lt;a href="http://o00o.site/"&gt;FlagPlus&lt;/a&gt; 提供的思路自己乱写的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test2&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
           &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:[]})&lt;/span&gt;

&lt;span class="n"&gt;Test2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;用 locals 来添加变量&lt;/h2&gt;
&lt;p&gt;这两种方法是 &lt;a href="http://blog.riverrun.xyz"&gt;River&lt;/a&gt; 提供的，用 globals 应该也可以。 &lt;a href="http://blog.riverrun.xyz"&gt;River&lt;/a&gt; 不推荐这种方法，因为这样可能污染 module 的命名空间。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;用函数来封装一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mylist&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;mylist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;用 exec 直接将字符串来执行&lt;/h2&gt;
&lt;p&gt;这个思路来自 Kivy 群的 X_Tu，应该是最简单直接地解决了问题。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;=[]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://xuanwo.org"&gt;Xuanwo&lt;/a&gt; 不推荐这样做，变量创建会造成性能开销，因为存在栈上而不是堆上。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.riverrun.xyz"&gt;River&lt;/a&gt; 对此表示存疑：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;堆和栈和“exec” 这个关键字无关，和你在哪里调用 exec 有关。
其实一个变量在堆上还是在栈上和你的程序上下文有关，不是那么简单。我们都知道闭包就是保存在堆上的，而普通的函数内部变量都在栈上。&lt;/p&gt;
&lt;p&gt;exec 可以接受额外两个参数，一个代表 locals, 一个代表 globals. 如果 locals 在栈上，生成的变量应该在栈上个，如果 locals 在堆上，生成的变量应该在堆上。待我研究一下，久未搞 c/c++，有点搞不清了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://fanzheng.org"&gt;范神&lt;/a&gt; &lt;del&gt;推荐对复杂数据使用数据库，数据库操作时间是毫秒级，会更快一些。&lt;/del&gt;说的数据库是毫秒级，毫秒级是慢的，CPU都是低于微秒的，所以他不推荐用数据库。。。。&lt;/p&gt;</content><category term="Work"></category><category term="Python"></category><category term="Kivy"></category></entry><entry><title>GlumPy-Installation</title><link href="/glumpy-installation.html" rel="alternate"></link><published>2017-03-10T00:00:00+08:00</published><updated>2017-03-10T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-03-10:/glumpy-installation.html</id><summary type="html">&lt;h1&gt;GlumPy 中文文档翻译：安装指南&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://glumpy.readthedocs.io/en/latest/installation.html"&gt;本文档原文地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文的安装过程可能还是不够详细，Windows 用户可以参考 &lt;a href="https://zhuanlan.zhihu.com/p/25678091"&gt;我在知乎专栏这篇文章&lt;/a&gt; 中提供的安装截图，下载&lt;a href="https://pan.baidu.com/s/1qY7IxvI#list/path=%2F"&gt;这个链接&lt;/a&gt;里的内容会对安装过程有所帮助。&lt;/p&gt;
&lt;h2&gt;译者前言&lt;/h2&gt;
&lt;p&gt;我弃坑了 VisPy，因为在不同操作系统上面运行的效果差距比较大，可能是因为不同操作系统的相关组件和依赖包的版本差别，或者是其他的原因吧。而且好像 GlumPy 就是对 VisPy 的继承， VisPy 的代码提交已经是几个月之前甚至几年前，GlumPy 目前还在活跃。从文档来看这二者也很相似，尤其是这部分安装指南几乎就是修改了一下的 VisPy 安装指南。&lt;/p&gt;
&lt;p&gt;GlumPy 给我的印象很棒，因为官方开发人员很及时地跟我互动讨论&lt;a href="https://github.com/glumpy/glumpy/issues/87"&gt;一些运行错误产生的原因&lt;/a&gt;，虽然他们的 example 里面的一些一两年的 bug 也没有修改，比如 earth.py 似乎需要把 Arcball 替换成 Trackball，而且对 numpy 的特定版本的需求也需要提示一些 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;GlumPy 中文文档翻译：安装指南&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://glumpy.readthedocs.io/en/latest/installation.html"&gt;本文档原文地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文的安装过程可能还是不够详细，Windows 用户可以参考 &lt;a href="https://zhuanlan.zhihu.com/p/25678091"&gt;我在知乎专栏这篇文章&lt;/a&gt; 中提供的安装截图，下载&lt;a href="https://pan.baidu.com/s/1qY7IxvI#list/path=%2F"&gt;这个链接&lt;/a&gt;里的内容会对安装过程有所帮助。&lt;/p&gt;
&lt;h2&gt;译者前言&lt;/h2&gt;
&lt;p&gt;我弃坑了 VisPy，因为在不同操作系统上面运行的效果差距比较大，可能是因为不同操作系统的相关组件和依赖包的版本差别，或者是其他的原因吧。而且好像 GlumPy 就是对 VisPy 的继承， VisPy 的代码提交已经是几个月之前甚至几年前，GlumPy 目前还在活跃。从文档来看这二者也很相似，尤其是这部分安装指南几乎就是修改了一下的 VisPy 安装指南。&lt;/p&gt;
&lt;p&gt;GlumPy 给我的印象很棒，因为官方开发人员很及时地跟我互动讨论&lt;a href="https://github.com/glumpy/glumpy/issues/87"&gt;一些运行错误产生的原因&lt;/a&gt;，虽然他们的 example 里面的一些一两年的 bug 也没有修改，比如 earth.py 似乎需要把 Arcball 替换成 Trackball，而且对 numpy 的特定版本的需求也需要提示一些，参考&lt;a href="https://github.com/glumpy/glumpy/issues/106"&gt;这里查看更多内容&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;安装方法&lt;/h2&gt;
&lt;p&gt;最简单直接的安装方法就是用 pip 了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install glumpy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;还可以对已经安装的版本进行升级：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install --upgrade glumpy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;依赖包&lt;/h2&gt;
&lt;p&gt;GlumPy 常规需要的标准依赖包就是下面这几个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;numpy: &lt;a href="http://numpy.org/"&gt;http://numpy.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pyopengl: &lt;a href="http://pyopengl.sourceforge.net/"&gt;http://pyopengl.sourceforge.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cython: &lt;a href="http://cython.org/"&gt;http://cython.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;triangle: &lt;a href="http://dzhelil.info/triangle/"&gt;http://dzhelil.info/triangle/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装这些依赖包最简单的方法莫过于用 pip 了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install numpy
pip install cython
pip install pyopengl
pip install triangle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（译者注：推荐你先安装 cython ，然后是 numpy 接着是 pyopengl 和 triangle。在安装 triangle 的时候可能遇到报错，比如缺少 packaging ，解决方案是用 &lt;code&gt;pip install packaging&lt;/code&gt; 这样的命令来把缺少的包安装上就行。）&lt;/p&gt;
&lt;p&gt;如果已经安装过上面这些包，可以用下面的命令来升级到最新版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install --upgrade numpy
pip install --upgrade pyopengl
pip install --upgrade cython
pip install --upgrade triangle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;后端需求&lt;/h2&gt;
&lt;p&gt;GlumPy 需要至少一个工具链来打开窗口创建 OpenGL 环境。这可以用很多标准的 C/C++ 工具链来实现，比如 Qt, GLFW, glut, pygame, SDL2, Wx, GTK2 or GTK3，所以就需要对应的 Python 绑定，或者类似 pyglet 这样的纯 Python 工具链。&lt;/p&gt;
&lt;h4&gt;特别警告&lt;/h4&gt;
&lt;p&gt;上面这些后端的包只需要有一个就可以了，不是都要安装！&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;目前常用的后端&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;Qt&lt;/th&gt;
&lt;th align="center"&gt;GLFW&lt;/th&gt;
&lt;th align="center"&gt;Pyglet&lt;/th&gt;
&lt;th align="center"&gt;SDL2&lt;/th&gt;
&lt;th align="center"&gt;GTK3&lt;/th&gt;
&lt;th align="right"&gt;Wx3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;多窗口&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;无修饰窗口&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;窗口尺寸调整&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;窗口移动&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;设定 GL API&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;设定 GL Profile&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分享 GL Context&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;全屏&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;处理使用 Unicode&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;老古董后端&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;Wx2&lt;/th&gt;
&lt;th align="center"&gt;Glut&lt;/th&gt;
&lt;th align="center"&gt;Freeglut&lt;/th&gt;
&lt;th align="center"&gt;Pygame&lt;/th&gt;
&lt;th align="right"&gt;GTK 2.x&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;多窗口&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;无修饰窗口&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;窗口尺寸调整&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;窗口移动&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;设定 GL API&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="right"&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;设定 GL Profile&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="right"&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分享 GL Context&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;全屏&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;处理使用 Unicode&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;滚轮事件&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="right"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;硬件需求&lt;/h2&gt;
&lt;p&gt;GlumPy 会对显卡造成很大符合。更确切地说， GlumPy 会通过着色器（shader）来高强度使用图形处理单元（GPU）。所以 GlumPy 需要起码稍微新一点的显卡（只要是最近十二年以来的估计都可以）还需要一个最新版本的显卡驱动，这样 GlumPy 才能使用可编程管线（而不是固定化的管线）。&lt;/p&gt;
&lt;p&gt;在 Linux 或者 OSX 平台，输入下面这个命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;glxinfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上面这个命令执行之后会显示出一大堆结果，就是和你显卡相关的信息了。这时候最重要的是要看看你能否有权限直接使用显卡（direct ），以及你的显卡支持的 GL 版本以及 着色器语言（ shading language ） 的版本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;...
direct rendering: Yes
...
OpenGL vendor string: NVIDIA Corporation
OpenGL renderer string: NVIDIA GeForce GT 650M OpenGL Engine
OpenGL version string: &lt;span class="m"&gt;2&lt;/span&gt;.1 NVIDIA-8.24.9 &lt;span class="m"&gt;310&lt;/span&gt;.40.25f01
OpenGL shading language version string: &lt;span class="m"&gt;1&lt;/span&gt;.20
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;译者注：上面这样子现实的内容太繁杂了，完全可以用 &lt;code&gt;glxinfo |grep direct &amp;amp;&amp;amp; glxinfo |grep OpenGL&lt;/code&gt; 这样一个命令，在我的机器上输出如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;direct rendering: Yes
OpenGL vendor string: NVIDIA Corporation
OpenGL renderer string: NVIDIA GeForce GTX TITAN OpenGL Engine
OpenGL version string: &lt;span class="m"&gt;2&lt;/span&gt;.1 NVIDIA-10.15.20 &lt;span class="m"&gt;367&lt;/span&gt;.15.10.35f01
OpenGL shading language  version string: &lt;span class="m"&gt;1&lt;/span&gt;.20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OpenGL 版本最低是 2.1，着色器语言的版本至少要 1.1。如果不符合的话，你需要安装最新版本的对应软件。可以看看你的操作系统是否提供了文档，或者在线搜索一下怎么来操作吧。&lt;/p&gt;
&lt;h2&gt;在 Windows 7，8，10  x64 bit 操作系统中安装的步骤&lt;/h2&gt;
&lt;h4&gt;首先是安装 Python3：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;从&lt;a href="https://www.python.org/downloads/"&gt; Python 官方网站下载页面&lt;/a&gt;来下载 Python。（译者更推荐从&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/"&gt;清华开源镜像&lt;/a&gt;下载使用 anaconda3 ，这样一来是下载速度快一些，而来也方便使用 conda 安装管理一些包。另外 GlumPy 官方推荐 Python3， 我很钦佩，因为我特别讨厌 2，没什么合理的具体理由，可能因为个人比较 2 吧。）&lt;/li&gt;
&lt;li&gt;运行安装文件，安装到一个短一点的路径里面，比如&lt;code&gt;C:\python3&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;把 Python 可执行文件所在的目录添加到系统的环境变量 PATH 中（通常在安装过程中这一步就会完成了，一般不用人手动操作）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重启操作系统，之后安装好的 Python 就可以用了。&lt;/strong&gt;
重启了之后，在命令行里面输入 &lt;code&gt;python&lt;/code&gt; 然后回车，试试能不能运行。如果能得到一个&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;这样的 Python 命令行控制台解释器的提示符，就没有问题了。如果没出现这个，而是报错了，那有 99% 的可能都需要你在系统的环境变量中添加 Python 所在路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4&gt;然后是安装依赖包（一定要从管理员权限的 cmd 控制台或者 powershell）：&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:&lt;span class="se"&gt;\W&lt;/span&gt;indows&lt;span class="se"&gt;\s&lt;/span&gt;ystem32&amp;gt; pip install numpy
C:&lt;span class="se"&gt;\W&lt;/span&gt;indows&lt;span class="se"&gt;\s&lt;/span&gt;ystem32&amp;gt; pip install cython
C:&lt;span class="se"&gt;\W&lt;/span&gt;indows&lt;span class="se"&gt;\s&lt;/span&gt;ystem32&amp;gt; pip install pyopengl
C:&lt;span class="se"&gt;\W&lt;/span&gt;indows&lt;span class="se"&gt;\s&lt;/span&gt;ystem32&amp;gt; pip install triangle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;接下来安装 GlumPy（一定要从管理员权限的 cmd 控制台或者 powershell）：&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:&lt;span class="se"&gt;\W&lt;/span&gt;indows&lt;span class="se"&gt;\s&lt;/span&gt;ystem32&amp;gt; pip install glumpy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;关键部分了，安装 FreeType：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;从 &lt;a href="https://github.com/ubawurinna/freetype-windows-binaries"&gt;这个链接&lt;/a&gt; 下载一份编译好的 FreeType 文件。&lt;/li&gt;
&lt;li&gt;把 Zip 文件解压缩出来。&lt;/li&gt;
&lt;li&gt;把 freetype 字样的 dll 从 win64 这个目录里面复制到你的 Python3 安装目录。&lt;/li&gt;
&lt;li&gt;把其中的一个 &lt;code&gt;freetype**.dll&lt;/code&gt; 文件重命名成为 &lt;code&gt;freetype.dll&lt;/code&gt;。
下载的压缩包中附带的一个 README 文件会详细解释区别，推荐用带有 MT 字样的那个 DLL 文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;（译者注：一定注意重命名这一步，文档一定要仔细读。遇到过某些学生不好好读文档，弄半天都出现找不到 freetype 的错误，然后抓狂问我怎么办。所以一定仔细阅读，而且一定注意细节，比如别把名字错误改成 fretype 等等。）&lt;/p&gt;
&lt;h4&gt;另一个关键，安装 GLFW：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首先是去下载了，链接地址在 &lt;a href="http://www.glfw.org/download.html"&gt;这里&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;还是把 Zip 文件解压缩处理。&lt;/li&gt;
&lt;li&gt;从带有 &lt;code&gt;lib-xxxxx&lt;/code&gt; 字样的文件夹中复制出来一份 glfw.dll 等等文件到你的 Python3 安装目录。
推荐使用 &lt;code&gt;lib-mingw-w64&lt;/code&gt; 这一个，另外这里不用重新命名，所以别修改文件名哦。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</content><category term="Work"></category><category term="Python"></category><category term="GlumPy"></category><category term="Data"></category><category term="Visualization"></category></entry><entry><title>My Translations</title><link href="/my-translations.html" rel="alternate"></link><published>2017-03-08T00:00:00+08:00</published><updated>2017-03-08T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-03-08:/my-translations.html</id><summary type="html">&lt;h1&gt;我翻译的一些书籍和资料&lt;/h1&gt;
&lt;h2&gt;一些多余的话&lt;/h2&gt;
&lt;table&gt;
&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=22502857&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href="http://music.163.com/#/song?id=22502857"&gt;这首歌&lt;/a&gt;很棒，符合我现在的心情和状态。
每天看文献翻译文档写代码写文档，也是希望自己虽然行走不便，也能成为一个有用的人，一个脱离低级趣味的人，一个纯粹的人。
梦想是一定要有的，因为已经是活下去的动力之一，实现的效果很大程度上取决于努力的强度。
十二岁的时候面对 木兰辞 和 为学，我怀疑自己能否背下来，又鼓励自己说天下没有人做不到的事情。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;万里赴戎机，关山度若飞~&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;天下事有难易乎？为之则难者亦易矣，不为则易者亦难矣~&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;平沙落日大荒西，陇上明星高复低~&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我明白为什么老校友喜欢吟诗，真的可以在不妨碍表达思想感情的情况装比~&lt;/p&gt;
&lt;p&gt;感谢我媳妇，她在辛苦持家，我还在安逸地读书，我人生最大的幸运和成就就是遇到了她。&lt;/p&gt;
&lt;p&gt;以后我不准备用小时候的故事吹牛了，希望这是最后一次~&lt;/p&gt;
&lt;h2&gt;ThinkPython2E 中文版&lt;/h2&gt;
&lt;p&gt;从 2015 年末到 2016 年 2 月，我翻译了一份&lt;a href="http://blog.cycleuser.org/thinkpython-shuang-yu-xue-bian-cheng.html"&gt;中英双语版本的ThinkPython&lt;/a&gt;，那时候我觉得，双语对照很利于学习积累一些常用的词汇，有助于后续阅读英文文档。&lt;/p&gt;
&lt;p&gt;然而后来我发现大家更需要的是对编程语言本身的了解和学习，对双语的使用并不具有强需求 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;我翻译的一些书籍和资料&lt;/h1&gt;
&lt;h2&gt;一些多余的话&lt;/h2&gt;
&lt;table&gt;
&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=22502857&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href="http://music.163.com/#/song?id=22502857"&gt;这首歌&lt;/a&gt;很棒，符合我现在的心情和状态。
每天看文献翻译文档写代码写文档，也是希望自己虽然行走不便，也能成为一个有用的人，一个脱离低级趣味的人，一个纯粹的人。
梦想是一定要有的，因为已经是活下去的动力之一，实现的效果很大程度上取决于努力的强度。
十二岁的时候面对 木兰辞 和 为学，我怀疑自己能否背下来，又鼓励自己说天下没有人做不到的事情。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;万里赴戎机，关山度若飞~&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;天下事有难易乎？为之则难者亦易矣，不为则易者亦难矣~&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;平沙落日大荒西，陇上明星高复低~&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我明白为什么老校友喜欢吟诗，真的可以在不妨碍表达思想感情的情况装比~&lt;/p&gt;
&lt;p&gt;感谢我媳妇，她在辛苦持家，我还在安逸地读书，我人生最大的幸运和成就就是遇到了她。&lt;/p&gt;
&lt;p&gt;以后我不准备用小时候的故事吹牛了，希望这是最后一次~&lt;/p&gt;
&lt;h2&gt;ThinkPython2E 中文版&lt;/h2&gt;
&lt;p&gt;从 2015 年末到 2016 年 2 月，我翻译了一份&lt;a href="http://blog.cycleuser.org/thinkpython-shuang-yu-xue-bian-cheng.html"&gt;中英双语版本的ThinkPython&lt;/a&gt;，那时候我觉得，双语对照很利于学习积累一些常用的词汇，有助于后续阅读英文文档。&lt;/p&gt;
&lt;p&gt;然而后来我发现大家更需要的是对编程语言本身的了解和学习，对双语的使用并不具有强需求，往往是次要的。&lt;/p&gt;
&lt;p&gt;所以我整理修改了一下之前的文本，弄好了一份纯中文版本的，放到了 Gitbook 上面：&lt;/p&gt;
&lt;p&gt;GitHub 地址：&lt;a href="http://link.zhihu.com/?target=https%3A//github.com/cycleuser/ThinkPython-CN"&gt;cycleuser/ThinkPython-CN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在线阅读地址： &lt;a href="http://link.zhihu.com/?target=https%3A//cycleuser.gitbooks.io/think-python/content/"&gt;Think Python 第二版中文版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载 PDF、EPUB、Mobi 的地址：&lt;a href="http://link.zhihu.com/?target=https%3A//www.gitbook.com/book/cycleuser/think-python/details"&gt;Think Python 第二版中文版 · GitBook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我并非专业翻译人员，也不是计算机相关专业，因此这份文稿中可能会有很多错误。所以希望大家发现了错误请尽量告知我，以便我改进文本质量。&lt;/p&gt;
&lt;h2&gt;Kivy 中文编程指南&lt;/h2&gt;
&lt;p&gt;从去年后半年开始，我又翻译了 Kivy 的官方 Programming Guide 以及一些具有补充性质的内容。&lt;/p&gt;
&lt;p&gt;GitHub 链接在 &lt;a href="http://link.zhihu.com/?target=https%3A//github.com/cycleuser/Kivy-CN"&gt;cycleuser/Kivy-CN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gitbook 链接在 &lt;a href="http://link.zhihu.com/?target=https%3A//cycleuser.gitbooks.io/kivy-guide-chinese/content/"&gt;前言 · Kivy中文编程指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载 PDF、EPUB、Mobi 的地址：&lt;a href="http://link.zhihu.com/?target=https%3A//www.gitbook.com/book/cycleuser/kivy-guide-chinese/details"&gt;Kivy中文编程指南 · GitBook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;放到 Gitbook 上面了，希望能提高一下阅读体验。也希望大家帮我改错。&lt;/p&gt;</content><category term="Work"></category><category term="Python"></category><category term="Kivy"></category></entry><entry><title>Kivy For Now</title><link href="/kivy-for-now.html" rel="alternate"></link><published>2017-03-06T00:00:00+08:00</published><updated>2017-03-06T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-03-06:/kivy-for-now.html</id><summary type="html">&lt;h1&gt;Kivy中文编程指南：翻译始末&lt;/h1&gt;
&lt;h2&gt;翻译暂告段落&lt;/h2&gt;
&lt;p&gt;从去年开始的 &lt;a href="https://github.com/cycleuser/Kivy-CN"&gt;Kivy 编程指南中文翻译项目&lt;/a&gt;，今天基本算是弄完了，我把 Kivy Programming Guide 里面的全部内容翻译了一遍。&lt;/p&gt;
&lt;p&gt;这里就不贴了，大家可以去我的&lt;a href="https://zhuanlan.zhihu.com/python-kivy"&gt;知乎专栏&lt;/a&gt;或者我的 &lt;a href="https://github.com/cycleuser"&gt;GitHub&lt;/a&gt; 查看详细内容。&lt;/p&gt;
&lt;p&gt;当然了，质量还是不怎么样好，所以希望大家多批评指正，我会尽快改正。&lt;/p&gt;
&lt;p&gt;最开始用 Kivy 的时候，感觉有各种各样的 bug ，觉得安装和配置各种繁琐扯皮麻烦，心情也容易变得特别臭。&lt;/p&gt;
&lt;p&gt;然后开始翻译文档的时候，也还是容易经常变得很暴躁，尤其是遇到一些原文的语法错误、逻辑错误、自己鬼扯也扯不通顺的地方等等。&lt;/p&gt;
&lt;p&gt;但是后来我逐渐地开始钦佩这些创建了 Kivy 的人们，我意识到他们也跟我一样是一群热爱 Python 的人，想为更多的同样使用 Python 的开发者提供一个完整的工具链，以便于能更简洁轻快地实现跨平台开发。&lt;/p&gt;
&lt;p&gt;所以，我觉得 Kivy 是一个因为热爱而驱动去追寻自由的项目，这也让我逐渐对 Kivy …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Kivy中文编程指南：翻译始末&lt;/h1&gt;
&lt;h2&gt;翻译暂告段落&lt;/h2&gt;
&lt;p&gt;从去年开始的 &lt;a href="https://github.com/cycleuser/Kivy-CN"&gt;Kivy 编程指南中文翻译项目&lt;/a&gt;，今天基本算是弄完了，我把 Kivy Programming Guide 里面的全部内容翻译了一遍。&lt;/p&gt;
&lt;p&gt;这里就不贴了，大家可以去我的&lt;a href="https://zhuanlan.zhihu.com/python-kivy"&gt;知乎专栏&lt;/a&gt;或者我的 &lt;a href="https://github.com/cycleuser"&gt;GitHub&lt;/a&gt; 查看详细内容。&lt;/p&gt;
&lt;p&gt;当然了，质量还是不怎么样好，所以希望大家多批评指正，我会尽快改正。&lt;/p&gt;
&lt;p&gt;最开始用 Kivy 的时候，感觉有各种各样的 bug ，觉得安装和配置各种繁琐扯皮麻烦，心情也容易变得特别臭。&lt;/p&gt;
&lt;p&gt;然后开始翻译文档的时候，也还是容易经常变得很暴躁，尤其是遇到一些原文的语法错误、逻辑错误、自己鬼扯也扯不通顺的地方等等。&lt;/p&gt;
&lt;p&gt;但是后来我逐渐地开始钦佩这些创建了 Kivy 的人们，我意识到他们也跟我一样是一群热爱 Python 的人，想为更多的同样使用 Python 的开发者提供一个完整的工具链，以便于能更简洁轻快地实现跨平台开发。&lt;/p&gt;
&lt;p&gt;所以，我觉得 Kivy 是一个因为热爱而驱动去追寻自由的项目，这也让我逐渐对 Kivy 产生了更多的好感。&lt;/p&gt;
&lt;p&gt;事到如今我可能并不一定会有机会深入使用 Kivy 去开发，也依然希望 Kivy 能够发展壮大，生根发芽，开花散种，给更多的跟我一样初入门无所适从的新手一个友好又高效的选择。&lt;/p&gt;
&lt;p&gt;我对 Kivy 官方文档的翻译，暂告一段落。后面的 API 翻译，有一位知乎上的朋友表示有兴趣进行，一位非常年轻有为的少年。看到现在的青少年人都有如此的学习动力和探索精神，不由得让我感慨时代发展之快，自己奔四的路上，还有幸结识了众多初升的太阳。我相信他们会在未来闪耀，那个时代一定更美好。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;饥饿的分割线&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;当初开始翻译的原因&lt;/h2&gt;
&lt;p&gt;从去年开始，我陆续翻译了一些Kivy官方文档中的开发指南的内容。&lt;/p&gt;
&lt;p&gt;然后我又觉得有必要找一个更大的平台，以便于能给更多人提供一点便利，所以我又开了一个&lt;a href="https://zhuanlan.zhihu.com/python-kivy"&gt;知乎专栏&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然而新年这一阵，我做了个手术，身体状况不太好，感觉理解能力和表达能力也有所下降（其实本来也不行），所以我就想，不如按照之&lt;a href="https://github.com/cycleuser/ThinkPython-en-cn"&gt;前ThinkPython的中文翻译&lt;/a&gt;那样，直接把翻译稿开源放到Github吧，地址在&lt;a href="https://github.com/cycleuser/Kivy-CN"&gt;这里&lt;/a&gt;。虽然我并没有想出来这样有什么更好的。&lt;/p&gt;
&lt;p&gt;接触Kivy时间不长，一年多前最开始知道有这个项目的，当时的观感很差，因为遇到若干个Bug，反馈了之后也没见他们有什么动静。然后时间长了，发现跨平台的Python除了QT基本就只有这个了，相比之下，这个好歹不那么庞大，还是挺好玩的。但也就这样了，没有进一步关注。&lt;/p&gt;
&lt;p&gt;然后是要写&lt;a href="https://github.com/cycleuser/GeoPython"&gt;GeoPython&lt;/a&gt;，一些基础的方法都实现了之后，遇到了一些数学上的问题，然后学了一些数学相关的内容，大概有了解决思路之后，才意识到，TMD没有GUI啊，这样常规的地球科学领域的同行们根本懒得看对不对？日常用户才懒得吭哧吭哧学习如何在Bash或者Powershell之下使用iPython运行某个脚本对不对？所以我需要GUI，然而QT太庞大繁杂了，衡量了一下自己的智力水平，估计至少要花费半年才能大概入门。所以我又捡起来Kivy了。&lt;/p&gt;
&lt;p&gt;这个过程中我发现Kivy相关的中文资料还真不多，那我就从最基础的官方文档开始翻译一下吧，好歹自己边学习边相当于做笔记，以教促学，还能给人提供一点有用的参考，哪怕一丁点用处也好。&lt;/p&gt;
&lt;p&gt;就像我当年给人辅导研究生的C++和考博英语一样，其实也是给自己的持续学习找一个持久的动力，也是争取有一点能够积攒努力产生一个突破口。就像我的启蒙老师许先生当年给我讲的庞中华老前辈一样，一点一点积累总会有收获。&lt;/p&gt;
&lt;p&gt;我这些翻译的水平良莠不齐，其中有些简单的部分，我基本可以直接进行双语转换，这就不费什么力气。而由于我在编程的经验和水平两方面都比较差，有的部分一些术语名词翻译得不伦不类，所以我又只能心虚地标记上英文，避免对读者产生太严重的误导。&lt;/p&gt;
&lt;p&gt;但我还是会继续下去的，学习和翻译两个过程还不能停下来。我不能因为自己现在三十多岁了而且水平还很差，就停止学习提高的尝试，因为一旦停下来，就更是一点希望都没有了，那就是直接向命运举白旗投降了。&lt;/p&gt;
&lt;p&gt;虽然时代已经不同了，我还是很钦佩王江民老前辈，专注和持久而创造了传奇。我没有那么大的野心，也不奢求什么辉煌成就，只是觉得有生之年，做点不后悔的事情吧。&lt;/p&gt;</content><category term="Work"></category><category term="Python"></category><category term="Kivy"></category></entry><entry><title>VisPy</title><link href="/vispy.html" rel="alternate"></link><published>2017-02-25T00:00:00+08:00</published><updated>2017-02-25T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-02-25:/vispy.html</id><content type="html">&lt;h1&gt;VisPy 中文文档翻译&lt;/h1&gt;
&lt;p&gt;VisPy 是一个高性能交互式 2D/3D 数据可视化库，通过 OpenGL 库来对目前的图形处理单元（GPU）的计算性能进行充分利用，用于超大规模数据集的显示。&lt;/p&gt;
&lt;h1&gt;译者前言&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/cycleuser/Kivy-CN"&gt;Kivy 中文编程指南文档&lt;/a&gt;快翻译完了，现在又开了一个新坑，就是这个 &lt;a href="https://github.com/cycleuser/VisPy-CN"&gt;VisPy&lt;/a&gt;，这主要是因为我当前在开发的 &lt;a href="https://github.com/cycleuser/GeoPython"&gt;GeoPython&lt;/a&gt; 项目中存在着超大规模数据呈现的需求，所以我决定用显卡绘图来试一试。我此前从来没有任何 OpenGL 相关的经验，也完全是从零起步，一边学习，一边翻译，所以难免导致翻译质量的波动，而且大部分时刻可能是翻译得挺差的。然而我是一个希望把事情做了就尽量做好的人，所以大家发现任何错误，请一定不吝赐教，让我有改正和提高的机会。&lt;/p&gt;
&lt;p&gt;这里就不贴了，大家可以去我的&lt;a href="https://zhuanlan.zhihu.com/python-kivy"&gt;知乎专栏&lt;/a&gt;或者我的 &lt;a href="https://github.com/cycleuser"&gt;GitHub&lt;/a&gt; 查看详细内容。&lt;/p&gt;</content><category term="Work"></category><category term="Python"></category><category term="VisPy"></category><category term="Data"></category><category term="Visualization"></category></entry><entry><title>组装显微镜的那些事</title><link href="/zu-zhuang-xian-wei-jing-de-na-xie-shi.html" rel="alternate"></link><published>2017-02-16T11:20:00+08:00</published><updated>2017-02-16T11:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-02-16:/zu-zhuang-xian-wei-jing-de-na-xie-shi.html</id><summary type="html">&lt;h2&gt;此前的故事&lt;/h2&gt;
&lt;p&gt;在之前的一篇&lt;a href="http://blog.cycleuser.org/my-first-microscope.html"&gt;很闲扯口吻的叙事&lt;/a&gt;中，我提到了自己组装显微镜的初衷，也就是满足自己拆卸部件带来的那种病态的扭曲的满足感。当然了，我可以更正面地说成是一种好奇心驱使下的探索精神。&lt;/p&gt;
&lt;p&gt;然后知乎上有一位 ID 为&lt;a href="https://www.zhihu.com/people/peng-yu-69-10"&gt;彭宇&lt;/a&gt;的网友在&lt;a href="https://zhuanlan.zhihu.com/p/25226074"&gt;我的专栏转载&lt;/a&gt;中表示对显微镜很感兴趣，希望我能介绍一下显微镜摄影。&lt;/p&gt;
&lt;p&gt;根据我的理解，这个问题应该分成两个部分：
    1. 显微镜的组装；
    2. 用显微镜来进行摄影。&lt;/p&gt;
&lt;h2&gt;事先要做的功课&lt;/h2&gt;
&lt;p&gt;如果有充沛的资金支持，我还是更倾向于建议购买奥林巴斯 BX51 或者 BX53 这类已经广泛在国内高校和科研单位安装使用的显微镜。原因主要是配套服务和配件替换都比较省心，出了问题都能有很可靠的解决方案，只要花钱了，就都能搞定。&lt;/p&gt;
&lt;p&gt;然而大部分和我一样自己折腾组装显微镜的朋友，显然是不太愿意或者不太能够承担那么大的开销的。我们的需求往往简单一致，都是&lt;code&gt;能看就行&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们就讨论最简单的需求：能看。那么这里就要引入一个最重要的问题：你要观察的对象是什么？&lt;/p&gt;
&lt;p&gt;按照用途粗略划分，显微镜可以分为体视显微镜、生物显微镜、偏光显微镜等等。&lt;/p&gt;
&lt;h4&gt;体视显微镜&lt;/h4&gt;
&lt;p&gt;似乎更多用于精密仪器和电子设备维修等等，对此我很少接触，也不了解 …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;此前的故事&lt;/h2&gt;
&lt;p&gt;在之前的一篇&lt;a href="http://blog.cycleuser.org/my-first-microscope.html"&gt;很闲扯口吻的叙事&lt;/a&gt;中，我提到了自己组装显微镜的初衷，也就是满足自己拆卸部件带来的那种病态的扭曲的满足感。当然了，我可以更正面地说成是一种好奇心驱使下的探索精神。&lt;/p&gt;
&lt;p&gt;然后知乎上有一位 ID 为&lt;a href="https://www.zhihu.com/people/peng-yu-69-10"&gt;彭宇&lt;/a&gt;的网友在&lt;a href="https://zhuanlan.zhihu.com/p/25226074"&gt;我的专栏转载&lt;/a&gt;中表示对显微镜很感兴趣，希望我能介绍一下显微镜摄影。&lt;/p&gt;
&lt;p&gt;根据我的理解，这个问题应该分成两个部分：
    1. 显微镜的组装；
    2. 用显微镜来进行摄影。&lt;/p&gt;
&lt;h2&gt;事先要做的功课&lt;/h2&gt;
&lt;p&gt;如果有充沛的资金支持，我还是更倾向于建议购买奥林巴斯 BX51 或者 BX53 这类已经广泛在国内高校和科研单位安装使用的显微镜。原因主要是配套服务和配件替换都比较省心，出了问题都能有很可靠的解决方案，只要花钱了，就都能搞定。&lt;/p&gt;
&lt;p&gt;然而大部分和我一样自己折腾组装显微镜的朋友，显然是不太愿意或者不太能够承担那么大的开销的。我们的需求往往简单一致，都是&lt;code&gt;能看就行&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们就讨论最简单的需求：能看。那么这里就要引入一个最重要的问题：你要观察的对象是什么？&lt;/p&gt;
&lt;p&gt;按照用途粗略划分，显微镜可以分为体视显微镜、生物显微镜、偏光显微镜等等。&lt;/p&gt;
&lt;h4&gt;体视显微镜&lt;/h4&gt;
&lt;p&gt;似乎更多用于精密仪器和电子设备维修等等，对此我很少接触，也不了解，就不多说了。&lt;/p&gt;
&lt;h4&gt;生物显微镜&lt;/h4&gt;
&lt;p&gt;顾名思义，主要用来观测各种生物切片标本，常规用10倍目镜，10、20、40 等倍数的平场物镜，100 倍香柏油物镜等等。这种显微镜的入门成本最低，只需要结实耐用的架子加上便宜够用的平场消色差目镜以及说得过去的平场物镜就行了，可以参考知乎网友&lt;a href="https://www.zhihu.com/people/urea-young"&gt;urea young&lt;/a&gt;在&lt;a href="https://www.zhihu.com/question/36690424/answer/68814621"&gt;这篇回答中的讲解&lt;/a&gt;。这位网友是一名化学专业的博士，在显微镜、望远镜和DIY等话题都具有很深的造诣，大家可以多多学习。&lt;/p&gt;
&lt;h4&gt;偏光显微镜&lt;/h4&gt;
&lt;p&gt;这个就是我把玩十来年的老伙伴了，可以分透射偏光显微镜和反射偏光显微镜。前者用于观察透明-半透明矿物薄片，后者用于观察金属矿物抛光表面，以及部分透明-半透明矿物的内反射色。&lt;/p&gt;
&lt;h4&gt;偏光镜和生物镜&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;偏光显微镜，无论是透射光还是反射光，都具有内置的起偏器，具体为偏光方向垂直的两组偏光片，用于观察矿物的双折射现象。&lt;/li&gt;
&lt;li&gt;偏光显微镜通常有 1.25、4、10、20、40、50 倍的物镜，其中低倍数物镜的用途很广泛，比如观察岩石样品中矿物颗粒之间的接触关系等，这些低倍物镜在生物显微镜中很少用到；此外偏光显微镜的镜片光学素质要求比较高，尤其是在使用锥光对晶体参数进行测量等用途。&lt;/li&gt;
&lt;li&gt;偏光显微镜对光源素质要求极高，通常都要求具有连续的光谱，需要高显色性，因此往往使用卤素灯做光源。虽然现在有纳晶之类的所谓&lt;code&gt;高显色LED灯珠&lt;/code&gt;，但我去过的各个高校实验室还是普遍以卤素灯为主。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;显微镜的组装&lt;/h2&gt;
&lt;h4&gt;寻觅镜架&lt;/h4&gt;
&lt;p&gt;首先是利用各种同学关系找熟人，得知有成都理工淘汰的显微镜流出，几经周折得知是江南 XPT-6 透射光偏光显微镜。这款镜子在淘宝上也能偶尔搜到一些二手藏品，通常也都是武汉地大或者成都理工之类的老牌地质类高校淘汰的设备流出到了个人手中，成色不同，价格在 500 - 1200 之间波动。比较推荐购买这种国产的大路货，各种配件坏了多少还有机会淘到同款来替换，而且做工方面也是对得住这个价格。&lt;/p&gt;
&lt;p&gt;淘宝上也有一些捷克或者前苏联的偏光显微镜，但是这些镜子的接口和通用配件未必能够完美兼容，所以维护和改造都是很痛苦的，虽然价格便宜也就几百元，但是不太推荐购买。&lt;/p&gt;
&lt;p&gt;然而我这次买到的只花了大概不到 400 元，因为买到的是空架子，目镜报废，物镜只有 10 倍和 40 倍的，好在镜架的调焦螺旋等都还能够正常工作。&lt;/p&gt;
&lt;h4&gt;搭配镜头&lt;/h4&gt;
&lt;p&gt;接下来就是要四处买来一些零件了。首先是淘来平场消色差的 10 倍目镜，花了不到 200 ，买到了一个极品成色的来自奥林巴斯的同口径目镜；又花了 400 买来了两只成色尚可接受的 4 倍和 20 倍物镜。这枚 4 倍物镜非常难寻觅，一般用户觉得没什么用，就都不见得保管得多完好，所以为了成色又充值了一番信仰。但实际上更难找到的是可用的 1.25 倍镜，我一直都没能找到成色能够接受的又能完美使用的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://7xnq2o.com1.z0.glb.clouddn.com/MicroScope%E9%95%9C%E5%A4%B4.jpeg?imageView/2/w/420/q/90"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【上图】刚收到的几个物镜，其中物镜两侧的小杆是用来调整物镜中心与载物台中心重合的旋杆&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;光源选择&lt;/h4&gt;
&lt;p&gt;镜架和目镜、物镜都齐全了之后，就是要解决光源这个大问题了。上文说了，必须要用显色性好的光谱连续的光源，所以推荐使用欧司朗或者飞利浦的 12V 卤素灯珠，一般功率在 20W 左右，色温偏暖可以通过增加一枚蓝色玻璃来解决。我懒得单独给光源提供一个电压转换设备，所以平时都直接在中午的时候使用日光加聚光镜来观测，但这样随着太阳变化，亮度很难控制，所以在看边界形态的时候，我就直接用充电宝带一枚小米 led 来凑活了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://7xnq2o.com1.z0.glb.clouddn.com/MicroScope%E9%95%9C%E5%AD%90.jpeg?imageView/2/w/420/q/90"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【上图】绝对不要跟我学着这样使用光源来观察吸收性和干涉色&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;各种调教&lt;/h4&gt;
&lt;p&gt;目镜和物镜到手了，对镜架和目镜物镜整体用高压惰性气体吹洗除尘。之后安装上去，光源也有了，但是还不能马上就看。&lt;/p&gt;
&lt;p&gt;第一步必须要调整偏光，校正上下偏光垂直，因为年久失修，显微镜的偏光标尺与实际的上下偏光角度可能会有偏差，所以这一步是很多新手都容易忽视的。
接下来就是校正锥光是否正常工作，对准勃氏镜与镜筒的中心位置。
最后一步是放上样品薄片，旋转物镜上的两根对中调节旋杆，保证光路中央与载物台圆心重合。&lt;/p&gt;
&lt;h2&gt;拍照的那些事&lt;/h2&gt;
&lt;p&gt;照片拍摄有三种方法，最常用的莫过于使用电子目镜，这个就不说了，简单粗暴但是挺贵的，如果你的手机拍照质量很棒，或者你已经有一台传感器尺寸大于宾得 Q 系统的可换镜头相机，就不推荐你买电子目镜了。&lt;/p&gt;
&lt;p&gt;使用手机拍照，需要一种&lt;code&gt;显微镜接手机手机支架&lt;/code&gt;。这种支架用一个圆圈铁箍套在目镜位置，然后调节手机摄像头对准目镜，再使用手机通过目镜来进行拍摄。好处是简单便宜，缺点是对焦操作麻烦而且拍摄质量堪忧。&lt;/p&gt;
&lt;p&gt;另一种是使用&lt;code&gt;显微镜转接单反卡口的转接环&lt;/code&gt;，这需要根据显微镜的目镜筒口径以及你的相机卡口来进行购买。这种成像质量要比电子目镜好很多，而且可以使用RAW文件，对曝光可以后期调节，对细节的呈现非常完美；缺点是缺乏一些软件的支持，添加比例尺等等有点麻烦。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://img.alicdn.com/imgextra/i1/TB1PUPhHpXXXXcpXFXXXXXXXXXX_!!0-item_pic.jpg_430x430q90.jpg"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【上图】马云家某商户的&lt;code&gt;显微镜接手机手机支架&lt;/code&gt;，侵删&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://img.alicdn.com/imgextra/i3/1759739125/TB2rG0ucFXXXXXrXXXXXXXXXXXX_!!1759739125.jpg_430x430q90.jpg"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【上图】马云家某商户的&lt;code&gt;显微镜转接单反卡口的转接环&lt;/code&gt;，侵删&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在选择了上面的设备之后，剩下的使用技巧就都要在实践中积累了。比如用单向解理的云母校正偏光夹角，以及用细小粒状矿物逐步调整对中，很多经验都是摸索出来的，也是难以一两句话讲述明白的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://7xnq2o.com1.z0.glb.clouddn.com/MicroScope10*10.jpeg?imageView/2/w/420/q/90"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【上图】我拍摄的石榴石环带&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;平心而论，我的摄影技术是很差很差的，这可以参考我拍摄的石榴石。显微镜下的摄影，我真没什么可说，因为自己不懂摄影。因为我用显微镜拍照主要是记录一些观察到的现象，而并不具有艺术性的动机；此外我这个人比较欠缺审美的情趣，在摄影等方面没有点天赋和技能点。&lt;/p&gt;
&lt;p&gt;但是要是说用显微镜拍照，我倒是能讲点。&lt;/p&gt;
&lt;p&gt;首先就是显微镜拍照的视域有限，构图要突出最关注的特征。比如我拍的是石榴石的环带而不是方解石的机械双晶，这是因为当时石榴石是我的主要观察目标，而方解石则不是；相比没有环带结构的石榴石，这种在特定样品中普遍出现的环带更具有代表性。&lt;/p&gt;
&lt;p&gt;然后就是显微镜下拍照能遇到各种问题，很考验解决问题的经验。操作灵活，光强不够怎么办？适当延长曝光时间。景深太浅怎么办？调小光圈降低进光量。手碰到了产生晃动怎么办？用快门线或者遥控。在日常拍照中的各种问题在显微镜下会体现的更加直白，稍微做一些调整，就会有很明显的效果改变。&lt;/p&gt;
&lt;p&gt;我这全套下来的成本不超过 1000 元，其中还包括一台收来的二手微单机身。
有限的预算加上适当的折腾，在满足需求的同时也带来极大的快乐。&lt;/p&gt;
&lt;p&gt;和&lt;a href="http://blog.cycleuser.org/telescope.html"&gt;上一篇&lt;/a&gt;的结语一样：
&lt;strong&gt;想要做什么，就动手试试吧。&lt;/strong&gt;&lt;/p&gt;</content><category term="Story"></category><category term="Microscope"></category><category term="Story"></category></entry><entry><title>ChromeBook Install GalliumOS：Baytrail</title><link href="/chromebook-install-galliumosbaytrail.html" rel="alternate"></link><published>2017-02-08T00:00:00+08:00</published><updated>2017-02-08T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-02-08:/chromebook-install-galliumosbaytrail.html</id><summary type="html">&lt;h1&gt;ChromeBook安装GalliumOS：Baytrail 平台&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://wiki.galliumos.org/Installing/Baytrail#mw-head"&gt;英文原文地址&lt;/a&gt;
&lt;a href="http://blog.cycleuser.org"&gt;CycleUser&lt;/a&gt;翻译&lt;/p&gt;
&lt;p&gt;在Baytrail平台的ChromeOS设备上面安装GalliumOS有两种模式，可以双系统可选启动，也可以单独安装GalliumOS。单独安装就是把GalliumOS安装到内置存储中，替换掉ChromeOS，或者就是把GalliumOS安装到一个外置存储，比如SD卡、U盘或者USB外接固态硬盘等等，然后保持内置ChromeOS不被修改；双系统启动模式就是让GalliumOS和ChromeOS都共存在内置存储里面，然后用户可以在开机的时候通过键盘快捷键来选择要启动的系统。&lt;/p&gt;
&lt;p&gt;然而，由于Baytrail设备一般默认是不提供任何传统启动支持的，所以&lt;a href="https://wiki.galliumos.org/Firmware"&gt;刷新固件&lt;/a&gt; 就是必需步骤了，只有这样才能运行GalliumOS，以及除了ChromeOS之外的所有其他操作系统。&lt;/p&gt;
&lt;h2&gt;步骤说明&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先是切换到开发者模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后刷新固件添加传统引导模式支持&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来就是安装GalliumOS操作系统了&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单独安装GalliumOS&lt;/li&gt;
&lt;li&gt;双启动安装&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特殊设备的说明&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lenovo 100S (ORCO)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;切换到开发者模式&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;开发者模式&lt;/code&gt;和常规的&lt;code&gt;标准模式&lt;/code&gt;/&lt;code&gt;安全引导模式&lt;/code&gt;不同，允许用户完全控制整个设备和操作系统，要运行和安装GalliumOS就必须要切换到这种&lt;code&gt;开发者模式&lt;/code&gt;。要注意，无论是切换成开发者模式，还是从开发者模式切换到浦东模式，都将会抹掉设备上的所有本地用户数据，所以动手之前要谨慎，一定注意多备份。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;关机 …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h1&gt;ChromeBook安装GalliumOS：Baytrail 平台&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://wiki.galliumos.org/Installing/Baytrail#mw-head"&gt;英文原文地址&lt;/a&gt;
&lt;a href="http://blog.cycleuser.org"&gt;CycleUser&lt;/a&gt;翻译&lt;/p&gt;
&lt;p&gt;在Baytrail平台的ChromeOS设备上面安装GalliumOS有两种模式，可以双系统可选启动，也可以单独安装GalliumOS。单独安装就是把GalliumOS安装到内置存储中，替换掉ChromeOS，或者就是把GalliumOS安装到一个外置存储，比如SD卡、U盘或者USB外接固态硬盘等等，然后保持内置ChromeOS不被修改；双系统启动模式就是让GalliumOS和ChromeOS都共存在内置存储里面，然后用户可以在开机的时候通过键盘快捷键来选择要启动的系统。&lt;/p&gt;
&lt;p&gt;然而，由于Baytrail设备一般默认是不提供任何传统启动支持的，所以&lt;a href="https://wiki.galliumos.org/Firmware"&gt;刷新固件&lt;/a&gt; 就是必需步骤了，只有这样才能运行GalliumOS，以及除了ChromeOS之外的所有其他操作系统。&lt;/p&gt;
&lt;h2&gt;步骤说明&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先是切换到开发者模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后刷新固件添加传统引导模式支持&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来就是安装GalliumOS操作系统了&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单独安装GalliumOS&lt;/li&gt;
&lt;li&gt;双启动安装&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特殊设备的说明&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lenovo 100S (ORCO)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;切换到开发者模式&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;开发者模式&lt;/code&gt;和常规的&lt;code&gt;标准模式&lt;/code&gt;/&lt;code&gt;安全引导模式&lt;/code&gt;不同，允许用户完全控制整个设备和操作系统，要运行和安装GalliumOS就必须要切换到这种&lt;code&gt;开发者模式&lt;/code&gt;。要注意，无论是切换成开发者模式，还是从开发者模式切换到浦东模式，都将会抹掉设备上的所有本地用户数据，所以动手之前要谨慎，一定注意多备份。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;关机&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按住[ESC+F3(Refresh)+Power]这三个键，让机器引导进入恢复模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你会看到一个提示，上面是警告说"Chrome OS is missing or damaged" ，意思是说ChromeOS丢失或损坏，不过&lt;strong&gt;别怕&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按[CTRL+D]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;这下就会看到一个信息了，问你是否要开启开发者模式，同时关闭操作系统校验，当然是按回车键确认了&lt;/li&gt;
&lt;li&gt;等待数据清除完成，这估计得几分钟吧&lt;/li&gt;
&lt;li&gt;数据清除完成之后，设备会重启，然后就能看到白色的开发者模式启动背景了，会提示你操作系统校验已关闭&lt;ul&gt;
&lt;li&gt;要注意了！千万&lt;strong&gt;不要&lt;/strong&gt;按回车键或者空格键，这样会重新开机操作系统校验，这时候一定要只按[CTRL+D]来跳过这个30秒倒计时，然后引导ChromeOS，这个倒计时时间以后还可以修改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;添加传统引导模式兼容&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在ChromeOS登录界面，确保网络连接已经建立，但&lt;strong&gt;千万不要&lt;/strong&gt;登录进入ChromeOS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过按[CTRL+ALT+F2]这三个键的组合或者在顶端右击来开启一个Crosh Shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以&lt;code&gt;chronos&lt;/code&gt;的身份登录，不需要输入密码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载并运行&lt;a href="https://wiki.galliumos.org/Firmware"&gt;固件更新脚本&lt;/a&gt;，一定挑选好适合你设备的脚本来安装&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装RW_LEGACY或者BOOT_STUB，两种固件二选一即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;要双系统启动的话，就一定要安装RW_LEGACY固件；BOOT_STUB那个固件不支持双系统引导&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此外，RW_LEGACY用户可能还需要更改引导默认项类型（比如默认引导ChromeOS还是Legacy），或修改引导界面倒计时的时间，这都可以通过安装脚本来完成。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;安装GalliumOS&lt;/h2&gt;
&lt;h3&gt;独立安装&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://galliumos.org/download"&gt;下载针对&lt;strong&gt;Baytrail&lt;/strong&gt;的GalliumOS ISO光盘镜像&lt;/a&gt; 然后根据&lt;a href="https://wiki.galliumos.org/Installing/Creating_Bootable_USB" title="Installing/Creating Bootable USB"&gt;安装U盘制作之南&lt;/a&gt; 来创建安装U盘&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将安装盘插入USB口，优先使用USB2接口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你安装的固件是RW_LEGACY，并且没有设传统引导模式为默认选项，那就按[CTRL+L]来启动传统引导&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在SeaBIOS启动界面，在提示出现后按ESC，就能看到引导菜单了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择GalliumOS U盘来启动&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果Grub引导菜单出现了，就选择Live模式，然后按回车引导进入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行安装程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择要安装GalliumOS的设备：
        * 如果要安装到内置存储，就选择&lt;code&gt;/dev/mmcblk0&lt;/code&gt;
        * 如果要按照到外置的SD卡或者U盘等等，就选择&lt;code&gt;/dev/mmcblk1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进行安装，然后重启并根据提示拔出安装盘&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后就可以玩转GalliumOS了!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;双系统安装&lt;/h3&gt;
&lt;p&gt;双系统安装需要两部：首先用安装脚本对设备内置存储进行调整大小；然后再进行安装。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在ChromeOS登录界面，确保网络连接已经建立，但&lt;strong&gt;千万不要&lt;/strong&gt;登录进入ChromeOS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过按[CTRL+ALT+F2]这三个键的组合或者在顶端右击来开启一个Crosh Shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以&lt;code&gt;chronos&lt;/code&gt;的身份登录，不需要输入密码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载并运行&lt;a href="http://chrx.org/"&gt;chrx安装脚本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Bash
curl -Os https://chrx.org/go &amp;amp;&amp;amp; sh go&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;出现提示后，输入要分配给GalliumOS的分区空间大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;chrx脚本会重启设备；这时候按[CTRL+D]来引导ChromeOS，然后允许系统进行&lt;code&gt;自我修复&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修复完成之后，设备又要重启了；还是按[CTRL+D]来引导ChromeOS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过按[CTRL+ALT+F2]这三个键的组合或者在顶端右击来开启一个Crosh Shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以&lt;code&gt;chronos&lt;/code&gt;的身份登录，不需要输入密码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再次下载并运行&lt;a href="http://chrx.org/"&gt;chrx安装脚本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Bash
curl -Os https://chrx.org/go &amp;amp;&amp;amp; sh go&lt;/code&gt;
   注意: 这里你也可以添加任何其他的命令行参数，来安装额外的包，比如Kodi，Steam，Minecraft等等，更多细节参考&lt;a href="http://chrx.org/"&gt;chrx.org&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;chrx脚本会安装GalliumOS，然后安装完了就重启了；使用[CTRL+L]就能启动到传统引导模式了。（这一步需要注意，第二次运行这个chrx脚本是用来安装系统的，但是我实际测试在大陆的网络下，chrx脚本会经常出现不返回任何结果的现象，我的设备上测试发现时curl命令所指向的地址被Glory Flower Warm阻拦，然后我尝试用ss连接后运行命令，发现依然是无效的。所以用另外一种替代方式进行安装：修复ChromeOS之后，关机重启，用Ctrl+L进入legacy引导，按ESC选择USB设备安装GalliumOS，注意安装到用chrx划分出来的分区。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后就可以玩转GalliumOS了!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;特殊设备的说明&lt;/h2&gt;
&lt;h3&gt;Lenovo 100S (ORCO)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;John Lewis 的固件升级脚本能够识别 联想100s ORCO 这款设备，也能安装他的BOOT_STUB， 但写本篇文档的时候(20160417)，&lt;strong&gt;还不能够成功引导GalliumOS&lt;/strong&gt;。这有可能只是一个暂时的bug，不过还是建议你去&lt;a href="https://www.reddit.com/r/GalliumOS/comments/4dr759/galliumos_on_lenovo_100s_no_sound_through/"&gt;Reddit论坛&lt;/a&gt;来看看进展之类的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MattDevo 的 RW_LEGACY固件升级脚本 &lt;strong&gt;完全能够&lt;/strong&gt; 引导GalliumOS，并且同时支持单独安装和双系统安装。更多信息参考&lt;a href="https://wiki.galliumos.org/Firmware"&gt;固件更新脚本&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="ChromeBook"></category><category term="ChromeBook"></category><category term="Hack"></category></entry><entry><title>ChromeBook Install GalliumOS：Preparing</title><link href="/chromebook-install-galliumospreparing.html" rel="alternate"></link><published>2017-02-08T00:00:00+08:00</published><updated>2017-02-08T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-02-08:/chromebook-install-galliumospreparing.html</id><summary type="html">&lt;h1&gt;ChromeBook安装GalliumOS：准备部分&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://wiki.galliumos.org/Installing/Preparing"&gt;英文原文地址&lt;/a&gt;
&lt;a href="http://blog.cycleuser.org"&gt;CycleUser&lt;/a&gt;翻译&lt;/p&gt;
&lt;p&gt;在ChromeBook或者ChromeBox这类ChromeOS设备上安装其他操作系统，都必须首先开启开发者模式。&lt;strong&gt;很多&lt;/strong&gt;机型还需要更新固件，当然这也看安装类型。&lt;/p&gt;
&lt;p&gt;不同设备的安装前准备步骤是不一样的，所以要先确认自己ChromeOS设备的硬件ID。在ChromeOS内，导航到&lt;code&gt;chrome://system&lt;/code&gt;，找到&lt;code&gt;hardware_class&lt;/code&gt;这一项，就是硬件ID了。&lt;/p&gt;
&lt;p&gt;Next, check our &lt;a href="https://wiki.galliumos.org/Hardware_Compatibility" title="Hardware Compatibility"&gt;Hardware Compatibility&lt;/a&gt; page to determine your device's CPU family. For example, the Acer C720's Hardware ID is &lt;code&gt;PEPPY&lt;/code&gt;, and the CPU Family is &lt;code&gt;Haswell&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;接下来，要安装GalliumOS，还要去 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;ChromeBook安装GalliumOS：准备部分&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://wiki.galliumos.org/Installing/Preparing"&gt;英文原文地址&lt;/a&gt;
&lt;a href="http://blog.cycleuser.org"&gt;CycleUser&lt;/a&gt;翻译&lt;/p&gt;
&lt;p&gt;在ChromeBook或者ChromeBox这类ChromeOS设备上安装其他操作系统，都必须首先开启开发者模式。&lt;strong&gt;很多&lt;/strong&gt;机型还需要更新固件，当然这也看安装类型。&lt;/p&gt;
&lt;p&gt;不同设备的安装前准备步骤是不一样的，所以要先确认自己ChromeOS设备的硬件ID。在ChromeOS内，导航到&lt;code&gt;chrome://system&lt;/code&gt;，找到&lt;code&gt;hardware_class&lt;/code&gt;这一项，就是硬件ID了。&lt;/p&gt;
&lt;p&gt;Next, check our &lt;a href="https://wiki.galliumos.org/Hardware_Compatibility" title="Hardware Compatibility"&gt;Hardware Compatibility&lt;/a&gt; page to determine your device's CPU family. For example, the Acer C720's Hardware ID is &lt;code&gt;PEPPY&lt;/code&gt;, and the CPU Family is &lt;code&gt;Haswell&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;接下来，要安装GalliumOS，还要去 &lt;a href="https://wiki.galliumos.org/Hardware_Compatibility" title="Hardware Compatibility"&gt;硬件兼容性列表页面&lt;/a&gt; 去检查一下你设备的处理器是否被支持。比如，Acer的C720的硬件ID是&lt;code&gt;PEPPY&lt;/code&gt;，CPU代号是&lt;code&gt;Haswell&lt;/code&gt;，这就可以支持了。&lt;/p&gt;
&lt;p&gt;搞定了上面这些，确认好自己的设备被GalliumOS支持，就可以继续了。&lt;/p&gt;
&lt;h2&gt;1：开启开发者模式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;：开启开发者模式会把当前设备中已有的用户信息全部抹掉。如果你有存储在本地数据收，一定要先备份。在线的那些数据就没影响了，不会被抹掉的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;把设备关机，然后按Esc+F3(refresh刷新)+Power（电源键），启动进入到Recovery恢复模式；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这时候你就会看到Recovery界面，上面可能会提示你"ChromeOS is damaged or missing" ，意思是说ChromeOS操作系统损坏或者丢失了，实际上并没有啦；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来按[Ctrl+D]来开启开发者模式，然后接下来就是各种确认的步骤，一般就一直按回车键确认就行了；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;机器就会重启到白屏幕了，上面会写着"OS verification is OFF"，意思是操作系统校验已关闭。这就说明进入了开发者模式了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来要启动传统引导模式（如果你更新过BIOS固件就可以跳过这一步了，因为新固件应该会自动完成这一步，不用人去手动设置）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;按[Ctrl+D]启动到&lt;strong&gt;开发者模式&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;必要的话要配置一些WiFi，然后登录到Chrome（用Guest访客账户就行）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按[Ctrl+Alt+T]来打开一个ChromeOS的终端窗口(这个终端也叫"crosh")&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在终端里面的提示符后面输入 &lt;code&gt;shell&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;到了 &lt;code&gt;chronos@localhost / $&lt;/code&gt; 这里了, 输入下面的命令并回车运行:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo crossystem &lt;span class="nv"&gt;dev_boot_legacy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;2：刷新固件（必要情况下再这样折腾）&lt;/h2&gt;
&lt;p&gt;刚刚不是确定了硬件ID和CPU代号了么？这一步就用上了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sandy Bridge&lt;/strong&gt; 机型 &lt;strong&gt;必须要&lt;/strong&gt;刷修改过的固件(Google Chromebook Pixel 2013   LINK除外哈)；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bay Trail&lt;/strong&gt; 和 &lt;strong&gt;Braswell&lt;/strong&gt; 机型&lt;strong&gt;必须要&lt;/strong&gt;修改过的固件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Haswell&lt;/strong&gt;, &lt;strong&gt;Broadwell&lt;/strong&gt;, 以及 &lt;strong&gt;Skylake&lt;/strong&gt; 机型，用修改估计&lt;strong&gt;更方便&lt;/strong&gt;，某些型号根据安装类型不同而可能出现必须要刷固件的情况。具体情况参考&lt;a href="https://wiki.galliumos.org/Hardware_Compatibility" title="Hardware Compatibility"&gt;硬件兼容性列表页面&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很多机型都有定制固件，这些估计种类繁多，来源各异。参考&lt;a href="https://wiki.galliumos.org/Firmware" title="Firmware"&gt;固件信息页面&lt;/a&gt;来查找适合你设备的固件。&lt;/p&gt;
&lt;h3&gt;2.1：关闭写保护（必要情况下再这样折腾）&lt;/h3&gt;
&lt;p&gt;某些特定类型的固件(比如&lt;code&gt;BOOT_STUB&lt;/code&gt;和&lt;code&gt;Full ROM&lt;/code&gt;) 都需要关闭设备的写保护。所以一定先去&lt;a href="https://wiki.galliumos.org/Firmware" title="Firmware"&gt;固件信息页面&lt;/a&gt;好好阅读，弄清楚自己设备的情况！ChromeOS设备上的写保护一般是由一颗螺丝控制的，不过有的机器是一块导电贴纸，更老一点的机器会有跳线。这些写保护螺丝、贴纸、跳线的位置随着机型不同而变化，不过总的来说，你都得拆机。&lt;/p&gt;
&lt;p&gt;所以可能有时候就得搜索你对应型号的"Chromebook 关闭写保护"这样的关键词，往往能获得详细的指导，有图文之类的。如果找不到，可以去&lt;a href="https://reddit.com/r/GalliumOS"&gt;GalliumOS论坛&lt;/a&gt;或者&lt;a href="https://galliumos.org/irc"&gt;#galliumos通信群&lt;/a&gt;求助。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;译者注：还是建议搜索英文关键词chromebook disable write-protect；
毕竟英语世界玩这个的可能比中文世界要多一些吧。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2.2: 安装/升级固件&lt;/h3&gt;
&lt;p&gt;在ChromeOS的终端里面就可以安装/升级固件了，或者也可以从运行中的Linux系统下进行这个操作。在ChromeOS下用终端来更新的大概过程如下所示：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;按[Ctrl+D]启动到&lt;strong&gt;开发者模式&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;必要的话要配置一些WiFi，然后登录到Chrome（用Guest访客账户就行）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按[Ctrl+Alt+T]来打开一个ChromeOS的终端窗口(这个终端也叫"crosh")&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在终端里面的提示符后面输入 &lt;code&gt;shell&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选好要安装的固件。还是参考&lt;a href="https://wiki.galliumos.org/Firmware" title="Firmware"&gt;固件信息页面&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;出现&lt;code&gt;chronos@localhost / $&lt;/code&gt;了，在提示符后面输入命令来更新固件。更新固件的命令得去&lt;a href="https://mrchromebox.tech/#fwscript"&gt;固件开发者的站点&lt;/a&gt;去看看，可能有变化什么的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行MrChromebox's固件工具脚本 (&lt;a href="https://mrchromebox.tech/#fwscript"&gt;固件开发者的站点&lt;/a&gt;)
    &lt;code&gt;Bash
cd; curl -LO https://mrchromebox.tech/firmware-util.sh &amp;amp;&amp;amp; sudo bash firmware-util.sh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来就是根据屏幕上出现的指引来选择一种固件类型来安装了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;3：开发者模式界面下其他选项&lt;/h2&gt;
&lt;p&gt;The Developer Mode boot screen offers a few additional options. The most important one is Ctrl+L for Legacy Mode booting, which you will use to boot GalliumOS after installing (depending on your firmware choice). Here is the full list:&lt;/p&gt;
&lt;p&gt;开发者启动界面有几种不同的选项。最重要的是[Ctrl+L]来进入传统引导模式，咱们更新固件之后安装GalliumOS就是要用这个模式。
下面是对不同选项的介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[Ctrl+D] 这就是启动ChromeOS设备进入到开发者模式&lt;/li&gt;
&lt;li&gt;[Ctrl+L] 这个是用来启用传统引导模式，一般安装Linux之后就得用这个了&lt;/li&gt;
&lt;li&gt;[Ctrl+U] 这个是从USB上的镜像来引导ChromeOS或者ChromiumOS，平时大家肯定用不上这个选项&lt;/li&gt;
&lt;li&gt;[TAB] 这个是启动配置信息什么的。&lt;/li&gt;
&lt;/ul&gt;</content><category term="ChromeBook"></category><category term="ChromeBook"></category><category term="Hack"></category></entry><entry><title>九阴真经与苹果手机</title><link href="/jiu-yin-zhen-jing-yu-ping-guo-shou-ji.html" rel="alternate"></link><published>2017-01-17T10:20:00+08:00</published><updated>2017-01-17T10:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-01-17:/jiu-yin-zhen-jing-yu-ping-guo-shou-ji.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="http://ww4.sinaimg.cn/mw690/75006d25gw1fbtuzhh76uj21kw1877ka.jpg"&gt;
这题目是不是有点奇怪？是不是讲苹果手机的？还是讲营销的？
都不是。&lt;/p&gt;
&lt;p&gt;今天跟一些青年科学家讨论关于晶体场稳定能相关的课题，大家帮我推荐了一些学者和作品，其间谈到了教材这个话题。&lt;/p&gt;
&lt;p&gt;这几年来，我发现有相当多的一部分同学，对教材根本不重视，甚至从来不阅读，而个热衷于从教师处复制课件，从前辈师兄师姐处搜集课程笔记和往年题目，期末寄希望于题海，考完了就基本告别这门课程，甚至这一学科。&lt;/p&gt;
&lt;p&gt;如今的这些科学文化知识，集中体现在了不同层次的文献上，进一步萃取提炼，凝结而成教材。当然，现在有的教材质量堪忧，但整体依然是对某一学科的高度的概括和总结，并且具有导论的效用。&lt;/p&gt;
&lt;p&gt;一如既往，我脑洞大开了一下。
如果时代背景挪到古代，那这些知识集中载体就可谓是秘籍一样的存在。而且那种很稀缺又很有效的教材对于读书人来说，正如同武功秘籍对于武林人士一样，弥足珍贵，甚至非常抢手。&lt;/p&gt;
&lt;p&gt;然后我又再开了一层脑洞。
假如在射雕英雄传的平行宇宙中，郭靖黄蓉获得了《九阴真经》，并且出于侠之大者共产主义的大无畏和奉献精神，把这本秘籍精心翻译，整理成通俗汉语版本，并且刊印发行，全国售卖，冀以此促进大宋的全民武术水平，能够更有力地保卫国家，抵抗外族侵略。&lt;/p&gt;
&lt;p&gt;事情会怎么发展呢？恐怕未必尽如人意。很有可能是产生了大量围绕着《九阴真经》而编写的教辅资料，并且开始有了各种培训班 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="http://ww4.sinaimg.cn/mw690/75006d25gw1fbtuzhh76uj21kw1877ka.jpg"&gt;
这题目是不是有点奇怪？是不是讲苹果手机的？还是讲营销的？
都不是。&lt;/p&gt;
&lt;p&gt;今天跟一些青年科学家讨论关于晶体场稳定能相关的课题，大家帮我推荐了一些学者和作品，其间谈到了教材这个话题。&lt;/p&gt;
&lt;p&gt;这几年来，我发现有相当多的一部分同学，对教材根本不重视，甚至从来不阅读，而个热衷于从教师处复制课件，从前辈师兄师姐处搜集课程笔记和往年题目，期末寄希望于题海，考完了就基本告别这门课程，甚至这一学科。&lt;/p&gt;
&lt;p&gt;如今的这些科学文化知识，集中体现在了不同层次的文献上，进一步萃取提炼，凝结而成教材。当然，现在有的教材质量堪忧，但整体依然是对某一学科的高度的概括和总结，并且具有导论的效用。&lt;/p&gt;
&lt;p&gt;一如既往，我脑洞大开了一下。
如果时代背景挪到古代，那这些知识集中载体就可谓是秘籍一样的存在。而且那种很稀缺又很有效的教材对于读书人来说，正如同武功秘籍对于武林人士一样，弥足珍贵，甚至非常抢手。&lt;/p&gt;
&lt;p&gt;然后我又再开了一层脑洞。
假如在射雕英雄传的平行宇宙中，郭靖黄蓉获得了《九阴真经》，并且出于侠之大者共产主义的大无畏和奉献精神，把这本秘籍精心翻译，整理成通俗汉语版本，并且刊印发行，全国售卖，冀以此促进大宋的全民武术水平，能够更有力地保卫国家，抵抗外族侵略。&lt;/p&gt;
&lt;p&gt;事情会怎么发展呢？恐怕未必尽如人意。很有可能是产生了大量围绕着《九阴真经》而编写的教辅资料，并且开始有了各种培训班，《九阴真经从入门到放弃》、《7天读懂的极简九阴真经》、《难中天品九阴真经》乃至《关于深入开展学习九阴真经的若干重大决定》，恐怕就会纷至沓来。然而大宋人民却未必都真正去修炼，而且修炼者也未必都仔细研读精心琢磨，仍然是只有少部分五绝一样的人物努力钻研修炼出成果。最终这本书热了一阵之后，就成了又一本经典而已，沦为了四书五经那种远离最广大人民群众的应试教材了。&lt;/p&gt;
&lt;p&gt;接下来脑洞回来到我们的现实世界，很多经典教材，例如《无机结构化学》、《具体数学》、《成矿地球化学》等等，其实也就跟《九阴真经》这种武功秘籍差不多，在我国知识匮乏的时代都是难能可贵的秘籍宝典，而广泛展开高等教育之后，即便是本专业的学生，也未必认真研读。总是只有一部分人，真正觉得教材是需要重视和理解的，并且身体力行地去实践，而应付过关即可的人是相当多的。&lt;/p&gt;
&lt;p&gt;难以获得的时候就觉得有价值，普遍拥有了就不当做一回事。我觉得这就是一种短视，是人类社会目前普遍存在的一种认知障碍。&lt;/p&gt;
&lt;p&gt;所以这时候我就要扯到苹果了。
我清晰的记得当年那么多人疯狂抢购苹果手机，甚至为此不惜卖身卖肾等等，那时候我就很不理解他们为何要付出这么惨烈的代价。然后前几天我发现当年的那些苹果手机，现在二手售卖的价格不过数百元而已。那么那些卖身卖肾的人，或者不顾一切给父母制造经济负担的抢购者，他们会怎么想呢？&lt;/p&gt;
&lt;p&gt;别想着《九阴真经》了，即便有完善的翻译和配套教材辅导资料给你，你也不一定认真阅读；别想着Vai或者Joe同款的电吉他了，拿到手了也可能受限于你仅仅掌握的三个和弦而无法演奏出多么高明的乐曲；没必要去买各种变焦牛头和定焦公主镜头，你现在还未必能够用好手中的套头，甚至算不清楚各种参数；别想着最新式的消费类电子产品了，过几年通常都会降价并被淘汰，所以不太值得花费过多在这些事情上面。&lt;/p&gt;
&lt;p&gt;或者反过来，如果你遇到了《九阴真经》，不论是三块钱一本还是三十块一本，只要你感兴趣，就值得好好阅读和学习；如果你喜欢音乐，手头的琴只要音准可以并且音色过得去，就应当拿来好好练习演奏；如果你遇到一枚还过得去的镜头，就拿来记录那些你珍惜的场景画面，而别轻易就嫌弃了要换光圈更大的；如果你有一台能用的还算比较流畅的电子设备，就那么凑活着用着吧，生活有很多其他值得花费的开销。&lt;/p&gt;
&lt;p&gt;“用发展的眼光看问题”，“尊重客观情况，避免主观臆断”，这些分别在小学语文的“刻舟求剑”和“掩耳盗铃”等章节中出现过，小时候大人们都仔细给讲解过，这些课文如何分段，以及中心思想怎样总结等等。&lt;/p&gt;
&lt;p&gt;数不清的类似的道理，浅显无比，乃至人尽皆知，结果大人们却并不一定真当回事，甚至根本不信，不那么做。&lt;/p&gt;
&lt;p&gt;所以，最基本的，就是做那些自己都明确知道应该做的，但是之前往往由于惰性惯性等等人性而没有做的好事，不再做那些自己也明知不该的坏事。&lt;/p&gt;
&lt;p&gt;你还要囤积教材课件资料而当做自己已经学会了么？你还要看到更新换代就马上像求食牲畜一样急切地去抢购电子产品么？你还要在酒桌上强迫他人饮酒么？你还要在医院学校等公共场所吸烟么？你还要在有火灾隐患的高人口密度区域放鞭炮么？&lt;/p&gt;
&lt;p&gt;问问你自己的脑子和良心吧。&lt;/p&gt;</content><category term="Story"></category><category term="Junck"></category><category term="Poem"></category><category term="Story"></category></entry><entry><title>Calibre on Docker make your NAS a local personal E-book Library</title><link href="/calibre-on-docker-make-your-nas-a-local-personal-e-book-library.html" rel="alternate"></link><published>2017-01-07T00:00:00+08:00</published><updated>2017-01-07T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2017-01-07:/calibre-on-docker-make-your-nas-a-local-personal-e-book-library.html</id><summary type="html">&lt;h2&gt;借助Docker上运行的Calibre将你的NAS变成个人在线电子图书馆&lt;/h2&gt;
&lt;p&gt;You may have a lot of e-books, I mean a lot, far more than dozens, even hundreds or thousands. Then you might already have heard or been using Calibre , an awesome one-stop shop for reading , managing , converting and indexing your e-books.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;假如你有很多电子书，注意，是很多，多到不止几十本，而是成百上千甚至上万本，那么估计你会听说过或者使用过Calibre，一个很棒的一站式电子书工具，可以阅读 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;h2&gt;借助Docker上运行的Calibre将你的NAS变成个人在线电子图书馆&lt;/h2&gt;
&lt;p&gt;You may have a lot of e-books, I mean a lot, far more than dozens, even hundreds or thousands. Then you might already have heard or been using Calibre , an awesome one-stop shop for reading , managing , converting and indexing your e-books.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;假如你有很多电子书，注意，是很多，多到不止几十本，而是成百上千甚至上万本，那么估计你会听说过或者使用过Calibre，一个很棒的一站式电子书工具，可以阅读、转换、检索，还可以提供在线服务。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It will be more awesome if you got an NAS, such as Synology， FreeNAS or some other platforms. Then you can run Docker on it , with which you can run a Xware container as a Thunder remote downloader, and you can also try to run Calibre server on Docker as your local personal E-book Library.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;假如你有一台NAS，例如群晖或者是FreeNas等等，并且你在上面安装了Docker，那么估计你会尝试过用Xware进行迅雷离线下载，然后你也可以试试通过Docker安装和使用Calibre来搭建个人电子图书馆。这样内网的所有设备都可以访问和下载你拥有的所有电子书了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can find an image of Calibre on &lt;a href="https://store.docker.com/search?q=calibre&amp;amp;source=community"&gt;Docker Hub&lt;/a&gt;. I choose &lt;a href="https://hub.docker.com/r/bcleonard/calibrone"&gt;this one&lt;/a&gt;, which is very easy to config.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前有很多Calibre镜像可供选择，在&lt;a href="https://store.docker.com/search?q=calibre&amp;amp;source=community"&gt;Docker Hub&lt;/a&gt;上面都能搜索到，我这次选择的是&lt;a href="https://hub.docker.com/r/bcleonard/calibre/"&gt;这个&lt;/a&gt;，特点是配置起来比较简单，而且可以完美运行在群晖甚至黑群晖上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am using a Synology DS3615xs, with a 2Ghz CPU, 4Gb Ram, and DSM version 5.2-5644.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我选作样例的是一台群晖DS3615xs，双核2Ghz处理器，4Gb内存，DSM版本为5.2-5644。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The image I choose works well on both Synology and XPEnology. You need to install Docker first, then search "Calilbre", and download an image that you like. I choose bcleonard/calibre , version 2016.5.31.1, the only one works well on my machine. The others all failed in my platform, that may be caused by the kernel version of my DSM.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于群晖或者黑群晖用户，需要先在套件中心中安装Docker，然后在docker中搜索Calibre，然后找一个看着顺眼的来安装。这里注意，我选择的是bcleonard/calibre，安装的是2016.5.31.1版本，选择这个镜像是因为其他镜像都下载失败了，只有这个成功了，怀疑是其他的镜像对系统内核的要求过高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then just follow the guidance in the pictures below. I use Chinese in those pictures because that is my mother tongue and I love it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文就面向群晖用户，下面的截图就是下载完成之后的操作步骤：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="本次通过向导来启动。" src="http://wx4.sinaimg.cn/mw1024/75006d25ly1fbkni8asu2j20l409wgmr.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="名字随便了，记得一定要把8080这个端口映射到某个固定端口，这样方便访问。" src="http://wx1.sinaimg.cn/mw1024/75006d25ly1fbknoy1vphj20k20ezwge.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="创建一个桌面快捷方式这样以后访问操作也方便。" src="http://wx4.sinaimg.cn/mw1024/75006d25ly1fbknoynlw4j20ke0f3gnj.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="一定要点击高级设置，在这里挂载本地已有的Calibre书库目录到/data/library给容器来使用。" src="http://wx3.sinaimg.cn/mw1024/75006d25ly1fbknoyhwwtj20m50fh0v5.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="另外一个/data/addbooks目录是做啥用的还没弄明白。" src="http://wx4.sinaimg.cn/mw1024/75006d25ly1fbknoyb3jwj20l00fy0tu.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="总体设置就是这样的，弄好了之后就可以运行了。" src="http://wx4.sinaimg.cn/mw1024/75006d25ly1fbknoxvgu4j20ld0ez76u.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="之后就可以访问我们映射的那个端口了。" src="http://wx4.sinaimg.cn/mw1024/75006d25ly1fbknoxnfzlj20yt0jdadx.jpg"&gt;&lt;/p&gt;
&lt;p&gt;If you rock, you can use Docker under cli and the &lt;a href="https://hub.docker.com/r/bcleonard/calibre/"&gt;introduction here&lt;/a&gt; will be helpfu.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过Docker命令来使用就更加简单了，可以参考&lt;a href="https://hub.docker.com/r/bcleonard/calibre/"&gt;镜像作者的说明&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Using Calibre on Docker is more than turning NAS an online library, it can also be used on computer related class. Students can handle their pdf of doc files to a NAS, then teachers can use Calibre to manage, index, read and score. That will save some time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这样用NAS做书库，可以实现任意一台内网计算机上用Calibre对远程书库进行维护管理，任意一台内网设备对该书库进行访问，避免了每台机器都要内置一份书库而带来的存储空间浪费。另外用Calibre管理PDF和Word文档，还可以用作机房管理统计作业，教师可以要求学生把文稿发送到NAS的指定位置，然后教师可以通过Calibre来对这些文件进行统计和阅读，还可以利用Calibre的评分和标签功能来进行打分管理等等。应用情景还是挺丰富的。&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="NAS"></category><category term="NAS"></category><category term="Server"></category><category term="Library"></category></entry><entry><title>GeoPython,a project of using Python for geology related daily work</title><link href="/geopythona-project-of-using-python-for-geology-related-daily-work.html" rel="alternate"></link><published>2016-12-18T16:20:00+08:00</published><updated>2016-12-18T16:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-12-18:/geopythona-project-of-using-python-for-geology-related-daily-work.html</id><summary type="html">&lt;h1&gt;&lt;a href="https://github.com/cycleuser/GeoPython"&gt;GeoPython, a project of using Python for geology related daily work&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;h1&gt;&lt;a href="https://github.com/cycleuser/GeoPython"&gt;GeoPython，一个将 Python 用于地质学的日常工作的计划&lt;/a&gt;&lt;/h1&gt;
&lt;/blockquote&gt;
&lt;p&gt;https://github.com/cycleuser/GeoPython&lt;/p&gt;
&lt;h5&gt;author: cycleuser&lt;/h5&gt;
&lt;h5&gt;email: cycleuser@cycleuser.org&lt;/h5&gt;
&lt;h5&gt;Copyright 2016 cycleuser&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MileStone&lt;/th&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Beginning Date&lt;/td&gt;
&lt;td&gt;2016-07-07 6:20&lt;/td&gt;
&lt;td&gt;TAS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Adding QAPF&lt;/td&gt;
&lt;td&gt;2016-07-09 08:32&lt;/td&gt;
&lt;td&gt;QAPF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Adding Wulff&lt;/td&gt;
&lt;td&gt;2016-12-18 08:32&lt;/td&gt;
&lt;td&gt;Wulf …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;h1&gt;&lt;a href="https://github.com/cycleuser/GeoPython"&gt;GeoPython, a project of using Python for geology related daily work&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;h1&gt;&lt;a href="https://github.com/cycleuser/GeoPython"&gt;GeoPython，一个将 Python 用于地质学的日常工作的计划&lt;/a&gt;&lt;/h1&gt;
&lt;/blockquote&gt;
&lt;p&gt;https://github.com/cycleuser/GeoPython&lt;/p&gt;
&lt;h5&gt;author: cycleuser&lt;/h5&gt;
&lt;h5&gt;email: cycleuser@cycleuser.org&lt;/h5&gt;
&lt;h5&gt;Copyright 2016 cycleuser&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MileStone&lt;/th&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Beginning Date&lt;/td&gt;
&lt;td&gt;2016-07-07 6:20&lt;/td&gt;
&lt;td&gt;TAS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Adding QAPF&lt;/td&gt;
&lt;td&gt;2016-07-09 08:32&lt;/td&gt;
&lt;td&gt;QAPF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Adding Wulff&lt;/td&gt;
&lt;td&gt;2016-12-18 08:32&lt;/td&gt;
&lt;td&gt;Wulf&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;GeoPython is a project of using Python for geology related daily work. It is a set of free softwares: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GeoPython 是一个将 Python 用于地质学的日常工作的计划。这是一套自由软件：你可以重新分发或者做出修改，但必须基于由自由软件基金会发布的GNU通用公共许可证第三版的许可,或其后的版本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;TAS.py and QAPF.py are all Python modules of plotting data of volcanic rocks.
All data used in this module are from the book：
"Igneous Rocks_ a Classification and Glossary of Terms"
 by  R.W. Le Maitre &amp;amp; International Union of Geological Sciences 2002&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TAS.py 和 QAPF.py 都是用于火山岩数据投图的 Python 模块。
其中所有用到的数据引用自下面这本书：
《火成岩—分类和术语表》
R.W. Le Maitre &amp;amp; International Union of Geological Sciences 2002&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Texts below is cited from this book as an introduction:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下面这部分文本引用自该书原文，用作简要说明：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;The&lt;/span&gt; &lt;span class="nv"&gt;TAS&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Total&lt;/span&gt; &lt;span class="nv"&gt;Alkali&lt;/span&gt; – &lt;span class="nv"&gt;Silica&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;classification&lt;/span&gt; &lt;span class="nv"&gt;should&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;used&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;:
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;TAS&lt;/span&gt;（ 全碱&lt;span class="o"&gt;-&lt;/span&gt;硅）分类法只适用于以下条件：

&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;rock&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;considered&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;volcanic&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;必须得是火山岩；

&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;mineral&lt;/span&gt; &lt;span class="nv"&gt;mode&lt;/span&gt; &lt;span class="nv"&gt;cannot&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;determined&lt;/span&gt;, &lt;span class="nv"&gt;owing&lt;/span&gt; &lt;span class="nv"&gt;either&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;presence&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;glass&lt;/span&gt; &lt;span class="nv"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;fine&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;grained&lt;/span&gt; &lt;span class="nv"&gt;nature&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;rock&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;由于存在玻璃质，或者矿物晶体粒度太小，导致矿物模式不好确定；
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;chemical&lt;/span&gt; &lt;span class="nv"&gt;analysis&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;rock&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;available&lt;/span&gt;.

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;有全岩化学成分数据。

&lt;span class="nv"&gt;QAPF&lt;/span&gt; &lt;span class="nv"&gt;modal&lt;/span&gt; &lt;span class="nv"&gt;classification&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;volcanic&lt;/span&gt; &lt;span class="nv"&gt;rocks&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;based&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt; &lt;span class="nv"&gt;Streckeisen&lt;/span&gt;, &lt;span class="mi"&gt;1978&lt;/span&gt;, &lt;span class="nv"&gt;Fig&lt;/span&gt;. &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;QAPF&lt;/span&gt; 火山岩模式分类基于 &lt;span class="nv"&gt;Streckeisen&lt;/span&gt;，&lt;span class="mi"&gt;1978&lt;/span&gt;年的文献。

&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;The&lt;/span&gt; &lt;span class="nv"&gt;corners&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;double&lt;/span&gt; &lt;span class="nv"&gt;triangle&lt;/span&gt; &lt;span class="nv"&gt;are&lt;/span&gt; &lt;span class="nv"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;quartz&lt;/span&gt;, &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;alkali&lt;/span&gt; &lt;span class="nv"&gt;feldspar&lt;/span&gt;, &lt;span class="nv"&gt;P&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;plagioclase&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;F&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;feldspathoid&lt;/span&gt;.
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;双三角图解中的 &lt;span class="nv"&gt;Q&lt;/span&gt; 代表石英，&lt;span class="nv"&gt;A&lt;/span&gt; 代表碱性长石，&lt;span class="nv"&gt;P&lt;/span&gt; 代表斜长石，&lt;span class="nv"&gt;F&lt;/span&gt; 代表似长石。

&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;This&lt;/span&gt; &lt;span class="nv"&gt;diagram&lt;/span&gt; &lt;span class="nv"&gt;must&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;used&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;rocks&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;which&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;mafic&lt;/span&gt; &lt;span class="nv"&gt;mineral&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;, &lt;span class="nv"&gt;M&lt;/span&gt;, &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;greater&lt;/span&gt; &lt;span class="nv"&gt;than&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;.
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;切忌将该图解用到镁铁质矿物超过&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;的情况，这种情况绝对不能用这个图！
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Dependence&lt;/h2&gt;
&lt;blockquote&gt;
&lt;h2&gt;依赖关系&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;This module is written with Python3.4 and based on numpy, matplotlib and pandas. That means you need to install them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本模块是在Python 3.4下写的，基于 numpy， matplotlib 以及 pandas。所以这几个包你都得安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can install these packages with PIP:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用PIP就可以安装了：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;matplotlib&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Background Information&lt;/h2&gt;
&lt;blockquote&gt;
&lt;h2&gt;背景知识&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can also set width, color and other features in the Xlsx files. And the introduction can be found &lt;a href="http://www.jianshu.com/p/67cbc84e57a6"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你可以在数据文件中对应的位置设置线宽、颜色等各种属性。对这些属性的说明可以参考&lt;a href="http://www.jianshu.com/p/67cbc84e57a6"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Usage Under Windows&lt;/h2&gt;
&lt;blockquote&gt;
&lt;h2&gt;在Windows系统中用法&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just put your data in the correspoinding Xlsx file and double click the correspoinding EXE file.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;把你的数据按照示范放到模板文件中，然后双击对应名字的exe程序就行了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Usage with Python&lt;/h2&gt;
&lt;blockquote&gt;
&lt;h2&gt;在Python下的用法&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;In order to use these modules, you need to install geopython with pip:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现在可以用pip来安装geopython了：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install geopython
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then open you python , and enter to the location path of data files, which are the xlsx files that  you still need to download from &lt;a href="https://github.com/cycleuser/GeoPython/tree/master/Python"&gt;here&lt;/a&gt;. Then you can use geopython as the codes below:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;然后打开你的python，进入到数据目录，目前数据文件还要在&lt;a href="https://github.com/cycleuser/GeoPython/tree/master/Python"&gt;这里&lt;/a&gt;下载。下载好样本文件，把自己的数据填入，然后用下面的命令就可以运行了：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ipython
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;geopython&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;gp&lt;/span&gt;

&lt;span class="n"&gt;gp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tas.xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;qfl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qfl.xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;qmflt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qfl.xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ree.xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;qapf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qapf.xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wulf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;strike.xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Remember that you need to import the module first and then you can use the functions in it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一定记得，只有先导入了模块，才能使用里面的功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You need to put you data in a xlsx file in the same form as the example files.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;导入完毕后，根据我提供的样板文件，把你的数据输入进去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If python told you that it cannot find a xlsx file, you must have entered to the wrong location, and you need to use the cd command to go to the path containing xlsx files that you downloaded and modiffed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果python提醒你找不到excel的xlsx文件，很可能就是你进错目录了，那样你就需要找到你下载并修改的xlsx文件的位置，用cd命令进去，然后再进行上面的操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then you only need to input the data from the file, and everything will be done.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;然后你就在程序中如下所示这样读取一下，然后用对应模块的函数帮你搞定一切了。（注意大小写！）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If the data file is in the right form and nothing goes wrong, you will have three files, which will be in the same location of these xlsx files:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你的数据文件没有什么问题，你就能得到图像了，这些图像会存放在excel表格文件所在的同一目录下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a svg(Scalable Vector Graphics) file which can be modified directly in Adobe Illustrator or Corel Draw,&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;一个碉堡的 svg（一种矢量图）文件，直接就能用Adobe Illustrator 或者 Corel Draw来打开编辑。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a png (Portable Network Graphics) .&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;然后就是一个png图像了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/GeoPython/blob/master/TAS-Plot.png?raw=true"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/GeoPython/master/QFL-Plot.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/GeoPython/master/REE-Plot.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/cycleuser/GeoPython/blob/master/Wulff.png?raw=true"&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="Geology"></category></entry><entry><title>MacOS Sierra Skylake Intel HD 530 Graphics Glitch Fix</title><link href="/macos-sierra-skylake-intel-hd-530-graphics-glitch-fix.html" rel="alternate"></link><published>2016-11-08T11:20:00+08:00</published><updated>2016-11-08T11:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-11-08:/macos-sierra-skylake-intel-hd-530-graphics-glitch-fix.html</id><summary type="html">&lt;h4&gt;解决MacOS Sierra系统下使用Skylake系列Intel CPU的核心显卡时左上角的闪烁黑块问题&lt;/h4&gt;
&lt;p&gt;Since macOS Sierra 10.12 update, Skylake's Intel HD 530 integrated graphics got certain graphical artifacts or 'glitches' in the upper left corner of the menu bar and elsewhere,which did not occur under OS X El Capitan and earlier versions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自从升级了MacOS Sierra 10.12之后，Skylake，也就是Intel的六代平台的HD530集显就不能正常工作了 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;h4&gt;解决MacOS Sierra系统下使用Skylake系列Intel CPU的核心显卡时左上角的闪烁黑块问题&lt;/h4&gt;
&lt;p&gt;Since macOS Sierra 10.12 update, Skylake's Intel HD 530 integrated graphics got certain graphical artifacts or 'glitches' in the upper left corner of the menu bar and elsewhere,which did not occur under OS X El Capitan and earlier versions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自从升级了MacOS Sierra 10.12之后，Skylake，也就是Intel的六代平台的HD530集显就不能正常工作了，左上角总有一个区域时不时的出现小黑块，而之前的系统版本里都不会这样。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Add code to clover config.plist&lt;/h4&gt;
&lt;p&gt;Add a piece of code to clover config.plist file:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;把下面这段代码粘贴到clover配置文件config.plist的对应位置中：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Devices&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;AddProperties&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;array&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Device&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;IntelGFX&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Key&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;AAPL,GfxYTile&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Value&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            AQAAAA==
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;array&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Paste these code above into your clover config file, and then we take the next move.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;把上面的代码粘贴到你的clover配置文件之后，就进行下一步了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Use MultiBeast 9 to install HD 530&lt;/h4&gt;
&lt;p&gt;After adding the above code into your Clover config.plist, use MultiBeast's Graphics &amp;gt; HD 530 setting (This includes ig-platform-id of 0x19120000) , Reboot and glitches will be gone.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在你的clover配置文件中添加完上面的代码之后，下载运行Multibeast，然后找到其中的HD530驱动，安装一下，这个步骤也将会添加集显的 ig-platform-id :0x19120000，然后重启，显示就应该完美了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This method is form &lt;a href="https://www.tonymacx86.com/threads/skylake-intel-hd-530-graphics-glitch-fix.206410/"&gt;TonyMacX86&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文的思路来自&lt;a href="https://www.tonymacx86.com/threads/skylake-intel-hd-530-graphics-glitch-fix.206410/"&gt;TonyMacX86&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can also use my config.plist file and other tools form this &lt;a href="https://pan.baidu.com/s/1miAq0IG"&gt;Link&lt;/a&gt;.
Code: uu53&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你也可以试试我分享的这个config.plist文件，然后这里还有一些要用到的其他工具。&lt;a href="https://pan.baidu.com/s/1miAq0IG"&gt;链接&lt;/a&gt;
密码: uu53&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Hackintosh"></category><category term="Mac"></category><category term="Hackintosh"></category></entry><entry><title>Telescope</title><link href="/telescope.html" rel="alternate"></link><published>2016-10-24T11:20:00+08:00</published><updated>2016-10-24T11:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-10-24:/telescope.html</id><summary type="html">&lt;h3&gt;为了拍月亮，我 DIY 了一个望远镜&lt;/h3&gt;
&lt;p&gt;某一个晚上，我用 35-100mm 的手动镜头对着天空，第一次拍到这么大的月亮，感觉很开心。由于视力不佳，此前我从来没能看到过月亮上的阴影。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://ww1.sinaimg.cn/mw690/75006d25gw1f6uoathx1hj21kw16on2z.jpg?imageView/2/w/420/q/90"&gt;
【&lt;code&gt;上图】 使用摄美 35-100 mm 镜头的 100 mm 端拍摄到的月亮&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这一次拍摄经历极大地激发了我对摄月的兴趣。于是我去网络上购买配件，组装了一个极其粗糙的望远镜。&lt;/p&gt;
&lt;p&gt;这架望远镜的拼装涉及了以下几个部件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;镜片&lt;/strong&gt;：一位网友的望远镜在运输途中发生了磕碰，镜筒损坏导致整体报废，我从他手中买来了拆机的望远镜片。由于这位网友对镜片参数的了解不多，因此不能提供孔径和焦距等基本参数，我只能自己粗略地测量，发现镜片可能是 80 mm 口径，焦距大概在 600 mm - 700 mm ，物镜边缘已经有破损，所以进行了打磨，导致口径有所降低。根据测量结果购买来尺寸相符的物镜座。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;镜筒&lt;/strong&gt;：自制望远镜筒，常规材料是硬纸筒或者 PVC 水管，高端的玩家可能会用金属材质的圆筒制作镜筒 …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h3&gt;为了拍月亮，我 DIY 了一个望远镜&lt;/h3&gt;
&lt;p&gt;某一个晚上，我用 35-100mm 的手动镜头对着天空，第一次拍到这么大的月亮，感觉很开心。由于视力不佳，此前我从来没能看到过月亮上的阴影。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://ww1.sinaimg.cn/mw690/75006d25gw1f6uoathx1hj21kw16on2z.jpg?imageView/2/w/420/q/90"&gt;
【&lt;code&gt;上图】 使用摄美 35-100 mm 镜头的 100 mm 端拍摄到的月亮&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这一次拍摄经历极大地激发了我对摄月的兴趣。于是我去网络上购买配件，组装了一个极其粗糙的望远镜。&lt;/p&gt;
&lt;p&gt;这架望远镜的拼装涉及了以下几个部件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;镜片&lt;/strong&gt;：一位网友的望远镜在运输途中发生了磕碰，镜筒损坏导致整体报废，我从他手中买来了拆机的望远镜片。由于这位网友对镜片参数的了解不多，因此不能提供孔径和焦距等基本参数，我只能自己粗略地测量，发现镜片可能是 80 mm 口径，焦距大概在 600 mm - 700 mm ，物镜边缘已经有破损，所以进行了打磨，导致口径有所降低。根据测量结果购买来尺寸相符的物镜座。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;镜筒&lt;/strong&gt;：自制望远镜筒，常规材料是硬纸筒或者 PVC 水管，高端的玩家可能会用金属材质的圆筒制作镜筒。受限于预算和动手能力，我选择的是用 PVC 水管做镜筒，成本只要几元钱一米。这里要注意选择合适口径的 PVC 管，我的镜片打磨成了大概 60 mm 口径，安装上物镜座之后的物镜整体适合的水管为 75 mm 的 PVC 水管。将PVC 水管截取适当的长度，与焦距相差一小段距离即可，误差部分可以通过目镜调焦座来进行补偿。购买目镜调焦座的时候要注意尺寸要适合选用的 PVC 水管。在安装调焦座之前，还要用黑色喷漆对 PVC 水管的内外壁进行喷漆，目的是去除内壁反光和外壁的透光干扰。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;相机配件&lt;/strong&gt;：市场上普遍售卖的目镜调焦座可以转接到 T2 接口， T2 接口可以转接到多种相机接口，我这里用的是奥林巴斯 EPL2 无反相机，所以使用 T2 接口转换到 M43 接口的转接环，就可以连接相机了。我这里主要目的是用来拍照，所以没有使用目镜，而是直接用相机安装到目镜位置，来代替目镜。如果使用目镜，在安装目镜之前还需要安装天顶镜，用来改变成像方向，避免看到的是倒立的像，而直接连接相机则不需要天顶镜。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;镜片的光学性能本来大概是千元的 80EQ 的水准，但是由于口径损失以及安装精度差，所以成像效果逊色很多，勉强相当于 60EQ 。&lt;/p&gt;
&lt;p&gt;由于我是第一次组装制作，在材料选择和购买方面走了很多弯路，现在重新核算一下，最经济的方法下，总成本能控制到 300 元以下。用这样的预算也能购买到一些极度低端的成品望远镜，但是这个价格的低端产品往往镜片和配件的质量都堪忧，用来拍照使用也未必能有很好的体验。自己来 DIY 组装望远镜，能以 300 元内的预算，实现简单的摄月和打鸟等用途，可谓经济实惠；而且动手制作的过程本身就很有趣味，也具有一定的挑战性，非常好玩。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://ww3.sinaimg.cn/mw690/75006d25gw1f6uob6c6pvj20qo0k1n05.jpg?imageView/2/w/420/q/90"&gt;
&lt;code&gt;【上图】 望远镜DIY完成后，连接相机，安装到三脚架上&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于我的 DIY 经验匮乏，各个部件的安装精度较差，因此机身不太稳固，所以我将望远镜安装到了相机三脚架上，以提高稳定性。半月的那张照片就是在相机三脚架上拍摄的，而满月这张是我手持拍摄的，因此成像质量差距显著。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://ww1.sinaimg.cn/mw690/75006d25gw1f6uobcpbdbj21kw16on9s.jpg?imageView/2/w/420/q/90"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;【上图】 天气晴好状况下在北京体育大学附近使用三脚架固定 DIY 望远镜拍摄到的半月&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://ww4.sinaimg.cn/mw690/75006d25gw1f6uobhkqsdj21kw16oakw.jpg?imageView/2/w/420/q/90"&gt;
&lt;code&gt;【上图】 轻度雾霾状况下在北京体育大学附近使用手持 DIY 望远镜拍摄到的满月&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/BigMoon.png"&gt;
&lt;code&gt;【上图】 良好空气状况下在北京体育大学附近使用三脚架固定 DIY 望远镜拍摄到的半月&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后说说拍月亮的感受吧。&lt;/p&gt;
&lt;p&gt;在望远镜上用肉眼观测月亮的效果要比相机拍摄的效果还好很多，肉眼直接看到的细节非常丰富，环形山的层次明显，次级形态都清晰无比，尤其是在半月的时候，侧向光产生的立体感非常完美，用相机接上去来拍摄照片的效果就差了一些了。我的观测地点实在是很不理想，在相当长的一段时间里，雾霾都太严重了，北城往昌平方向看地平面都有一层灰蒙蒙的烟尘。&lt;/p&gt;
&lt;p&gt;能看清楚月亮的表面，实现了儿时梦想，让我喜不自胜。小时候看到白色的窗棱纸，会想起饼干；看到月亮，会想起大饼。那时候村里面大家平时都只能吃玉米面饼子，玉米碴粥，能吃上小米饭和土豆萝卜汤都会很开心，而精米白面往往是只有过节的时候才能见到的。&lt;/p&gt;
&lt;p&gt;其实我本来还想做个牛反（牛顿式反射望远镜），为了是进一步放大成像，提高成像质量。不过后来我还是放弃了这个想法。首先是因为折射望远镜还能用来看鸟观景，牛反就只适合看星空，用途比较狭窄；其次是牛反的镜片磨制和组装都需要较高的精度，我尚且难以达到。烧钱的方式太多了，不准备继续投入了，这个 DIY 镜筒能拍拍远景，已经很满足了。&lt;/p&gt;
&lt;p&gt;我是一个喜欢动手实现想法满足用途的人，之前组装过一个&lt;a href="http://blog.cycleuser.org/my-first-microscope.html"&gt;偏光显微镜&lt;/a&gt;，也是四处买件攒起来的。&lt;/p&gt;
&lt;p&gt;在爱好方面我不舍得花太多。比如我用的电吉他是 Squier VM ，而我师弟最起码都是墨标； 我用的哨笛是大帆船，而身边的高端玩家都是用 Copeland ； 我用的键盘是 Keystation Mini ，而身边有朋友都用电钢琴； 我用的自行车是勇士 600D 改了 XCR 前叉和彦豪碟刹，而同学和老师里好几个都是用碳纤或者钛车身的土豪； 我用的工作站是 DIY 的四代平台加 GTX750Ti 来凑活跑 CUDA ，而好多同学都是直接一台 P500 之类的工作站加 Titan； 我用的相机是 250 元收来的闪光灯坏掉的二手奥林巴斯 EPL2，而身边的朋友用的是D750 、D810 或者机身加数码后背。&lt;/p&gt;
&lt;p&gt;小时候，供销社的绿豆糕五块钱一袋，那时候简直是天价，我就以为那肯定是世上最好吃的食物，又不确定，就去问我妈妈，妈妈说她也没吃过。后来我攒钱两年，买来尝了一下，不是很好吃，就后悔了，想着如果一直不去吃，就那么憧憬着，可能还更有意思一点。那时候滚铁环，削木剑，用火柴盒做小汽车，就已经非常开心，彩电都是幸福之源，而后来的 MP3、MP4、电脑、手机，乃至如今各种智能设备这些，放到当年都是不敢想象的。&lt;/p&gt;
&lt;p&gt;小时候的这些个梦想，计算机、编程、照相机、显微镜、望远镜、科学家，正在努力一个个实现的路上。 还有一些分支技能树的天赋不足，技能点也没点足够：哨笛、吉他、键盘、音乐人~ 不过我发现自己最成功的还是能吃。&lt;/p&gt;
&lt;p&gt;现在我每天做好吃的，用我太太的话说，就是把自己养的胖胖的了。自己想吃什么，就去搜寻需要的食材，查找烹饪的方法，然后进行多次尝试来实现。话说，这个模式好像也适用于很多其他的事情，比如我想拍月亮，就去做个望远镜。&lt;/p&gt;
&lt;p&gt;想要做什么，就动手试试吧。&lt;/p&gt;</content><category term="DIY"></category><category term="Photo"></category><category term="Moon"></category><category term="Telescope"></category><category term="Story"></category><category term="DIY"></category></entry><entry><title>MacOS PyCUDA Python Pyenv</title><link href="/macos-pycuda-python-pyenv.html" rel="alternate"></link><published>2016-10-21T11:20:00+08:00</published><updated>2016-10-21T11:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-10-21:/macos-pycuda-python-pyenv.html</id><summary type="html">&lt;h4&gt;Mac系统下使用Pyenv管理Python多版本，并且给各个版本安装PyCUDA&lt;/h4&gt;
&lt;p&gt;本文是针对PyCUDA的新手用户。此处特点是使用了Pyenv构建了多个工作环境，并且指导如何在各个不同的Python环境中安装PyCUDA。&lt;/p&gt;
&lt;h4&gt;安装Git和Pyenv&lt;/h4&gt;
&lt;p&gt;下载PyCUDA代码需要用Git，管理多版本的Python需要Pyenv，而这两个的安装就都需要用&lt;a href="http://brew.sh/index_zh-cn.html"&gt;Brew&lt;/a&gt; 了。在终端输入下面的命令就可以安装Brew了:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/bin/ruby -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后再接着在终端陆续输入下面两个命令来安装Git和Pyenv：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install git
brew install pyenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;最最重要的一步&lt;/h4&gt;
&lt;p&gt;这一步是最重要的了，决定了你能否成功安装和运行CUDA以及PyCUDA。要运行Brew，你就被迫要安装最新版本的Xcode和配套的Command Line Tools，但是CUDA很可能和这个最新版本不兼容。所以如果你有旧版本的Xcode，一定要备份一下，改个名字别被替换了啥的。然后安装最新的Xcode和配套的Command Line Tools之后，赶紧用Brew安装好Git和Pyenv。安装好了这两个之后，就降级回到能兼容CUDA的旧版本Xcode …&lt;/p&gt;</summary><content type="html">&lt;h4&gt;Mac系统下使用Pyenv管理Python多版本，并且给各个版本安装PyCUDA&lt;/h4&gt;
&lt;p&gt;本文是针对PyCUDA的新手用户。此处特点是使用了Pyenv构建了多个工作环境，并且指导如何在各个不同的Python环境中安装PyCUDA。&lt;/p&gt;
&lt;h4&gt;安装Git和Pyenv&lt;/h4&gt;
&lt;p&gt;下载PyCUDA代码需要用Git，管理多版本的Python需要Pyenv，而这两个的安装就都需要用&lt;a href="http://brew.sh/index_zh-cn.html"&gt;Brew&lt;/a&gt; 了。在终端输入下面的命令就可以安装Brew了:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/bin/ruby -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后再接着在终端陆续输入下面两个命令来安装Git和Pyenv：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install git
brew install pyenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;最最重要的一步&lt;/h4&gt;
&lt;p&gt;这一步是最重要的了，决定了你能否成功安装和运行CUDA以及PyCUDA。要运行Brew，你就被迫要安装最新版本的Xcode和配套的Command Line Tools，但是CUDA很可能和这个最新版本不兼容。所以如果你有旧版本的Xcode，一定要备份一下，改个名字别被替换了啥的。然后安装最新的Xcode和配套的Command Line Tools之后，赶紧用Brew安装好Git和Pyenv。安装好了这两个之后，就降级回到能兼容CUDA的旧版本Xcode，重新下载安装旧版本的Command Line Tools。并且绝对别在App Store里面把它升级到最新版。&lt;/p&gt;
&lt;p&gt;只有安装好了Pyenv和能够支持运行CUDA的旧版本Xcode以及Command Line Tools ，我们才能完成CUDA的安装.&lt;/p&gt;
&lt;h4&gt;安装Xcode, Command Line Tools以及CUDA&lt;/h4&gt;
&lt;p&gt;我之前的&lt;a href="http://blog.cycleuser.org/use-cuda-80-with-macos-sierra-1012.html"&gt;文章&lt;/a&gt;中更详细地讲解了关于CUDA和Xcode的兼容情况以及解决方案，我正打字这回，情况依然还是跟这篇文章中一样。最先帮你把的CUDA依然不能使用Xcode8，需要安装Xcode7.3.1 和 Command Line Tools for XCode 7.3.1，可以在 &lt;a href="https://developer.apple.com/download"&gt;这里&lt;/a&gt; 找到官方提供的下载链接。&lt;/p&gt;
&lt;p&gt;一定要确保你安装的Xcode是能够支持CUDA运行的。然后才能成功安装 &lt;a href="https://developer.nvidia.com/compute/cuda/8.0/Prod/local_installers/cuda_8.0.47_mac-dmg"&gt;CUDA&lt;/a&gt;，安装CUDA之后运行下面这个命令来检查一下环境变量是否设置正确:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nvcc --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;没问题的话应该显示类似下面的结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ nvcc --version
nvcc: NVIDIA &lt;span class="o"&gt;(&lt;/span&gt;R&lt;span class="o"&gt;)&lt;/span&gt; Cuda compiler driver
Copyright &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2005&lt;/span&gt;-2016 NVIDIA Corporation
Built on Sun_Sep_18_22:16:08_CDT_2016
Cuda compilation tools, release &lt;span class="m"&gt;8&lt;/span&gt;.0, V8.0.46
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;使用Pyenv安装一个Python副本&lt;/h4&gt;
&lt;p&gt;在终端中输入下面的命令查看可以用Pyenv安装的全部Python版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install --list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这里我用3.5.2做一个例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install &lt;span class="m"&gt;3&lt;/span&gt;.5.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;输入上述命令，等待完成之后，我们就有了一个全新的Python环境了，怎么折腾都可以，不会影响系统的Python配置。&lt;/p&gt;
&lt;h4&gt;安装PyCUDA&lt;/h4&gt;
&lt;p&gt;把下面的命令粘贴到终端中来下载PyCUDA的源代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone --recursive http://git.tiker.net/trees/pycuda.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;进入到pycuda的目录并且设置目录内的Python为刚刚咱们安装的3.5.2版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; pycuda
pyenv &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;.5.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;接下来用下列命令来配置、编译、安装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python configure.py
sudo make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果没有发现报错，就应该是成功了。把下面的代码保存到一个名为test.py的文件中，然后咱们来测试一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Sample source code from the Tutorial Introduction in the documentation.&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.gpuarray&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;gpuarray&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.driver&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;cuda&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.autoinit&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="n"&gt;a_gpu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gpuarray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_gpu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;a_doubled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a_gpu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;original array:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_gpu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;doubled with gpuarray:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_doubled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在终端中运行这个test.py，如果得到类似下面这样的结果，就是成功了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python test.py
original array:
&lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.27740544 -1.44831014  &lt;span class="m"&gt;0&lt;/span&gt;.6379782   &lt;span class="m"&gt;0&lt;/span&gt;.15358959&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-0.21130283 -0.19202329 -2.23594046  &lt;span class="m"&gt;0&lt;/span&gt;.14036565&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-0.69078982 -0.44290611  &lt;span class="m"&gt;1&lt;/span&gt;.2644769   &lt;span class="m"&gt;1&lt;/span&gt;.55474603&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-1.08704031  &lt;span class="m"&gt;2&lt;/span&gt;.22870898  &lt;span class="m"&gt;0&lt;/span&gt;.85237521  &lt;span class="m"&gt;0&lt;/span&gt;.15609477&lt;span class="o"&gt;]]&lt;/span&gt;
doubled with gpuarray:
&lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.55481088 -2.89662027  &lt;span class="m"&gt;1&lt;/span&gt;.27595639  &lt;span class="m"&gt;0&lt;/span&gt;.30717918&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-0.42260566 -0.38404658 -4.47188091  &lt;span class="m"&gt;0&lt;/span&gt;.28073129&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-1.38157964 -0.88581222  &lt;span class="m"&gt;2&lt;/span&gt;.52895379  &lt;span class="m"&gt;3&lt;/span&gt;.10949206&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-2.17408061  &lt;span class="m"&gt;4&lt;/span&gt;.45741796  &lt;span class="m"&gt;1&lt;/span&gt;.70475042  &lt;span class="m"&gt;0&lt;/span&gt;.31218955&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;更多版本&lt;/h4&gt;
&lt;p&gt;如果你要安装PyCUDA到更多版本的Python中，只要用Pyenv来安装更多版本的Python，然后把pycuda所在目录设置为对应版本的Python，之后重复上面的配置、编译、安装的步骤就可以了。例如下面就用3.5.1做例子示范了一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install &lt;span class="m"&gt;3&lt;/span&gt;.5.1
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/pycuda
pyenv &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;.5.1
python configure.py
sudo make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;就是这样了。&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="CUDA"></category><category term="Mac"></category><category term="Pyenv"></category></entry><entry><title>Install PyCUDA to Python managed by Pyenv under MacOS</title><link href="/install-pycuda-to-python-managed-by-pyenv-under-macos.html" rel="alternate"></link><published>2016-10-20T11:20:00+08:00</published><updated>2016-10-20T11:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-10-20:/install-pycuda-to-python-managed-by-pyenv-under-macos.html</id><summary type="html">&lt;h4&gt;Install PyCUDA to Python managed by Pyenv under MacOS&lt;/h4&gt;
&lt;p&gt;This post is a guide for newbie users of PyCUDA. We use Pyenv here and that means we can build different versions of working environments.&lt;/p&gt;
&lt;h4&gt;Install Git and Pyenv&lt;/h4&gt;
&lt;p&gt;In order to download the PyCUDA code, we need to install Git …&lt;/p&gt;</summary><content type="html">&lt;h4&gt;Install PyCUDA to Python managed by Pyenv under MacOS&lt;/h4&gt;
&lt;p&gt;This post is a guide for newbie users of PyCUDA. We use Pyenv here and that means we can build different versions of working environments.&lt;/p&gt;
&lt;h4&gt;Install Git and Pyenv&lt;/h4&gt;
&lt;p&gt;In order to download the PyCUDA code, we need to install Git. In order to control multiple versions of Python and creat isolated environment for different projects, we need to use Pyenv. To install Pyenv, we need to install &lt;a href="http://brew.sh/index_zh-cn.html"&gt;Brew&lt;/a&gt; first by running this in terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/bin/ruby -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then run the command below to install Pyenv.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install git
brew install pyenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;The Most Important Trick&lt;/h4&gt;
&lt;p&gt;But here are some tricks that you must do to succeed your installment: In order to run Brew, you are forced to update your Xcode and its Command Line Tools to the latest version, or the brew would fail to run. So you need to keep a back up of your older version of Xcode which works with CUDA, and install the latest version of Xcode and Command Line Tools to run Brew for the installment of Pyenv. After this installment of Pyenv, you need to download the older version Command Line Tools working with your older version Xcode and CUDA. And DO NOT update in the app store.&lt;/p&gt;
&lt;p&gt;With Pyenv installed and the right version of Xcode and Command Line Tools working with CUDA, we can begin our journey of PyCUDA installments.&lt;/p&gt;
&lt;h4&gt;Install Xcode, Command Line Tools and CUDA&lt;/h4&gt;
&lt;p&gt;As I posted in &lt;a href="http://blog.cycleuser.org/use-cuda-80-with-macos-sierra-1012.html"&gt;the earlier article&lt;/a&gt;, the latest version of CUDA cannot work with the newest version of Xcode. At this moment I am typing, the latest CUDA is still version 8.04, which requires XCode 7.3.1 and Command Line Tools for XCode 7.3.1. And &lt;a href="https://developer.apple.com/download"&gt;HERE&lt;/a&gt; is the place you can download them.&lt;/p&gt;
&lt;p&gt;Please make sure that your Xcode is the version that works with your CUDA. Then you need to install the &lt;a href="https://developer.nvidia.com/compute/cuda/8.0/Prod/local_installers/cuda_8.0.47_mac-dmg"&gt;CUDA&lt;/a&gt; and check the version of nvcc with following command int terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nvcc --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It will be OK if the output seems like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ nvcc --version
nvcc: NVIDIA &lt;span class="o"&gt;(&lt;/span&gt;R&lt;span class="o"&gt;)&lt;/span&gt; Cuda compiler driver
Copyright &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2005&lt;/span&gt;-2016 NVIDIA Corporation
Built on Sun_Sep_18_22:16:08_CDT_2016
Cuda compilation tools, release &lt;span class="m"&gt;8&lt;/span&gt;.0, V8.0.46
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Use Pyenv to install a version of Python&lt;/h4&gt;
&lt;p&gt;Using the following command in terminal to see the available versions of Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install --list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here we use 3.5.2:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install &lt;span class="m"&gt;3&lt;/span&gt;.5.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we have a brand new Python, which we can do anything inside without worrying about messing up with the system.&lt;/p&gt;
&lt;h4&gt;Install PyCUDA&lt;/h4&gt;
&lt;p&gt;Paste following command in terminal to get the source code of PyCUDA:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone --recursive http://git.tiker.net/trees/pycuda.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Get into its folder and set the local Python to the one we installed using Pyenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; pycuda
pyenv &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;.5.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we use these commands to proceed the installation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python configure.py
sudo make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If there is nothing wrong, we could use a piece of code from the examples of PyCUDA as a file named "test.py" :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Sample source code from the Tutorial Introduction in the documentation.&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.gpuarray&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;gpuarray&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.driver&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;cuda&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.autoinit&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="n"&gt;a_gpu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gpuarray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_gpu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;a_doubled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a_gpu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;original array:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_gpu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;doubled with gpuarray:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_doubled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you get similar output like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python test.py
original array:
&lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.27740544 -1.44831014  &lt;span class="m"&gt;0&lt;/span&gt;.6379782   &lt;span class="m"&gt;0&lt;/span&gt;.15358959&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-0.21130283 -0.19202329 -2.23594046  &lt;span class="m"&gt;0&lt;/span&gt;.14036565&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-0.69078982 -0.44290611  &lt;span class="m"&gt;1&lt;/span&gt;.2644769   &lt;span class="m"&gt;1&lt;/span&gt;.55474603&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-1.08704031  &lt;span class="m"&gt;2&lt;/span&gt;.22870898  &lt;span class="m"&gt;0&lt;/span&gt;.85237521  &lt;span class="m"&gt;0&lt;/span&gt;.15609477&lt;span class="o"&gt;]]&lt;/span&gt;
doubled with gpuarray:
&lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.55481088 -2.89662027  &lt;span class="m"&gt;1&lt;/span&gt;.27595639  &lt;span class="m"&gt;0&lt;/span&gt;.30717918&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-0.42260566 -0.38404658 -4.47188091  &lt;span class="m"&gt;0&lt;/span&gt;.28073129&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-1.38157964 -0.88581222  &lt;span class="m"&gt;2&lt;/span&gt;.52895379  &lt;span class="m"&gt;3&lt;/span&gt;.10949206&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-2.17408061  &lt;span class="m"&gt;4&lt;/span&gt;.45741796  &lt;span class="m"&gt;1&lt;/span&gt;.70475042  &lt;span class="m"&gt;0&lt;/span&gt;.31218955&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Something More&lt;/h4&gt;
&lt;p&gt;If you need to install PyCUDA to another version of Python, you just need to install another Python with Pyenv and change the local version of the path of pycuda. For example, we install a Python 3.5.1 and install the PyCUDA to it with commands below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install &lt;span class="m"&gt;3&lt;/span&gt;.5.1
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/pycuda
pyenv &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;.5.1
python configure.py
sudo make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then everything will be OK.&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="CUDA"></category><category term="Mac"></category><category term="Pyenv"></category></entry><entry><title>PyCUDA Tutorial 中文版</title><link href="/pycuda-tutorial-zhong-wen-ban.html" rel="alternate"></link><published>2016-10-13T11:20:00+08:00</published><updated>2016-10-13T11:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-10-13:/pycuda-tutorial-zhong-wen-ban.html</id><summary type="html">&lt;p&gt;&lt;a href="https://documen.tician.de/pycuda/"&gt;PyCUDA  Tutorial 英文原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.cycleuser.org"&gt;CycleUser&lt;/a&gt; 翻译&lt;/p&gt;
&lt;h2&gt;开始使用&lt;/h2&gt;
&lt;p&gt;在你使用PyCuda之前，要先用import命令来导入并初始化一下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.driver&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;cuda&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.autoinit&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pycuda.compiler&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SourceModule&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这里要注意，你并不是&lt;strong&gt;必须&lt;/strong&gt;使用pycuda.autoinit,初始化、内容的创建和清理也都可以手动实现。&lt;/p&gt;
&lt;h2&gt;转移数据&lt;/h2&gt;
&lt;p&gt;接下来就是要把数据转移到设备（device）上了。一般情况下，在使用PyCuda的时候，原始数据都是以NumPy数组的形式存储在宿主系统（host）中的。（不过实际上，只要符合Python缓冲区接口的数据类型就都可以使用的，甚至连字符串类型str都可以。）&lt;/p&gt;
&lt;p&gt;（&lt;strong&gt;译者注：宿主系统host，就是处理器-内存-外存组成的常规Python运行环境;设备device，就是你要拿来做CUDA运算的显卡或者运算卡，可以是单卡也可以是阵列。&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;下面这行示例代码创建了一个随机数组成的4*4大小的数组a：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://documen.tician.de/pycuda/"&gt;PyCUDA  Tutorial 英文原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.cycleuser.org"&gt;CycleUser&lt;/a&gt; 翻译&lt;/p&gt;
&lt;h2&gt;开始使用&lt;/h2&gt;
&lt;p&gt;在你使用PyCuda之前，要先用import命令来导入并初始化一下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.driver&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;cuda&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.autoinit&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pycuda.compiler&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SourceModule&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这里要注意，你并不是&lt;strong&gt;必须&lt;/strong&gt;使用pycuda.autoinit,初始化、内容的创建和清理也都可以手动实现。&lt;/p&gt;
&lt;h2&gt;转移数据&lt;/h2&gt;
&lt;p&gt;接下来就是要把数据转移到设备（device）上了。一般情况下，在使用PyCuda的时候，原始数据都是以NumPy数组的形式存储在宿主系统（host）中的。（不过实际上，只要符合Python缓冲区接口的数据类型就都可以使用的，甚至连字符串类型str都可以。）&lt;/p&gt;
&lt;p&gt;（&lt;strong&gt;译者注：宿主系统host，就是处理器-内存-外存组成的常规Python运行环境;设备device，就是你要拿来做CUDA运算的显卡或者运算卡，可以是单卡也可以是阵列。&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;下面这行示例代码创建了一个随机数组成的4*4大小的数组a：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;不过要先暂停一下—咱们刚刚创建的这个数组a包含的是双精度浮点数，但大多数常用的NVIDIA显卡只支持单精度浮点数，所以需要转换一下类型：&lt;/p&gt;
&lt;p&gt;（&lt;strong&gt;译者注：原作者的这篇简介主要针对使用常规普通显卡的用户，比如GeForce系列的各种大家平时用到的都是这个范围的，相比专门的计算卡，在双精度浮点数等方面进行了阉割，所以作者才建议转换类型到单精度浮点数。如果你使用的是专门的计算卡，就不用这样了。&lt;/strong&gt;）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;接下来，要把已有的数据转移过去，还要设定一个目的地，所以我们要在显卡中分配一段显存：&lt;/p&gt;
&lt;p&gt;（&lt;strong&gt;译者注：原文说的是设备，这里就直接说成显卡了，毕竟大家用显卡的比较多。另外下面这个代码中的a.nbytes是刚刚生成的数组a的大小，这里作者是按照数组大小来分配的显存，新入门的用户要注意这里，后续的使用中，显存的高效利用是很重要的。&lt;/strong&gt;）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a_gpu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem_alloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nbytes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最后，咱们把刚刚生成的数组a转移到GPU里面吧：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;memcpy_htod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_gpu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;运行一个内核函数（kernel）&lt;/h2&gt;
&lt;p&gt;咱们这篇简介争取说的都是最简单的内容：咱们写一个代码来把a_gpu这段显存中存储的数组的每一个值都乘以2. 为了实现这个效果，我们就要写一段CUDA C代码，然后把这段代码提交给一个构造函数，这里用到了pycuda.compiler.SourceModule:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;mod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SourceModule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt; __global__ void doublify(float *a)&lt;/span&gt;
&lt;span class="s2"&gt; {&lt;/span&gt;
&lt;span class="s2"&gt; int idx = threadIdx.x + threadIdx.y*4;&lt;/span&gt;
&lt;span class="s2"&gt; a[idx] *= 2;&lt;/span&gt;
&lt;span class="s2"&gt; }&lt;/span&gt;
&lt;span class="s2"&gt; &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（&lt;strong&gt;译者注：上面这段代码需要对C有一定了解。这里的threadIDx是CUDA C语言的内置变量，这里借此确定了a数组所在的位置，然后通过指针对数组中每一个元素进行了自乘2的操作。&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;这一步如果没有出错，就说明这段代码已经编译成功，并且加载到显卡中了。然后咱们可以使用一个到咱们这个pycuda.driver.Function的引用，然后调用此引用，把显存中的数组a_gpu作为参数传过去，同时设定块大小为4x4：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;doublify&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_gpu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最后，咱们就把经过运算处理过的数据从GPU取回，并且将它和原始数组a一同显示出来对比一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a_doubled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty_like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;memcpy_dtoh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_doubled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a_gpu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a_doubled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（&lt;strong&gt;译者注：原作者在原文中使用的是Python2，我这里用的是带括号的print，这样同时能在python2和python3上运行。&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;输出的效果大概就是如下所示：&lt;/p&gt;
&lt;p&gt;（&lt;strong&gt;译者注：上面这个是从显存中取回的翻倍过的数组，下面的是原始数组。&lt;/strong&gt;）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.51360393  &lt;span class="m"&gt;1&lt;/span&gt;.40589952  &lt;span class="m"&gt;2&lt;/span&gt;.25009012  &lt;span class="m"&gt;3&lt;/span&gt;.02563429&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-0.75841576 -1.18757617  &lt;span class="m"&gt;2&lt;/span&gt;.72269917  &lt;span class="m"&gt;3&lt;/span&gt;.12156057&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.28826082 -2.92448163  &lt;span class="m"&gt;1&lt;/span&gt;.21624792  &lt;span class="m"&gt;2&lt;/span&gt;.86353827&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;.57651746  &lt;span class="m"&gt;0&lt;/span&gt;.63500965  &lt;span class="m"&gt;2&lt;/span&gt;.21570683 -0.44537592&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.25680196  &lt;span class="m"&gt;0&lt;/span&gt;.70294976  &lt;span class="m"&gt;1&lt;/span&gt;.12504506  &lt;span class="m"&gt;1&lt;/span&gt;.51281714&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;-0.37920788 -0.59378809  &lt;span class="m"&gt;1&lt;/span&gt;.36134958  &lt;span class="m"&gt;1&lt;/span&gt;.56078029&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.14413041 -1.46224082  &lt;span class="m"&gt;0&lt;/span&gt;.60812396  &lt;span class="m"&gt;1&lt;/span&gt;.43176913&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.78825873  &lt;span class="m"&gt;0&lt;/span&gt;.31750482  &lt;span class="m"&gt;1&lt;/span&gt;.10785341 -0.22268796&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;出现上面这样输出就说明成功了！整个攻略就完成了。另外很值得庆幸的是，运行输出之后PyCuda就会把所有清理和内存回收工作做好了，咱们的简介也就完毕了。不过你可以再看一下接下来的内容，里面有一些有意思的东西。&lt;/p&gt;
&lt;p&gt;(本文的代码在PyCuda源代码目录下的examples/demo.py文件中。)&lt;/p&gt;
&lt;h3&gt;简化内存拷贝&lt;/h3&gt;
&lt;p&gt;PyCuda提供了pycuda.driver.In, pycuda.driver.Out, 以及pycuda.driver.InOut 这三个参数处理器（argument handlers），能用来简化内存和显存之间的数据拷贝。例如，咱们可以不去创建一个a_gpu，而是直接把a移动过去，下面的代码就可以实现：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InOut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;有准备地调用函数&lt;/h3&gt;
&lt;p&gt;使用内置的 pycuda.driver.Function.&lt;strong&gt;call&lt;/strong&gt;() 方法来进行的函数调用，会增加类型识别的资源开销（参考显卡接口）。 要实现跟上面代码同样的效果，又不造成这种开销，这个函数就需要设定好参数类型（如Python的标准库中的结构体模块struct所示），然后再去调用该函数。这样也就不用需要再使用numpy.number类去制定参数的规模了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;P&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prepared_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a_gpu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;抽象以降低复杂度&lt;/h2&gt;
&lt;p&gt;使用 pycuda.gpuarray.GPUArray，同样效果的代码实现起来就更加精简了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.gpuarray&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;gpuarray&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.driver&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;cuda&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycuda.autoinit&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;

&lt;span class="n"&gt;a_gpu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gpuarray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_gpu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;a_doubled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a_gpu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a_doubled&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a_gpu&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;进阶内容&lt;/h2&gt;
&lt;h3&gt;结构体&lt;/h3&gt;
&lt;p&gt;（由Nicholas Tung提供，代码在examples/demo_struct.py文件中)&lt;/p&gt;
&lt;p&gt;假如我们用如下的构造函数，对长度可变的数组的每一个元素的值进行翻倍：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;mod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SourceModule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt; struct DoubleOperation {&lt;/span&gt;
&lt;span class="s2"&gt; int datalen, __padding; // so 64-bit ptrs can be aligned&lt;/span&gt;
&lt;span class="s2"&gt; float *ptr;&lt;/span&gt;
&lt;span class="s2"&gt; };&lt;/span&gt;

&lt;span class="s2"&gt; __global__ void double_array(DoubleOperation *a) {&lt;/span&gt;
&lt;span class="s2"&gt; a = &amp;amp;a[blockIdx.x];&lt;/span&gt;
&lt;span class="s2"&gt; for (int idx = threadIdx.x; idx datalen; idx += blockDim.x) {&lt;/span&gt;
&lt;span class="s2"&gt; a-&amp;gt;ptr[idx] *= 2;&lt;/span&gt;
&lt;span class="s2"&gt; }&lt;/span&gt;
&lt;span class="s2"&gt; }&lt;/span&gt;
&lt;span class="s2"&gt; &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;网格grid中的每一个块block（这些概念参考CUDA的官方文档）都将对各个数组进行加倍。for循环允许比当前线程更多的数据成员被翻倍，当然，如果能够保证有足够多的线程的话，这样做的效率就低了。接下来，基于这个结构体进行封装出来的一个类就产生了，并且有两个数组被创建出来：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DoubleOpStruct&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;mem_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nbytes&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;struct_arr_ptr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_device&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtype&lt;/span&gt;
        &lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;memcpy_htod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;struct_arr_ptr&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getbuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;int32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
        &lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;memcpy_htod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;struct_arr_ptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getbuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_device&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;struct_arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem_alloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;DoubleOpStruct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;do2_ptr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;struct_arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;DoubleOpStruct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem_size&lt;/span&gt;

&lt;span class="n"&gt;array1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DoubleOpStruct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;struct_arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;array2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DoubleOpStruct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;do2_ptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;original arrays&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;array1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;array2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上面这段代码使用了pycuda.driver.to_device() 和 pycuda.driver.from_device() 这两个函数来分配内存和复制数值，并且演示了在显存中如何利用从已分配块位置进行的偏移。最后咱们执行一下这段代码；下面的代码中演示了两种情况：对两个数组都进行加倍，以及只加倍第二个数组：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;double_array&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;struct_arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;doubled arrays&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;array1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;array2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;do2_ptr&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;doubled second only&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;array1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;array2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;接下来的征程&lt;/h2&gt;
&lt;p&gt;当你对这些基础内容感到足够熟悉了，就可以去深入探索一下显卡接口。更多的例子可以再PyCuda的源码目录下的examples子目录。这个文件夹里面也包含了一些测试程序，可以用来比对GPU和CPU计算的差别。另外PyCuda源代码目录下的test子目录里面由一些关于功能如何实现的参考。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/inducer/pycuda"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/pycuda"&gt;Download Releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;©2008, Andreas Kloeckner.
©2016, translated to Chinese by &lt;a href="http://blog.cycleuser.org"&gt;CycleUser&lt;/a&gt;
Powered by &lt;a href="http://sphinx-doc.org/"&gt;Sphinx 1.4.8&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/bitprophet/alabaster"&gt;Alabaster 0.7.9&lt;/a&gt; | &lt;a href="https://documen.tician.de/pycuda/_sources/tutorial.txt#getting-started"&gt;Page source&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="CUDA"></category></entry><entry><title>Use CUDA 8.0 with macOS Sierra (10.12)</title><link href="/use-cuda-80-with-macos-sierra-1012.html" rel="alternate"></link><published>2016-10-01T00:00:00+08:00</published><updated>2016-10-01T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-10-01:/use-cuda-80-with-macos-sierra-1012.html</id><summary type="html">&lt;h5&gt;NOTICE 注意&lt;/h5&gt;
&lt;p&gt;The latest version of CUDA8.63 is now working well with macOS Sierra 10.12.3, and there is no need to bother~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最新版本的CUDA8.63早已经和渣果Sierra10.12.3磨合的不错了，完全能够正常工作不用折腾了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;IGNORE THESE 已经兼容了不用看了&lt;/h5&gt;
&lt;p&gt;The moment I am typing, the latest version of &lt;a href="https://developer.nvidia.com/cuda-downloads"&gt;CUDA&lt;/a&gt; is &lt;a href="https://developer.nvidia.com/compute/cuda/8.0/Prod/local_installers/cuda_8.0.47_mac-dmg"&gt;8.0.4&lt;/a&gt;. It is the …&lt;/p&gt;</summary><content type="html">&lt;h5&gt;NOTICE 注意&lt;/h5&gt;
&lt;p&gt;The latest version of CUDA8.63 is now working well with macOS Sierra 10.12.3, and there is no need to bother~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最新版本的CUDA8.63早已经和渣果Sierra10.12.3磨合的不错了，完全能够正常工作不用折腾了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;IGNORE THESE 已经兼容了不用看了&lt;/h5&gt;
&lt;p&gt;The moment I am typing, the latest version of &lt;a href="https://developer.nvidia.com/cuda-downloads"&gt;CUDA&lt;/a&gt; is &lt;a href="https://developer.nvidia.com/compute/cuda/8.0/Prod/local_installers/cuda_8.0.47_mac-dmg"&gt;8.0.4&lt;/a&gt;. It is the first version that provide the CUDA driver for macOS Sierra AKA 10.12.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我打字的这个时候，最新版本的&lt;a href="https://developer.nvidia.com/cuda-downloads"&gt;CUDA&lt;/a&gt;是&lt;a href="https://developer.nvidia.com/compute/cuda/8.0/Prod/local_installers/cuda_8.0.47_mac-dmg"&gt;8.0.4&lt;/a&gt;. 这是NVIDIA首次对macOS Sierra 也就是10.12 提供了CUDA驱动支持.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But there comes the bad news as usual that the latest version of CUDA is not compatible with clang 8.0.0, which is provided with Xcode8. So When trying to compile the sample apps, you will get the following error:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不过有个很悲伤的消息，就是这个最新版本的CUDA很自然的与最新版的Xcode8所提供的clang 8.0.0不兼容。所以当你安装完了那个巨大的Dmg之后 想编译CUDA提供的sample的时候就要遇到下面这个错误提示了：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nvcc fatal   : The version &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;80000&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; of the host compiler &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Apple clang&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; is not supported
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Someone downgrads to Xcode 7.*  but still gets the following errors:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有的小伙伴尝试了降级到Xcode7.*，然后还是得到了一大堆错误：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ...
make&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: *** &lt;span class="o"&gt;[&lt;/span&gt;asyncAPI.o&lt;span class="o"&gt;]&lt;/span&gt; Error &lt;span class="m"&gt;2&lt;/span&gt;
make: *** &lt;span class="o"&gt;[&lt;/span&gt;0_Simple/asyncAPI/Makefile.ph_build&lt;span class="o"&gt;]&lt;/span&gt; Error &lt;span class="m"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Luckily, I find that we can make the CUDA work with keeping both Xcode 8 and 7. I assume that you are using the Xcode8 as /Applications/Xcode.app and have no other versions of Xcode.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;好在我探索了一下，找到一个思路来运行CUDA，并同时保留Xcode8和7。我假设你目前仅安装了Xcode8，路径和名字为/Applications/Xcode.app。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Rename /Applications/Xcode.app to Xcode8.app, so we can keep both of 8 and 7 without the confliction of their names.&lt;blockquote&gt;
&lt;p&gt;把已经安装的Xcode.app重命名成Xcode8.app，这样就跟等会我们要安装的Xcode7不发生名字的冲突了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo mv /Applications/Xcode.app /Applications/Xcode8.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download &lt;a href="https://developer.apple.com/download"&gt;XCode 7.3.1 and Command Line Tools for XCode 7.3.1&lt;/a&gt; , then install them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下载&lt;a href="https://developer.apple.com/download"&gt;XCode 7.3.1 和 Command Line Tools for XCode 7.3.1&lt;/a&gt;，然后安装即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the following command on terminal to switch the clang version to what we just installed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在终端中运行下面这个命令，把clang切换到咱们刚安装的版本：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo xcode-select --switch /Library/Developer/CommandLineTools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Run the command below to check the version of clang, which should be 7.3.0:&lt;blockquote&gt;
&lt;p&gt;然后进行一下版本测试吧，应该是7.3.0了：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;clang -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In my case I got this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我这里得到的结果如下所示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Apple LLVM version &lt;span class="m"&gt;7&lt;/span&gt;.3.0 &lt;span class="o"&gt;(&lt;/span&gt;clang-703.0.31&lt;span class="o"&gt;)&lt;/span&gt;
Target: x86_64-ap ple-darwin16.0.0
Thread model: posix
InstalledDir: /Library/Developer/CommandLineTools/usr/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we can  compile the sample app of CUDA. Those information are picked up fom &lt;a href="https://devtalk.nvidia.com/default/topic/967644/mac-osx-cuda-8-0-not-compatible-with-clang-8-0-0/?offset=8#4987715"&gt;This Post&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;然后就可以编译CUDA提供的sample了。上面这些信息收集整理自 &lt;a href="https://devtalk.nvidia.com/default/topic/967644/mac-osx-cuda-8-0-not-compatible-with-clang-8-0-0/?offset=8#4987715"&gt;这个帖子&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Mac"></category><category term="CUDA"></category><category term="Mac"></category></entry><entry><title>How about using material science to solve the problem of smoke?</title><link href="/how-about-using-material-science-to-solve-the-problem-of-smoke.html" rel="alternate"></link><published>2016-06-28T10:20:00+08:00</published><updated>2016-06-28T10:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-06-28:/how-about-using-material-science-to-solve-the-problem-of-smoke.html</id><summary type="html">&lt;p&gt;About 20 years ago, I used to live in the Northeast of China, for several years. It was a small mountain town with many birches and lots of magpies flying and singing around. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大概二十年前，我在中国东北的某个地方生活了一些年。那是一个小山城，漫山遍野都是白桦树林，还有围绕期间纷飞鸣叫的喜鹊。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;People there were nice and friendly. They were always  willing to offer …&lt;/p&gt;</summary><content type="html">&lt;p&gt;About 20 years ago, I used to live in the Northeast of China, for several years. It was a small mountain town with many birches and lots of magpies flying and singing around. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大概二十年前，我在中国东北的某个地方生活了一些年。那是一个小山城，漫山遍野都是白桦树林，还有围绕期间纷飞鸣叫的喜鹊。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;People there were nice and friendly. They were always  willing to offer helping hands to strangers. Yet nearly all of them loved to smoke a lot.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;那里的人民淳朴友好。他们都是心肠善良的好人，很乐于助人。不过他们中间大部分人都吸烟。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then, as a little child, I began to cough badly. The local doctor told my parents that it was pharyngitis caused by tobacco smoke, without method. I can still remember that he was saying that with a burning cigarette in his mouth.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;后来，我从很小的时候，就开始咳嗽得特别厉害。当地大夫跟我父母说，这是咽炎，被烟雾熏的，没什么办法治疗。我还记着他说话的同时最里面还叼着一根点着的烟。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I didn't understand the meaning of his words exactly,"chronic lifelong disease", and I thought everything would be OK few days later. The sad fact is that it keeps coming in the following years and gets even worse after I arriving in Beijing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;那时候我还不太理解他说的各种术语，“慢性终身疾病”，所以我就想着估计过几天就好了。悲剧的是这病经常发作，而且自从我来了北京，就更严重了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, I have already figured out that with the help of PM2.5 in polluted air outside and second-hand smoke indoor, respiratory disease has become a most common, chronic lifelong disease, which seriously damages people's health. Besides, there is also serious cardiovascular including coronary heart disease caused by them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现在，我已经弄清了，室内二手烟和室外的PM2.5双剑合璧，已经让呼吸系统疾病成了最普遍的终身慢性疾病。另外这些还引起了很多严重的心血管疾病比如冠心病等等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yes, I know that there is almost nothing we can change as normal common citizens to the air pollution but to pray for mighty wind, maybe. But I am pretty sure that we can control the smoke made by every individual smoker, at least.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;是啊，我也清楚，对于空气污染，普通市民除了祈祷“大风起兮云飞扬”,恐怕也做不了什么了。但我很确定的是，最起码我们能控制每一个吸烟者释放的烟雾。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is ridiculous that, after the order of banning smoking issued by the Beijing government, many smokers began to complain about their rights violated. How do they feel about other people's right to life and health when they poison them by smoking around? Is your right to suck some bad gas larger than our lives?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很有趣的是，当北京政府颁布了禁烟法令之后，很多吸烟的人开始抱怨自身权益被侵犯了。当他们在其他人身边吸烟来毒害别人的时候，怎么不想想其他人的生命和健康权？你们吸气体的权利大过我们生存的权利么？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In fact, I don't hate smoking people, because I don't care whether they are going to kill themselves gradually. But I care about the smoke they burn out and throw to other people, other livings, and the nature.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;事实上，我并不痛恨吸烟的人，因为我不在乎他们是不是要慢性自杀。但我在意的是他们不完全吸进去而是排放很多烟出来，用这些烟来毒害周围的人、生物，甚至整个自然界。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In my opinion, smokers should take the responsibility to clean up your smoke, preventing others from which. How about putting some special bags around their heads to make sure they can both breath and suck all smoke in their lungs? Using some material making those special breazing bags is a good way of protecting the entire universe.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在我看来，吸烟者最起码应该负责清理干净你们的烟雾，不要让其他人接触到。或者可以考虑在吸烟者的脑袋周围装上一种特制的塑料袋，保证他们能够呼吸，并且吸干净所有烟气到他们自己的肺部，这样好不好？用某种特质材料来制作这种特殊呼吸袋将会成为保护整个宇宙的好思路。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="http://img.taopic.com/uploads/allimg/111006/6308-11100612141597.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://health.youth.cn/jiankangzx/201501/W020150128437580685327.jpg"&gt;&lt;/p&gt;</content><category term="Story"></category><category term="Story"></category><category term="Hate"></category><category term="Disease"></category></entry><entry><title>My first Microscope</title><link href="/my-first-microscope.html" rel="alternate"></link><published>2016-04-22T11:20:00+08:00</published><updated>2016-04-22T11:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-04-22:/my-first-microscope.html</id><summary type="html">&lt;p&gt;In 2008, I got the dream of having a microscope of my own.
This dream could track back to what happened in one class, when Mr Moris told me to leave the equipment alone or get out of the lab.
I was trying to take the microscope apart by my …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In 2008, I got the dream of having a microscope of my own.
This dream could track back to what happened in one class, when Mr Moris told me to leave the equipment alone or get out of the lab.
I was trying to take the microscope apart by my hand.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在2008年的时候，我有一个梦想，就是有一台自己的偏光显微镜。
梦想的来源是因为上课的时候，莫老师对我语重心长说：『再乱动仪器就不许来实验室！』
当时我在私自拆卸目镜、物镜、载物台等等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At that time, a lot of people agreed that I belong to the problematic youth because I always asked too many questions and brought as many problems.
Fortunately, there came Professor White interceding for me. Then Mr Moris let me stay in the class.
I have always been grateful for what Professor White did for me, even though he refused to accept me as his PHD student, which is reasonable to me, because I know that I had never played nice.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现在想起来自己当时真是个问题儿童，主要体现在：①问很多问题；②总惹麻烦。
好在白老师过来给说和，莫老师放了我一马。
我一直特别感激白老师，虽然后来他不愿意收我为徒。
这个我也可以理解的，因为长期以来我都带来很多问题。。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I learned more than the structure of microscope in the following lessons, and began to distinguish Quartz, Mica, Feldspars and so on.
Then the desire of having a microscope of myself just kept growing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;接下来的课程中，我除了对显微镜的机械结构有所了解，也开始能分辨石英、云母、长石等等。
然后我就更加想有一台自己的显微镜，这样就可以随时想看就看了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finally, after 8 years, I got my own microscope, which was sold from the CDUT (Chengdu University of Technology).
The model of it is JiangNan XPT-6, a polarizing microscope.
It is so dilapidated that I have to buy different parts of it from many different places and then assemble them together to make it work.
I am over 30 years old now, but I am as happy as a child who finally get the toy he stared at for so many times in the shop window.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最终，八年之后，我从成都理工买了一个显微镜，终于算是弄来一台自己的。
型号是江南 XPT-6，偏光显微镜。
这个镜子挺破旧的了，我得四处买来一些零件，然后拼凑起来，才勉强使用。
我三十来岁的人了，这件事让我特开心，就好像小时候矁了很久的橱窗里的玩具，突然有人给我个一样。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The following pictures show my microscope and some other parts.
The photos of garnets were taken with this old microscope and my old iPhone 5s.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我给这个老显微镜和各个部件拍了一些照片。
然后我还用这个老显微镜和 iPhone 5S这款老手机来给一些石榴石拍了照片。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="http://7xnq2o.com1.z0.glb.clouddn.com/MicroScope%E9%9B%86%E4%BD%93.jpeg?imageView/2/w/420/q/90"&gt;
All Together&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="http://7xnq2o.com1.z0.glb.clouddn.com/MicroScope%E9%95%9C%E5%AD%90.jpeg?imageView/2/w/420/q/90"&gt;
Main Body&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="http://7xnq2o.com1.z0.glb.clouddn.com/MicroScope%E9%95%9C%E5%A4%B4.jpeg?imageView/2/w/420/q/90"&gt;
Lens&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="Garnet 10*10" src="http://7xnq2o.com1.z0.glb.clouddn.com/MicroScope10*10.jpeg?imageView/2/w/420/q/90"&gt;
Garnet 10*10&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="Garnet 10*20" src="http://7xnq2o.com1.z0.glb.clouddn.com/MicroScope10*20.jpeg?imageView/2/w/420/q/90"&gt;
Garnet 10*20&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="Garnet 10*40" src="http://7xnq2o.com1.z0.glb.clouddn.com/MicroScope10*40.jpeg?imageView/2/w/420/q/90"&gt;
Garnet 10*40&lt;/p&gt;
&lt;hr&gt;</content><category term="Story"></category><category term="Microscope"></category><category term="Story"></category></entry><entry><title>ThinkPython 双语学编程</title><link href="/thinkpython-shuang-yu-xue-bian-cheng.html" rel="alternate"></link><published>2016-02-25T00:00:00+08:00</published><updated>2016-02-25T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2016-02-25:/thinkpython-shuang-yu-xue-bian-cheng.html</id><summary type="html">&lt;p&gt;Finally I finished the translation of ThinkPython. All the files can be found &lt;a href="https://github.com/cycleuser/ThinkPython-en-cn"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我总算是翻译完了这本 ThinkPython。所有文件都可以在&lt;a href="https://github.com/cycleuser/ThinkPython-en-cn"&gt;这里&lt;/a&gt;下载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are there different formats of the translated book, which contains an epub, a doc and some md files.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我提供了好几个格式的文件，包括一个 epub，一份 Word 文档，以及很多 md 文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The epub file …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Finally I finished the translation of ThinkPython. All the files can be found &lt;a href="https://github.com/cycleuser/ThinkPython-en-cn"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我总算是翻译完了这本 ThinkPython。所有文件都可以在&lt;a href="https://github.com/cycleuser/ThinkPython-en-cn"&gt;这里&lt;/a&gt;下载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are there different formats of the translated book, which contains an epub, a doc and some md files.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我提供了好几个格式的文件，包括一个 epub，一份 Word 文档，以及很多 md 文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The epub file is good for users of mobile devices and e-ink readers such as Kindle. The doc is designed for those who would like to offer help on revising it. The md files are very easy to read and edit that they are just plain text files and can be accessed by any text editors or browsers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;epub 文件最适合用移动设备或者诸如 Kindle 之类的电纸书来阅读的用户。Word 文档的doc 格式文件希望提供给愿意帮忙修改改进的朋友。md 格式的文件最方便编辑和阅读了，因为这些文件就是单纯的文本文档而已，可以用任意的编辑器或者浏览器来读取。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It takes me some time to make it. I hope it would be helpful for some newbies like me.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我花了不少时间来翻译这本书。只希望能帮到跟我一样的初学者。&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Python"></category><category term="Python"></category><category term="Book"></category><category term="Download"></category></entry><entry><title>Export and Import character of Mount&amp;Blade Warband under Mac OS X</title><link href="/export-and-import-character-of-mountblade-warband-under-mac-os-x.html" rel="alternate"></link><published>2015-11-29T00:00:00+08:00</published><updated>2015-11-29T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2015-11-29:/export-and-import-character-of-mountblade-warband-under-mac-os-x.html</id><summary type="html">&lt;p&gt;Mac系统下Steam安装的骑马与砍杀战团导入导出角色信息&lt;/p&gt;
&lt;p&gt;Mount&amp;amp;Blade is one of my favourite game. I just install it into my macbook with steam. Then I try to import my old character and find it very tricky to find the right position to put the old txt file at.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我很喜欢骑砍，缓解压力好伙伴，所以渣果的本子也通过Steam来装了一个。然后我想着把旧的人物角色导入进来，发现还挺不好找目录位置来放角色文件的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mac系统下Steam安装的骑马与砍杀战团导入导出角色信息&lt;/p&gt;
&lt;p&gt;Mount&amp;amp;Blade is one of my favourite game. I just install it into my macbook with steam. Then I try to import my old character and find it very tricky to find the right position to put the old txt file at.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我很喜欢骑砍，缓解压力好伙伴，所以渣果的本子也通过Steam来装了一个。然后我想着把旧的人物角色导入进来，发现还挺不好找目录位置来放角色文件的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then I do some search find the solution &lt;a href="http://bbs.mountblade.com.cn/thread-560729-1-1.html"&gt;here&lt;/a&gt;. But I don't know whether there are any similar problems in the English world. So I make this translation and put it here to help guys.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;然后我搜索了一下，在中国论坛上找到了一个&lt;a href="http://bbs.mountblade.com.cn/thread-560729-1-1.html"&gt;解决方案&lt;/a&gt;。但我不知道英语世界中大家是不是也可能遇到类似的问题。所以我翻译了一下，把解决方法贴到这里，希望能帮到大家。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You need to right click at Finder, and go to the following location:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你需要右键Finder，然后转到下面的路径：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;/Users/&lt;strong&gt;{YOUR USER NAME HERE}&lt;/strong&gt;/Library/Application Support/MBWarband/&lt;/p&gt;
&lt;p&gt;（注意，要正确输入你当前的账户名）&lt;/p&gt;
&lt;p&gt;Then you will find or creat a folder named "Mount and Blade Warband Characters" and then you can put your character file in the folder.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;然后你看看是不是有这么个Mount and Blade Warband Characters文件夹，没有就创建一个，然后把你的角色文件放进去就可以了。&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Mac"></category><category term="Mac"></category><category term="Game"></category><category term="Mount&amp;Blade"></category></entry><entry><title>Use Physical Drive with VirtualBox under Mac OS X</title><link href="/use-physical-drive-with-virtualbox-under-mac-os-x.html" rel="alternate"></link><published>2015-11-10T00:00:00+08:00</published><updated>2015-11-10T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2015-11-10:/use-physical-drive-with-virtualbox-under-mac-os-x.html</id><summary type="html">&lt;p&gt;Mac下VirtualBox使用物理磁盘启动操作系统&lt;/p&gt;
&lt;p&gt;I used to work with a Linux or Windows PC a lot. I always use VMware Player on both of them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我一般都用Linux或者Windows。在用这两个系统的时候我总选择VMware Player作为虚拟机软件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I choose VMware because the Player is free for personal use and the functions of it are powerful. I can use it to install any …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mac下VirtualBox使用物理磁盘启动操作系统&lt;/p&gt;
&lt;p&gt;I used to work with a Linux or Windows PC a lot. I always use VMware Player on both of them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我一般都用Linux或者Windows。在用这两个系统的时候我总选择VMware Player作为虚拟机软件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I choose VMware because the Player is free for personal use and the functions of it are powerful. I can use it to install any operating system into both a virtual hard disk file and a physical hard drive. The second kind installation is very useful that I can boot the target OS installed both in the VMware Player and on the real machine. Booting it in the Player makes it easy for me to make adjustment at the same time with other work under the host OS. And booting the target OS on the real machine changes it into a whole real operating system and could archive the best performance of the hardware.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我用VMware主要因为Player对个人应用是免费的，而且功能也非常强大。通过VMware Player，我可以随意在虚拟磁盘文件或者物理硬盘上面安装一个操作系统。第二种安装功能非常有用处，通过这样方式安装的系统即可以在虚拟机里面启动，也可以用来启动物理机。在虚拟机里面启动很方便，我可以随时对系统进行调整，随时用外面的宿主系统做其他的事情。而用这个系统来启动物理机就能把虚拟机系统变成真正的操作系统来使用，发挥和直接物理安装一样的高性能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then some months ago I had to begin working with a Mac, because I've been learning to code with Xcode and Swift. But VMware doesn't provide a version of VMware Player for Mac OS X, that makes me no choice but to take VirtualBox as an alternative one.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;几个月之前我不得不使用渣果了，因为需要使用Xcode和Swift。然而VMware不提供渣果系统的版本，这就让我只能选择VirtualBox来替补了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The use of physical hard drive with VirtualBox is not that easy as the VMware Player. So I list the process here in case that I forgot or some other friends met similar situation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但VirtualBox使用物理磁盘就不像VMware那么方便了。所以我把整个过程列出来，以免自己忘掉了，也可供他人参考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The first step is finding the right disk number. You need to enter the dir of /dev, and then use the command ls to show the list of your devices.&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;第一步就是找到你要用的磁盘序号。你需要进入根目录下的dev文件夹，在里面使用ls来列出所有设备信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$cd&lt;/span&gt; /dev
dev&lt;span class="nv"&gt;$ls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I find my target drive is /dev/disk0. In my case, I am using two hard disks in the Mac boot. One is /dev/disk0 installed with both Linux and Windows already, and the other one is /dev/disk1 with Mac OS X. I am planing to use the /dev/disk0 in the VirtualBox.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;我的目标磁盘就是disk0。我用的渣果机器有两块硬盘。一个是disk0，已经装了Linux和Windows。另一个是disk1，安装的是渣果系统。我准备在VirtualBox里面用disk0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After finding your target drive, you need to eject all the mounted volumes of the disk, and then get access to it by using the commands below (remember that you need to change the /dev/disk0 to your disk path):&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;找到目标之后，你要推出该磁盘所有已挂载的分区，然后使用下面的命令来获取权限（机主你要把这里的disk0改成你自己的那个硬盘编号）：&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$sudo&lt;/span&gt; chmod &lt;span class="m"&gt;777&lt;/span&gt; /dev/disk0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Then you can use the command below. Here it is only an example. You need to change DISK_NAME into your favorite name and change ~/(meaning the user's home) into your own dir.&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;接下来你要运行下面的命令来创建虚拟磁盘文件了。这里只是一个例子。你需要把DISK_NAME改成你喜欢的名字，另外~/这个目录（就是当前用户的主目录）也改成你要用的目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$sudo&lt;/span&gt; VBoxManage internalcommands createrawvmdk -filename ~/DISK_NAME.vmdk -rawdisk /dev/disk0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;You can not use the vmdk file created unless you change the ownership of it and chmod it to 777.&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;现在你还不能使用这个vmdk文件，你还得获取所有权，然后更改其权限为777。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$sudo&lt;/span&gt; chown YOUR_USER_NAME DISK_NAME.vmdk
&lt;span class="nv"&gt;$sudo&lt;/span&gt; chmod &lt;span class="m"&gt;777&lt;/span&gt; DISK_NAME.vmdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;After that you can use you physical hard drive in the VirtualBox under Mac OS X.&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;这一步做完之后，你就可以在渣果系统中，让VirtualBox使用这个镜像文件所链接的物理硬盘了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Mac"></category><category term="Mac"></category><category term="VirtualBox"></category></entry><entry><title>Python, a better language for Universities in China</title><link href="/python-a-better-language-for-universities-in-china.html" rel="alternate"></link><published>2015-11-03T00:00:00+08:00</published><updated>2015-11-03T00:00:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2015-11-03:/python-a-better-language-for-universities-in-china.html</id><summary type="html">&lt;p&gt;中国大学应该广泛尝试用Python来教编程&lt;/p&gt;
&lt;p&gt;&lt;img alt="Koch曲线" src="http://7xnq2o.com1.z0.glb.clouddn.com/StoryKoch.jpg?imageView/2/w/619/q/90"&gt;&lt;/p&gt;
&lt;p&gt;The picture shows a Koch curve，which may be familiar for those who know something about fractal.
It is an example form an excise of the book &lt;em&gt;Think Python&lt;/em&gt; &lt;a href="http://blog.cycleuser.org/thinkpython-shuang-yu-xue-bian-cheng-chapter-5.html"&gt;Chapter5&lt;/a&gt;'s &lt;a href="http://thinkpython2.com/code/koch.py"&gt;sample solution&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图片是Koch曲线，熟悉分形的同学肯定对此很了解。
这是大胖翻译的ThinkPython这本教材中&lt;a href="http://blog.cycleuser.org/thinkpython-shuang-yu-xue-bian-cheng-chapter-5.html"&gt;第五章&lt;/a&gt;的最后练习题&lt;a href="http://thinkpython2.com/code/koch.py"&gt;样例代码&lt;/a&gt;生成的图案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am always a fan of coding, because all …&lt;/p&gt;</summary><content type="html">&lt;p&gt;中国大学应该广泛尝试用Python来教编程&lt;/p&gt;
&lt;p&gt;&lt;img alt="Koch曲线" src="http://7xnq2o.com1.z0.glb.clouddn.com/StoryKoch.jpg?imageView/2/w/619/q/90"&gt;&lt;/p&gt;
&lt;p&gt;The picture shows a Koch curve，which may be familiar for those who know something about fractal.
It is an example form an excise of the book &lt;em&gt;Think Python&lt;/em&gt; &lt;a href="http://blog.cycleuser.org/thinkpython-shuang-yu-xue-bian-cheng-chapter-5.html"&gt;Chapter5&lt;/a&gt;'s &lt;a href="http://thinkpython2.com/code/koch.py"&gt;sample solution&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图片是Koch曲线，熟悉分形的同学肯定对此很了解。
这是大胖翻译的ThinkPython这本教材中&lt;a href="http://blog.cycleuser.org/thinkpython-shuang-yu-xue-bian-cheng-chapter-5.html"&gt;第五章&lt;/a&gt;的最后练习题&lt;a href="http://thinkpython2.com/code/koch.py"&gt;样例代码&lt;/a&gt;生成的图案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am always a fan of coding, because all I learn from a programing class can be tested immediately. I can find out whether what the teacher says is right. So I put a lot of efforts into programing both in my college years and my postgraduate period. I really enjoy coding a lot.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我对编程一直很热衷，因为学到的内容都是可以拿来用的，我能随时来检测老师讲的内容，不会有一些难以把握正确与否的情况。因此编程课是本科和硕士时代我投入精力最多的课程之一，也是我很喜欢的一门课程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately, coding is not everyone's love.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;然而蜜糖砒霜。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Programing class is like some horrible nightmare for many of my classmates. Some of my friends even attended and failed a C++ class for several times. They often say that they have no chance to code in daily life and do not understand why they are forced to take a programing lesson. They are not interested in anything related to programing. They even begin to hate everything about computer science. So some of the students begin to do something dirty, like copying others' code as their homework or cheating in the exams.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于很多同学来说，编程课简直是痛苦的噩梦。一些同学甚至多次参加某一门编程课而挫败感极其强烈。他们往往认为编程课没有什么用处，也没有太大兴趣，因此非常反感，学习效果可想而知。也因此有一些应付作业应付考试的现象出现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course, there are always some people trying their best to learn coding. However, for most of them, their majors are so far away from C++ or VB that the skills they learned about programing may never be used in their future. So they just forget what they learned some years after the lessons.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当然还是有一些人真的用心学习了，但往往因为自身的专业与C++或者VB之间很少有交集，而且掌握的基本内容也不足以参与一些日常开发，所以在上课之后的数年之内都很难有实践的机会，学到的内容也就只能逐渐荒废了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some others were stuck at some panic point of the programing language such as the memory control or the address of a value. Then they gradually lost their motivation and curiosity about the lesson, and did not make any effort.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;此外，回想身边同学当年在研一时候学C++时候的状态，很大一部分人都是对语言本身的一些特点理解不够，在某些复杂的地方卡住了（比如内存管理或者地址等等），逐渐因为挫败感而失去动力了，对编程本身也没有能够培养出兴趣，更谈不上学到多少技能了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Having no motivation of coding, getting no chance of practicing, and being trapped by some complicated part of a programing language, those are the three killers which should be responsible for boring the students in China in coding lessons.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;觉得没有用而缺乏兴趣，没有实践的机会而逐渐荒废，被一些复杂内容困住而失去动力，这就是国内高校学生面对编程课的情景。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I used to help some of my classmates on the coding lessons during my college years and my postgraduate period. I found that they were all bothered by those three problems. I felt very sorry that they had to spend a lot of time on lessons they hated and they even wouldn't use anything from the lessons.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当年在本科乃至硕士上编程课的时代，我曾经若干次给身边一些同学进行过辅导，深深感觉他们都受到上述三个问题的困扰，而难以在编程课程方面有太大的兴趣和收获。对此我也没有什么办法，只能觉得特别遗憾，感慨他们花费时间去学习一门自己不喜欢、也没机会应用，并且还特别难的课程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I haven't found any solutions until I met up with Python.
I never give up coding since my college time. I am not a good coder at all, but I keep trying to be a better one than I used to be. I wrote some Android applications and some simple calculation functions. Then during my PHD period, I learned something new, Java, Swift, Qt-Quick , and Python.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最近我才意识到一种可能的解决办法——Python。
从本科时代到现在我一直都没有远离编程，比如写一些Android程序或者简单的算法之类，都很肤浅，但从未扔下，并且随着论文和科研的需要，逐渐学了一些新的内容，比如Java、Swift、QT-Quick，以及Python。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I found that Python is friendlier for NON-Computer Science major students as an introduction language to programing world than C++ or Java. Python is easier to teach, learn, and use. After learning Python, students could immediately use it on their own research, and on some GUI projects or scientific calculations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我发现Python相比C++与Java，更适合给非计算机专业的本科生和硕士生作为编程入门语言来教学，授课难度更低，学习几乎无门槛，上手最简单的，学会了之后也能立即在图形化编程或者科学计算中进行使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Firstly, Python is very easy to use on making something for fun without spending much effort on learning a lot of details about the language. Take the Koch curve at the beginning as an example, it is not very hard to do something like that. You can make it happen after you reading about one or two chapters of any textbooks of Python.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先Python很有趣，能做很多有趣的事情，需要在语言本身上投入太大的时间精力。比如本文开头那幅图，画出来的过程并不复杂，但是实现的过程很巧妙，对思维和数学逻辑都有训练。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Secondly, Python is used everywhere. There are many Python programs running in the real world. It is used in scientific research, website building, graphic development and cross-platform development. The use of Python could also be found in many majors. Students can practice all they learned in their own area, and use Python in real life.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其次Python应用广泛，世界上有各种各样的Python项目，科学计算、网站搭建、图形界面、跨平台开发等等领域都有Python的身影。各个学科中也都充满了在实践中使用Python的机会。同学们一旦掌握了Python，就能迅速做出一些在现实世界中的各个领域都可以发挥作用的程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most importantly, Python is a lot easier than C++, Java, and VB. The code of Python is almost as easy to read as simple English. There isn’t any huge challenge in the language itself for the learners to conquer.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最重要的是Python的学习难度相比C++或者Java乃至VB这些国内比较普遍的编程语言来说，要简单很多很多。代码清晰可读，几乎就是缩进过的英语而已。这种特点可以更快速地让学生投入精力到探索编程过程中，而在语言本身上，不用花费过多时间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course, Python is not perfect. The fatal flaw of Python is that it is a scrip language and runs much slower than C++ or even Java. But this disadvantage doesn't hamper us using Python as an introduction language for coding.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当然，Python并不是万能的，作为脚本语言，其致命缺点是运行效率很低，但这个对于让学生入门编程为目的的授课过程来说也不算太大问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A huge advantage of Python is the abundance of material for teaching. A lot of books and videos could be found on the Internet. It is easy to gather information and prepare forlessons. With the programing and teaching experience, teachers can grasp the core of Python quickly and use it well in classes, even for those who never meet Python before.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python除了解决了学生学习编程的几大障碍之外，还有额外的优势，就是资料丰富，易于备课。网上比如Fenby.com等等都有详细的教材和视频资料。所以教师备课并不会特别困难。即便是没有接触过Python的授课老师掌握Python并用来授课并不会有什么困难，有其他高级语言基础，又有丰富授课经验，这种情况下大概也就一两个小时就能掌握Python的框架。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In China, C++ or VB are still used in most universities for both college students and postgraduate ones. Teachers in those lessons still use some methods from last century. In the top universities of the world, such as Stanford, Harvard, Princeton, and others, different languages are provided to students, of which Python is the most popular one.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;国内很多高校在本科和硕士阶段开设的编程课依然还是以C++和VB为主，讲授的内容也普遍停留在上世纪末的状态。而国际上以斯坦福、哈佛、普林斯顿等等所谓世界一流高校，都往往会提供更多种类以及更多层次区分的计算机课程。这些编程课程中最热门的正是Python。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Many universities in China are trying to become  top ones worldwide. But the lessons they offer are still the same as the past, which are outdated and boring. They should learn from the top ones by using Python as a beginning.
I don't know whether they really want to make a difference or they just enjoy shouting out some slogans.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;国内很多高校都说要办世界一流的学校，而在具体课程设置上面，却偏偏依然在坚持一些旧的特色：古板、过时、落伍、僵硬无趣。
不知道他们是真的想办好大学，还是只是说说而已。&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Story"></category><category term="Python"></category><category term="Story"></category></entry><entry><title>Using QT5.5 with both Xcode7 and Xcode6</title><link href="/using-qt55-with-both-xcode7-and-xcode6.html" rel="alternate"></link><published>2015-10-24T06:20:00+08:00</published><updated>2015-10-24T06:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2015-10-24:/using-qt55-with-both-xcode7-and-xcode6.html</id><summary type="html">&lt;p&gt;让QT5.5.1与Xcode6和Xcode7共存&lt;/p&gt;
&lt;p&gt;I began to use QT for it supports both Android and iOS.
Before I update the Xcode6.4 to Xcode7.0, everything works pretty fine.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我用QT就是因为能同时支持Android和iOS。在我从Xcode6.4升级到Xcode7.0之前，一切都很正常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But after the upgrade from 6.4 to 7, those projects I've been working just failed again …&lt;/p&gt;</summary><content type="html">&lt;p&gt;让QT5.5.1与Xcode6和Xcode7共存&lt;/p&gt;
&lt;p&gt;I began to use QT for it supports both Android and iOS.
Before I update the Xcode6.4 to Xcode7.0, everything works pretty fine.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我用QT就是因为能同时支持Android和iOS。在我从Xcode6.4升级到Xcode7.0之前，一切都很正常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But after the upgrade from 6.4 to 7, those projects I've been working just failed again and again with Xcode7.（I was using Xcode7.0 and QT5.4. I've already update them into Xcode7.1 and QT5.5.1, and the method I describe now still works. ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但后来我从Xcode6.4升级到了Xcode7，用QT写的项目就总不能编译成功了。（当时我用的还是Xcode7.0和QT5.4. 现在我已经升级到了Xcode7.1和QT5.5.1， 但本文的方法依然可用。）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then I did some search on StackOverflow and github. It turns out that the problem is because the latest version QT is a little bit slow on supporting the latest Xcode. So I downgraded to Xcode6.4 and found everything OK again.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;然后我在StackOverflow和github上面搜了一下。大家都说这个问题是因为QT的最新版对最新的Xcode的支持稍微慢一点。所以我就降级回到了Xcode6.4，然后又都正常了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But as a geek, I always want those kind of tools act as I wish.
I do want QT and Xcode7 the same time. Then I find out a way to make it possible, which is what I am writing about now.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不过我一贯暴脾气，就像随心所欲用工具，岂能善罢甘休？我就想要QT和Xcode7能一起共存。然后我还真探索出了一个解决方案，就是现在我写的这个了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To use QT for iPhone, I see that Xcode6.4 is needed definitely. So I try to make a balance by keeping both Xcode6.4 and Xcode7.
I install Xcode7 as /Application/Xcode and Xcode6 as /Application/Xcode.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;要用QT，我已经意识到了，Xcode6.4目前是必需的了。 那我就妥协一下，让Xcode6.4和Xcode7共存，分别在/Application目录下面命名成Xcode6.app和Xcode.app。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then it is the time for some trick.I cloned those settings of Kits, Compiler, and Debugger in the QT with changing the link of Xcode.app to Xcode6.app mannully.It works!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;接下来到了见证奇迹的时刻。我在QT中把套件、编译器、Debugger都克隆一份，手动把链接中的Xcode.app 改成Xcode6.app。结果就可以了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So I can be sure that the compatibility problem of QT and Xcode7 is caused by the versions, and we can solve it by rebuilding the toolchain linked to Xcode6.4.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所以现在能确定了，QT和Xcode7因为版本而不兼容，我们把工具链都改到Xcode6.4上面，重建项目，就能解决了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The devices I use for tests include a macbook pro, a iphone 5c, and a redmi 2. The software I used is QT5.5.1 with Xcode6.4 and Xcode7.1.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我用来测试的设备包括一台渣果笔记本Pro，一个渣果5c，以及一个红米2。 软件环境我现在用的是QT5.5.1以及Xcode6.4和Xcode7.1。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The tricks is shown as the pictures below.If you still donot know how to do or it doesn't work, please leave a comment about the details here.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;修改工具链，克隆套件、编译器、Debugger的过程如下图所示。如果你还不确定怎么操作或者操作之后无效，请在本文底下留言告诉我。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Rename The Xcode6.4 to Xcode6 and Xcode7.1 as Xcode." src="http://7xnq2o.com1.z0.glb.clouddn.com/QTforiPhoneRename.png?imageView/2/w/619/q/90"&gt;
Figure 1 Rename The Xcode6.4 to Xcode6 and Xcode7.1 as Xcode.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;把Xcode6.4命名为Xcode6.app，Xcode7.1留着作为Xcode.app。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Add the Kit in QT preference and change the link to Xcode6 as you already renamed under the /Application." src="http://7xnq2o.com1.z0.glb.clouddn.com/QTforiPhoneKitAdd.png?imageView/2/w/619/q/90"&gt;
Figure 2 Add the Kit in QT preference and change the link to Xcode6 as you already renamed under the /Application.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;克隆构建套件，修改链接中的Xcode.app为Xcode6.app。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Add the Compiler with the link to Xcode6" src="http://7xnq2o.com1.z0.glb.clouddn.com/QTforiPhoneCompilerClone.png?imageView/2/w/619/q/90"&gt;
Figure 3 Add the Compiler with the link to Xcode6&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;克隆编译器，修改链接中的Xcode.app为Xcode6.app。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Add the Debugger with the link to Xcode6" src="http://7xnq2o.com1.z0.glb.clouddn.com/QTforiPhoneDebuggerClone.png?imageView/2/w/619/q/90"&gt;&lt;/p&gt;
&lt;p&gt;Figure 4 Add the Debugger with the link to Xcode6&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;克隆Debugger，修改链接中的Xcode.app为Xcode6.app。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Add the Kit in your project." src="http://7xnq2o.com1.z0.glb.clouddn.com/QTforiPhoneAddKit.png?imageView/2/w/619/q/90"&gt;
Figure 5 Add the Kit in your project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在已有项目中添加新链接的构建项目，修改链接中的Xcode.app为Xcode6.app。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="It Works!" src="http://7xnq2o.com1.z0.glb.clouddn.com/QTforiPhoneItWorks.png?imageView/2/w/619/q/90"&gt;
Figure 6 It Works!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;搞定了！可以用了。&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="QT"></category><category term="Mac"></category><category term="QT"></category><category term="Xcode"></category></entry><entry><title>About</title><link href="/about.html" rel="alternate"></link><published>2015-10-01T10:20:00+08:00</published><updated>2015-10-01T10:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2015-10-01:/about.html</id><content type="html">&lt;p&gt;I am CycleUser~~
A really lame coder~~~&lt;/p&gt;
&lt;p&gt;This Blog is powered by Pelican, and hosted by Github Pages.
The Theme I use is &lt;a href="https://github.com/ir193/Responsive-Pelican/tree/a74606061d62be0f8508ca840375abe52ae24786"&gt;Responsive-Pelican&lt;/a&gt;.&lt;/p&gt;</content><category term="Story"></category></entry><entry><title>Bye</title><link href="/bye.html" rel="alternate"></link><published>2015-10-01T10:20:00+08:00</published><updated>2015-10-01T10:20:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2015-10-01:/bye.html</id><summary type="html">&lt;h3&gt;告别过去，告别科学网&lt;/h3&gt;
&lt;p&gt;最终还是用github+pelican来做站点了。
起码还有Markdown支持，排版应该比旧站点好多了。
我会先继续更新ThinkPython的中英双语版本，争取加强一点排版了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文是我当初发布在科学网的最后一篇博文，后来还被一些朋友推荐上了排行榜，后来又莫名其妙被编辑撤下去雪藏，我就很配合地直接删除了所有科学网博客的文字。
不过想到这个事情挺有趣的，就保留一下原文如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;科学网当年是我很崇敬的一个地方。
那时候这里很多前辈高人，充满思辩和碰撞。
那时候这里能看到不同观点的学术内容，充满了见解和讨论。
那时候这里会有人吐槽一些掌门院士，充满了诙谐和趣味。&lt;/p&gt;
&lt;p&gt;后来我离开学校去工作，很少上网，也更少接触学术圈了。
甚至忘掉了最早注册的帐号是什么。&lt;/p&gt;
&lt;p&gt;然后我回来继续读书，自然又想起当年的圣地。
可是我来到这里，看到的却是不一样的景色。
我看到论坛里面的盗版书、破解软件。
我看到民科和伪科学之类的互相撕咬和聒噪。
我看到一些人成了明星和既得利益者，受到他人的膜拜和吹捧。&lt;/p&gt;
&lt;p&gt;转念又一想，才意识到其实这些本来就存在着。
变化的并不是科学网，也不是学术圈。
而是我自己，随着年岁增长，见到的内容逐渐更贴近现实，那些理想化的朦胧面纱逐渐淡化，阳光下一些不是那么美好的内容刺痛了眼睛而已。&lt;/p&gt;
&lt;p&gt;所以我逐渐理解了。
我理解了有的学者为了项目为了生活，不得不夹着尾巴去巴结一些掌握话语权和一些资源的学术界大人物，因而在网络上说话比现实中甚至更要圆滑。
我理解了有些学术带头人或者教研室领袖虽然身居掌门之位，也依然还是一个转发很多一眼就能看穿的养生谣言到自己微信朋友圈并且不容反驳也不去更改的普通中老年人。
我更理解了一些同学和青年教师为了毕业或者升职 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;告别过去，告别科学网&lt;/h3&gt;
&lt;p&gt;最终还是用github+pelican来做站点了。
起码还有Markdown支持，排版应该比旧站点好多了。
我会先继续更新ThinkPython的中英双语版本，争取加强一点排版了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文是我当初发布在科学网的最后一篇博文，后来还被一些朋友推荐上了排行榜，后来又莫名其妙被编辑撤下去雪藏，我就很配合地直接删除了所有科学网博客的文字。
不过想到这个事情挺有趣的，就保留一下原文如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;科学网当年是我很崇敬的一个地方。
那时候这里很多前辈高人，充满思辩和碰撞。
那时候这里能看到不同观点的学术内容，充满了见解和讨论。
那时候这里会有人吐槽一些掌门院士，充满了诙谐和趣味。&lt;/p&gt;
&lt;p&gt;后来我离开学校去工作，很少上网，也更少接触学术圈了。
甚至忘掉了最早注册的帐号是什么。&lt;/p&gt;
&lt;p&gt;然后我回来继续读书，自然又想起当年的圣地。
可是我来到这里，看到的却是不一样的景色。
我看到论坛里面的盗版书、破解软件。
我看到民科和伪科学之类的互相撕咬和聒噪。
我看到一些人成了明星和既得利益者，受到他人的膜拜和吹捧。&lt;/p&gt;
&lt;p&gt;转念又一想，才意识到其实这些本来就存在着。
变化的并不是科学网，也不是学术圈。
而是我自己，随着年岁增长，见到的内容逐渐更贴近现实，那些理想化的朦胧面纱逐渐淡化，阳光下一些不是那么美好的内容刺痛了眼睛而已。&lt;/p&gt;
&lt;p&gt;所以我逐渐理解了。
我理解了有的学者为了项目为了生活，不得不夹着尾巴去巴结一些掌握话语权和一些资源的学术界大人物，因而在网络上说话比现实中甚至更要圆滑。
我理解了有些学术带头人或者教研室领袖虽然身居掌门之位，也依然还是一个转发很多一眼就能看穿的养生谣言到自己微信朋友圈并且不容反驳也不去更改的普通中老年人。
我更理解了一些同学和青年教师为了毕业或者升职，为了奖学金或者养家糊口，不得不去用一些数据的堆砌罗列写出一篇篇锦绣文章，然后拿着积攒的SCI数目给自己换毕业的机会以及干粮。&lt;/p&gt;
&lt;p&gt;『科学家也是人，喝多了也吐，吃多了也撑，看到美人也动心，见了人民币也喜欢。』一位前辈当年如是告诉我，我这么久才真正明白了一点点。&lt;/p&gt;
&lt;p&gt;观点纷乱复杂，立场波谲云诡。
这样的一个地方，我自认为如我这般脾气简单粗暴，来自平民底层的胖子，很难去融入。&lt;/p&gt;
&lt;p&gt;比如谁得了什么奖，谁推荐了谁，谁暗中对谁有中伤，我不觉得这些学术圈的八卦比娱乐界的就高尚有趣。
比如谁拿了优秀，谁评了国奖，谁跟谁角力争夺三好，我不觉得这些学校里的项目比社会上的就公正干净。&lt;/p&gt;
&lt;p&gt;但我不是故意的，我不是故意和他们爱好不同的，我天性如此。
有人问我：『你怎么有那么多时间精力去读上千小时的书呢？』
也有人问我：『你怎么都有时间跑去听那种没有学术小票的讲座呢？』
还有人问我：『你怎么硕士博士都免修英语了却还要天天背单词和练翻译呢？』&lt;/p&gt;
&lt;p&gt;答案很简单。
我没有其他的爱好，不吸烟，不饮酒，不玩游戏，不打球，不赌博，不追女生（因为我已婚了哈），所以只能读读书，学点东西。&lt;/p&gt;
&lt;p&gt;我记得曾经在以前的文字中提到过，自己少年时期喜欢打人，实际上这个说法也不确切，真正的喜好是打抱不平。至今我也依然保留了这个爱好，不时地帮助遇到的任何一个需要帮助的人，我爱人曾经根据我能吃以及爱好指路给我封了两个封号：『大胃王』以及『指路侠』。而且深受李白、王维以及卢纶的影响，我从小所向往的那种侠士都是做事之后抚身而去，天涯路远，纵意驰奔。&lt;/p&gt;
&lt;p&gt;可能就像是有的人吸烟、饮酒、网游甚至跑步会上瘾，我觉得打发时间的最佳方式就是自行车或者读书写字。&lt;/p&gt;
&lt;p&gt;所以我觉得在自己快要奔四的岁数，是时候放下一切，远离江湖，去做自己最享受的事情，不打扰他人，也不被打扰。&lt;/p&gt;
&lt;p&gt;再见，科学网。&lt;/p&gt;
&lt;p&gt;哦，不对，应该是『永别了，科学网』。&lt;/p&gt;</content><category term="Story"></category><category term="Story"></category><category term="Junck"></category></entry></feed>