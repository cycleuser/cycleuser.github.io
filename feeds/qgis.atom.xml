<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CycleUser - QGIS</title><link href="/" rel="alternate"></link><link href="/feeds/qgis.atom.xml" rel="self"></link><id>/</id><updated>2022-01-01T16:59:00+08:00</updated><entry><title>空间数据的可视化和分析</title><link href="/kong-jian-shu-ju-de-ke-shi-hua-he-fen-xi.html" rel="alternate"></link><published>2022-01-01T16:59:00+08:00</published><updated>2022-01-01T16:59:00+08:00</updated><author><name>CycleUsyer</name></author><id>tag:None,2022-01-01:/kong-jian-shu-ju-de-ke-shi-hua-he-fen-xi.html</id><summary type="html">&lt;p&gt;&lt;a href="https://courses.spatialthoughts.com/spatial-data-viz.html"&gt;本文英文原版地址&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;使用 QGIS 处理空间数据集&lt;/h3&gt;
&lt;h4&gt;英文原作者：Ujaval Gandhi&lt;/h4&gt;
&lt;h4&gt;中文翻译：CycleUser&lt;/h4&gt;
&lt;h1&gt;导论&lt;/h1&gt;
&lt;p&gt;本课程对位置数据集的使用进行简要介绍。课程会涉及到一系列的使用场景和应用工具，让你能亲自上手体验地图数据的可视化，并从中提取深层信息。这门课假设你对地理信息系统、遥感都一无所知，也适合所有学科的从业人员。我们这里所有练习都用开源软件&lt;a href="https://qgis.org/en/site/"&gt;QGIS&lt;/a&gt; ，所以此课程也适合用于学习QGIS。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/1lFjSnJbUuxVpAu5qk4mu1A"&gt;点击下载课程幻灯片 提取码: nfr8 &lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;软件&lt;/h1&gt;
&lt;p&gt;本课程使用的版本是 QGIS LTR version 3.16 （长期支持版本），具体的安装可以参考&lt;a href="https://courses.spatialthoughts.com/install-qgis-ltr.html"&gt;QGIS-LTR 安装指南&lt;/a&gt; 。【译者注：也可以自行探索，这一步挺简单的。需要注意的就是尽量用默认设置，别自己乱改安装路径导致环境变量设置不对等等自作孽。】&lt;/p&gt;
&lt;h1&gt;获取数据集&lt;/h1&gt;
&lt;p&gt;课程的练习中要用到一系列的数据集，都存放在一起来。下载之后，里面有所有的图层文件、项目文件等等，建议将这些文件到&lt;code&gt;Downloads&lt;/code&gt;文件夹下。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/19v8StzMObZUX-K5gk3V7OQ"&gt;点击下载课程数据集 提取码 …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://courses.spatialthoughts.com/spatial-data-viz.html"&gt;本文英文原版地址&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;使用 QGIS 处理空间数据集&lt;/h3&gt;
&lt;h4&gt;英文原作者：Ujaval Gandhi&lt;/h4&gt;
&lt;h4&gt;中文翻译：CycleUser&lt;/h4&gt;
&lt;h1&gt;导论&lt;/h1&gt;
&lt;p&gt;本课程对位置数据集的使用进行简要介绍。课程会涉及到一系列的使用场景和应用工具，让你能亲自上手体验地图数据的可视化，并从中提取深层信息。这门课假设你对地理信息系统、遥感都一无所知，也适合所有学科的从业人员。我们这里所有练习都用开源软件&lt;a href="https://qgis.org/en/site/"&gt;QGIS&lt;/a&gt; ，所以此课程也适合用于学习QGIS。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/1lFjSnJbUuxVpAu5qk4mu1A"&gt;点击下载课程幻灯片 提取码: nfr8 &lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;软件&lt;/h1&gt;
&lt;p&gt;本课程使用的版本是 QGIS LTR version 3.16 （长期支持版本），具体的安装可以参考&lt;a href="https://courses.spatialthoughts.com/install-qgis-ltr.html"&gt;QGIS-LTR 安装指南&lt;/a&gt; 。【译者注：也可以自行探索，这一步挺简单的。需要注意的就是尽量用默认设置，别自己乱改安装路径导致环境变量设置不对等等自作孽。】&lt;/p&gt;
&lt;h1&gt;获取数据集&lt;/h1&gt;
&lt;p&gt;课程的练习中要用到一系列的数据集，都存放在一起来。下载之后，里面有所有的图层文件、项目文件等等，建议将这些文件到&lt;code&gt;Downloads&lt;/code&gt;文件夹下。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pan.baidu.com/s/19v8StzMObZUX-K5gk3V7OQ"&gt;点击下载课程数据集 提取码: gld7 &lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;完成准备工作&lt;/h1&gt;
&lt;p&gt;准备工作需要一小时。在开始练习前，理解空间数据如何建模非常重要，还要了解坐标参考系统。&lt;/p&gt;
&lt;h2&gt;关于地理信息系统的一个使用简介视频&lt;/h2&gt;
&lt;p&gt;为了对地理信息系统的基本概念有一个初步了解，可以观看下面的视频和对应幻灯片。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=yfLjnK569XY"&gt;&lt;img alt="Video" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/intro_to_gis.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yfLjnK569XY"&gt;点击播放本节视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pan.baidu.com/s/1fgK5anzqC_J3AkOq3QcZag"&gt;点击下载对应幻灯片 提取码: 4hic &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;做个测试&lt;/h2&gt;
&lt;p&gt;看完了上面的视频和幻灯片后，可以做一下下面的测试，来试试你对地理信息系统的初步了解。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forms.gle/p79Ssyte91NHZtkp6"&gt;原版地理信息系统基本概念测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;地理信息系统简介的基础测试&lt;/h5&gt;
&lt;p&gt;这个小测验是检测你对地理信息系统基础知识的掌握情况。
- 每道题一分。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列哪一个不是矢量数据格式（Vector data format）? 
    a. Shapefile
    b. GeoPackage
    c. GeoTIFF
    d. CSV&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;地理信息系统是用于下列哪些功能的软件工具？
    a. 创建地图
    b. 查看地理空间数据
    c. 分析空间数据
    d. 创建空间数据通道
    e. 以上全都对&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假如你要创建一个非洲地图，你可以选择下列哪种坐标参考系？（多选）
    a. Africa Lambert Conformal Conic
    b. Africa Albers Equal Area
    c. Equal Earth
    d. WGS84 Lat/Lon&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列哪种数据类型可以用来表示地下水位？
    a. 点向量层，展示每个取样位置的水位
    b. 栅格数据层，整个区域的每个像素都插值表示水位
    c. 线向量层，展示水位的轮廓线
    d. 以上全都对&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在WGS84坐标系中，班加罗尔（Bangalore）的经纬度坐标是 12.9716° N, 77.5946° E，哪一个是Y坐标？
    a. 12.9716
    b. 77.5946&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;猜一猜GPS坐标为 35.6762° N, 139.6503° E 的是下面哪座城市？
    a. 澳大利亚悉尼
    b. 日本东京
    c. 巴西里约热内卢
    d. 加拿大温哥华&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参考系'EPSG:4326' 中的 EPSG 是什么的缩写？
    a. European Petroleum Survey Group
    b. Earth Projection Standard Group
    c. European Projection Survey Group&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保角投影（如墨卡托）保留了以下哪种特性？
    a. 形状
    b. 面积
    c. 距离
    d. 以上全都对&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下图中红色方框所示位置的UTM分区应该是哪个？
&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/q8.jpg"&gt;
    a. 34
    b. 34S
    c. 34N
    d. 34J&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列关于'Geoid' 命题为真的是：
    a. 近似地球的平均海平面
    b. 是使用精确地表高程测量得到的表面
    c. 是使用重力测量推测出的数学表面
    d. 以上全都对&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;参考答案：&lt;/h5&gt;
&lt;p&gt;c; d; ab; d; a; b; a; a; b; d&lt;/p&gt;
&lt;h1&gt;理解空间数据&lt;/h1&gt;
&lt;h2&gt;为什么要在意位置？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“Everything is related to everything else, but near things are more related than distant things. 所有事物都和其他的事物相联系，而近距离事物之间的联系比远距离的更紧密。” - Waldo Tobler’s &lt;a href="https://en.wikipedia.org/wiki/Tobler%27s_first_law_of_geography"&gt;《地理学第一定律（First Law of Geography）》&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当对现实世界进行建模和分析的时候，位置是一个关键的因子。非空间模型无法准确反映现实世界中发生的过程和互动。例如对&lt;a href="https://medium.com/geoai/using-forest-based-classification-regression-to-model-and-estimate-house-values-5a0e26682c42"&gt;预测房价&lt;/a&gt; 的问题中，空间预测模型的效果就远胜过非空间模型。&lt;/p&gt;
&lt;h2&gt;位置数据随处可见&lt;/h2&gt;
&lt;p&gt;现在获取位置数据对个人或者企业都很容易。空间数据为数据增加了额外的维度，能够揭示出原本不显著的模式。&lt;/p&gt;
&lt;p&gt;个体有了手机上的定位传感器，就可以将他们的数据附加上位置信息。智能手机拍摄的照片就有内嵌的位置信息。如果选择加入位置信息，用户就可以持续地存储和访问他们的位置历史。&lt;/p&gt;
&lt;p&gt;很多企业也有各种各样的位置数据，顾客地址、网站访客的IP地址、销售区域、供应链条等等。对于其他的一些商业活动，比如出租车服务商、餐饮快递、物流等都产生了大量的位置数据，能用来挖掘出情报。&lt;/p&gt;
&lt;p&gt;物联网设备也在收集传感器数据的同时持续采集位置数据。&lt;/p&gt;
&lt;p&gt;政府机构也在越来越多地采集和分享基于位置的数据。这些与城市基础设施、人口普查、激光雷达和航空图像等等相关的数据，正在被大量采集。很多政府都提供了开放数据共享政策，使得这些数据可以供个人和企业使用。&lt;/p&gt;
&lt;h2&gt;空间数据模型 Spatial Data Model&lt;/h2&gt;
&lt;p&gt;空间数据的模型包含两个部分：&lt;strong&gt;几何（geometry）&lt;/strong&gt; + &lt;strong&gt;性质（properties）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;几何（Geometry）&lt;/em&gt; (形状 Shape) 是通过坐标和坐标参考系统定义的； &lt;em&gt;性质（Properties）&lt;/em&gt; (属性 Attributes) 是用数据和数据类型来定义的。&lt;/p&gt;
&lt;p&gt;下面就是将班加罗尔这个城市表示成一个点：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; {
      &amp;quot;type&amp;quot;: &amp;quot;Feature&amp;quot;,
      &amp;quot;geometry&amp;quot;: {
        &amp;quot;type&amp;quot;: &amp;quot;Point&amp;quot;,
        &amp;quot;coordinates&amp;quot;: [ 77.58270263671875, 12.963074139604124]
      },
      &amp;quot;properties&amp;quot;: {
        &amp;quot;id&amp;quot;: 1,
        &amp;quot;name&amp;quot;: &amp;quot;Bengaluru&amp;quot;
      }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上面的格式使用的是 &lt;a href="https://geojson.org/"&gt;GeoJson 格式&lt;/a&gt; 。点的几何坐标使用了X (经度 Longitude) 和 Y (纬度 Latitude)两者来定义。这个点都被分配了两个属性，第一个 &lt;em&gt;id&lt;/em&gt; 的值是 &lt;code&gt;1&lt;/code&gt;，而 &lt;em&gt;name&lt;/em&gt; 就设置成城市名字 &lt;code&gt;Bengaluru&lt;/code&gt;。GeoJson 格式只支持一个坐标参考系统（WGS84），所以这里不需要在具体指定。&lt;/p&gt;
&lt;h2&gt;空间数据格式&lt;/h2&gt;
&lt;p&gt;前面已经讲了表征空间数据的最基本的方法。实际上有很多种数据格式能表征空间数据，这些数据格式有个字适合的不同应用。大多数情况下，空间数据格式就是对已有数据格式的扩展。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;非空间数据&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;空间数据&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;文本&lt;/td&gt;
&lt;td align="left"&gt;csv, json, xml&lt;/td&gt;
&lt;td align="left"&gt;csv, geojson, gml, kml&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;二进制/压缩包&lt;/td&gt;
&lt;td align="left"&gt;pdf, xls, zip&lt;/td&gt;
&lt;td align="left"&gt;shapefile, geopdf, geopackage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;图像&lt;/td&gt;
&lt;td align="left"&gt;tiff, jpg, png&lt;/td&gt;
&lt;td align="left"&gt;geotiff, jpeg2000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;数据库&lt;/td&gt;
&lt;td align="left"&gt;SQLite, PostgreSQL, Oracle&lt;/td&gt;
&lt;td align="left"&gt;Spatialite, PostGIS, Oracle Spatial&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;空间数据类型&lt;/h2&gt;
&lt;p&gt;空间数据一般可以分成两类，矢量数据（Vector）和栅格数据（Raster）。在网络上提供相关服务的这些数据一般都是被切成一个个小的块（切片，tiles），这些就可以作为第三类来分出来。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;子类&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;样例&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;矢量&lt;/td&gt;
&lt;td align="left"&gt;点&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;传感器观测数据, 位置&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;线&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;GPS 轨迹, 道路, 河流, 轮廓线条&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;多边形&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;行政区划, 建筑&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;点云&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;激光雷达测量 LIDAR surveys&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;栅格&lt;/td&gt;
&lt;td align="left"&gt;照片&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;航拍和无人机照片&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;网格 Grids&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;卫星图像, 高程数据&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;网状结构 Mesh&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;气候和科学观测数据&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;切片&lt;/td&gt;
&lt;td align="left"&gt;栅格数据切片层&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;网络地图&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;矢量数据切片层&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;网络地图&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;地图投影和坐标参考系统&lt;/h2&gt;
&lt;p&gt;如果说空间数据有什么特殊之处，那一定就是坐标参考系统（Coordinate Reference System，缩写为 CRS）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;地图投影（Map Projection）&lt;/em&gt; 将地球从立体球型（三维）投射成平面形状（二维）。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;坐标参考系（Coordinate Reference System，CRS）&lt;/em&gt; 就定义了这个投影得到的二维地图如何关联到地球上的真实位置。&lt;/p&gt;
&lt;p&gt;在&lt;a href="https://docs.qgis.org/testing/en/docs/gentle_gis_introduction/coordinate_reference_systems.html"&gt;QGIS 官方文档&lt;/a&gt; 中提供了对这一话题的详细介绍。&lt;/p&gt;
&lt;p&gt;目前市面上有几百种不同的地图投影和对应的坐标参考系，每一种都有不同的性质和用途。最重要的是要记住，每一种投影都或多或少在某些方面存在畸变。有一篇 &lt;a href="https://bl.ocks.org/syntagmatic/ba569633d51ebec6ec6e"&gt;地图投影集锦&lt;/a&gt; 提供了常见投影方案的可视化介绍。更进一步的相关信息可以参考 Jochen Albrecht 所写的&lt;a href="http://www.geo.hunter.cuny.edu/~jochen/gtech201/lectures/lec6concepts/map%20coordinate%20systems/how%20to%20choose%20a%20projection.htm"&gt;指南：选择一个投影&lt;/a&gt;. 另外一篇 &lt;a href="https://onlinelibrary.wiley.com/doi/full/10.1111/tgis.12636"&gt;最近发表的文章&lt;/a&gt; 表明了投影选择对面积和体积计算的影响。&lt;/p&gt;
&lt;p&gt;那么你要选择什么投影方案呢？这可能是一个很宏大且复杂的话题，而且答案通常是，看情况。但接下来的这些内容会帮到你。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;全球地图&lt;/strong&gt;: 如果你要绘制的是全球地图，目前的主流选择是使用&lt;a href="http://equal-earth.com/"&gt;Equal Earth&lt;/a&gt; 投影。这种投影的附加优势就是保持了面积，所以对于需要等面积网格进行全球规模分析的场景来说是很好的选择。相比于其他的投影方案，比如 &lt;a href="https://en.wikipedia.org/wiki/Gall%E2%80%93Peters_projection"&gt;Gall-Peters 投影&lt;/a&gt;等等，&lt;a href="http://equal-earth.com/"&gt;Equal Earth&lt;/a&gt;在视觉上效果也更好些。新版本的 QGIS 已经内置了对多种 Equal Earth 坐标参考系的支持. 如果你用的是旧版本，可以通过下面的字符串来 &lt;a href="https://docs.qgis.org/testing/en/docs/user_manual/working_with_projections/working_with_projections.html#custom-coordinate-reference-system"&gt;自定义坐标参考系（Custom CRS）&lt;/a&gt; ：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;+proj=eqearth +datum=WGS84 +wktext
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="The Equal Earth Projection" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/equal-earth.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The Equal Earth Projection&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;国家地图&lt;/strong&gt;: 很多国家都制定了某个特定版本的坐标参考系统，目的是最小化本国内的畸变。可以通过访问对应国家的相关机构来获取相关信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;局部和区域地图&lt;/strong&gt;: 和国家层面的坐标参考系类似，很多国家都还有州、省一级的坐标参考系。另外，通用横轴墨卡托变换（Universal Transverse Mercator，UTM）为全球任意地区都提供了良好的坐标参考系。在每个区域内的畸变都是最小的。如果你的研究去包含在某个UTM区域内，使用UTM是分析和制图的好选择。
&lt;img alt="UTM Zones of the world" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/utm_zones.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UTM Zones of the world&lt;/p&gt;
&lt;h1&gt;QGIS 简介&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://qgis.org/"&gt;QGIS&lt;/a&gt; 是一个自由、开源软件，可以用于创建、编辑、可视化、分析和出版地理空间数据。QGIS支持Windows、macOS和Linux。本课程使用的是QGIS的长期支持版（Long Term Release，缩写为LTR），可以在&lt;a href="https://qgis.org/en/site/forusers/download.html"&gt;QGIS 官网下载页面&lt;/a&gt; 下载安装包。&lt;/p&gt;
&lt;h2&gt;插件（Plugins）&lt;/h2&gt;
&lt;p&gt;QGIS为开发者提供了插件这种非常简单的方式来扩展软件核心功能。安装和管理插件，需要在 QGIS 的菜单中选择&lt;strong&gt;Plugins → Manage and Install Plugins..&lt;/strong&gt;，然后切换到 &lt;em&gt;All&lt;/em&gt; 标签，然后搜索要安装的插件。找到之后，选中，然后点击&lt;em&gt;Install Plugin&lt;/em&gt; 就安装了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/plugins.png"&gt;&lt;/p&gt;
&lt;p&gt;本课程中，我们使用的是下面两个插件，需要大家来安装一下：
* QuickMapServices
* QuickOSM&lt;/p&gt;
&lt;h1&gt;可视化&lt;/h1&gt;
&lt;h2&gt;点&lt;/h2&gt;
&lt;p&gt;对空间数据的最简单表述方式就是使用表格。一个地理位置可以表示成一对坐标，经度和纬度，然后再加上与之相关的其他属性信息。很多空间数据都是这样的形式，比如Excel表格、CSV逗号分隔符文本，数据库表格等。&lt;/p&gt;
&lt;h3&gt;练习：将空气质量投在地图上&lt;/h3&gt;
&lt;p&gt;世界上很多国家和地区都面对着空气质量变差的问题。要更好地理解这个问题，首先的一步是持续收集各地的空气质量数据，很多机构都有这类数据的收集和公开，比如&lt;a href="https://openaq.org/"&gt;OpenAQ&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;我们使用 &lt;a href="https://blissair.com/what-is-pm-2-5.htm"&gt;PM2.5 浓度数据&lt;/a&gt; 中一天的数据，然后对其进行投图。目的是将表格数据转换成位置数据的可视化。&lt;/p&gt;
&lt;p&gt;本次练习中，我们使用的是2021年12月30奥地利当天的数据，下载自&lt;a href="https://openaq.org/#/countries?_k=dmlk2k"&gt;OpenAQ Data Download&lt;/a&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在编辑器中打开下载的文件 &lt;code&gt;measurements.csv&lt;/code&gt; 然后看一下。&lt;code&gt;value&lt;/code&gt;是测量值，&lt;code&gt;latitude&lt;/code&gt; 是纬度，&lt;code&gt;longitude&lt;/code&gt;是经度。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载的这种&lt;code&gt;csv&lt;/code&gt;格式的文件可以算作是一种&lt;strong&gt;分隔符文档Delimited Text&lt;/strong&gt;，可以在QGIS里面通过&lt;em&gt;Data Source Manager&lt;/em&gt;来进行导入。在QGIS主界面点击&lt;em&gt;Open Data Source Manager&lt;/em&gt; 按钮即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览到下载的&lt;code&gt;measurements.csv&lt;/code&gt;文件打。在 &lt;em&gt;Data Source Manager&lt;/em&gt; 里面选择&lt;em&gt;Delimited Text&lt;/em&gt;，然后在&lt;em&gt;File name&lt;/em&gt;里面定位到目标文件，在&lt;em&gt;Geometry Definition&lt;/em&gt;里面选择&lt;em&gt;Point coordinates&lt;/em&gt;，设置 &lt;code&gt;longitude&lt;/code&gt; 为 &lt;em&gt;X Field&lt;/em&gt;， &lt;code&gt;latitude&lt;/code&gt;为 &lt;em&gt;Y Field&lt;/em&gt;，然后选择 &lt;code&gt;EPSG 4326 - WGS 84&lt;/code&gt; 作为&lt;em&gt;Geometry CRS&lt;/em&gt;，点击&lt;em&gt;Add&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后就能看到表格数据加载到QGIS的画布上了，成了一个空间数据层。使用 &lt;em&gt;Identify&lt;/em&gt; 按钮来查看各个点，就能看到对应的各项数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点的分布在城市周围，但图上现在还没添加城市地图，所以就要加一个地图层（base-map layer）。这里使用&lt;strong&gt;QuickMapServices&lt;/strong&gt; 这个插件来加载多种地图，点击 &lt;strong&gt;Web → QuickMapServices → OSM → OSM Standard&lt;/strong&gt; 图层.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：如果你想要用其他的地图图层，到 &lt;strong&gt;Web → QuickMapServices → Settings&lt;/strong&gt; 中，切换到 &lt;strong&gt;More services&lt;/strong&gt;，点击 &lt;code&gt;Get Contributed Pack&lt;/code&gt;，然后点击 &lt;strong&gt;Save&lt;/strong&gt;保存即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新图层就添加到左侧的 &lt;em&gt;Layers&lt;/em&gt; 面板中了，也同时呈现在了画布&lt;em&gt;Canvas&lt;/em&gt;中。现在你就能看到数据点出现在城区地图上面了。接下来咱们点击 &lt;em&gt;Open the Layer Styling Panel&lt;/em&gt; 来让数据点看着更好一点。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这回咱要根据每个点的观测到的 &lt;code&gt;value&lt;/code&gt; 来对其进行着色。选择&lt;code&gt;Graduated&lt;/code&gt;着色器，然后将 &lt;code&gt;value&lt;/code&gt;设置为 &lt;em&gt;Value&lt;/em&gt; 列。将&lt;em&gt;Classes&lt;/em&gt; 到分类数设置为&lt;code&gt;6&lt;/code&gt; 然后点击 &lt;em&gt;Classify&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：默认的分类模式是&lt;em&gt;Equal Count&lt;/em&gt; - 这对于咱们的练习来说也能用。 关于数据分类的更多内容可以参考 &lt;a href="https://docs.qgis.org/testing/en/docs/user_manual/working_with_vector/vector_properties.html?#graduated-renderer"&gt;QGIS 官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq7.png"&gt;&lt;/p&gt;
&lt;p&gt;要让分类范围再有更多的意义，可以将它们和常用范围联系起来。
&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq_naqi.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来调整，将图例&lt;em&gt;Legend&lt;/em&gt; 调整成人类可读性更好的分类名称，可以双击每一个类别的范围然后来修改。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：这里的区间包含上界，不包含下界。所以如果一个区间是 30-60，包含的就是所有 &amp;gt;30 而&amp;lt;=60的值。具体的细节可以参考&lt;a href="https://github.com/qgis/QGIS/issues/29852"&gt;QGIS的这个Issue&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于你修改了分类那对应的可视化方案也要调整了。正好把空气质量调整成对应的模式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;另外还可以调整一下配色，这里就将原来的单色调成红黄绿三色&lt;code&gt;RdYlGn&lt;/code&gt; (Red-Yellow-Green) 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这里就发现有问题了，默认的是高值变成绿，低值是红了。我们希望的正好是反过来，所以点击刚才的下来菜单，然后选择&lt;em&gt;Invert Color Ramp&lt;/em&gt;来反转配色。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解下来就是要在点上添加字符标签来。切换到&lt;em&gt;Labels&lt;/em&gt; 标签，如下图所示。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择 &lt;code&gt;Single labels&lt;/code&gt; 然后设置 &lt;code&gt;value&lt;/code&gt; 为 &lt;em&gt;Value&lt;/em&gt;，下拉，再选择格式化树枝 &lt;em&gt;Formatted numbers&lt;/em&gt; ，将小数点 &lt;em&gt;Decimal places&lt;/em&gt; 设置为 &lt;code&gt;0&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq13.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后写换到&lt;em&gt;Background&lt;/em&gt; 标签页，选中 &lt;em&gt;Draw background&lt;/em&gt; 后调整 &lt;em&gt;Size X&lt;/em&gt; 和 &lt;em&gt;Size Y&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq14.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在下面找到 &lt;em&gt;Fill color&lt;/em&gt; 部分，我们希望将每处填充上和圆点一样的颜色。点击 &lt;em&gt;Data defined override&lt;/em&gt; 按钮然后选择 &lt;em&gt;Edit&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq15.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;双击 &lt;code&gt;@symbol_color&lt;/code&gt; 变量，加入到表达式中，然后点击&lt;code&gt;OK&lt;/code&gt;按钮确认。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq16.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在就会发现两者颜色匹配了，然后切换到 &lt;em&gt;Placement&lt;/em&gt; 选项卡，选择&lt;em&gt;Offset from point&lt;/em&gt;，设置 &lt;em&gt;Offset Y&lt;/em&gt; 为 &lt;code&gt;-5&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq17.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最后，点击进入 &lt;em&gt;Callouts&lt;/em&gt; 标签页，然后选中 &lt;em&gt;Draw callouts&lt;/em&gt; 使得所选的方块标签与对应的数据点之间连起来以便于区分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq18.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在就点击&lt;em&gt;Save Project&lt;/em&gt; 按钮来把这个项目保存成 &lt;code&gt;air_quality.qgz&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq19.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在标签看着都还挺清晰，但有的太近了，很拥挤。可以手动调整标签位置来解决这个问题。在工具栏区域右键任意位置打开&lt;em&gt;Label Toolbar&lt;/em&gt;，如下图所示。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq20.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击&lt;em&gt;Move a Label&lt;/em&gt; 按钮，然后在出现的 &lt;em&gt;Auxiliary Storage&lt;/em&gt; 提示界面上点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq21.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于上面激活了 &lt;em&gt;Move a Label&lt;/em&gt; 按钮，现在可以点击任意一个标签来选中。然后想把它挪到哪里就点到那里即可。弄完之后，再次保存项目。现在就可以导出做好的地图了，到菜单中的&lt;strong&gt;Project → New Print Layout…&lt;/strong&gt;，名字留空，直接点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq22.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输出图幅可以将各种元素都放在一起成为一个静态地图，包括标签、图例、指北针、比例尺等等。可以在&lt;strong&gt;Add Item → Add Map&lt;/strong&gt;中来添加地图。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq23.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果你没看到完整地图扩展范围，可以点击 &lt;em&gt;Set Map Extent to Match Main Canvas Extent&lt;/em&gt; 按钮，位置在工具栏中 &lt;code&gt;Map 1&lt;/code&gt;的&lt;em&gt;Item Properties&lt;/em&gt;的下面。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq24.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来，添加一个 &lt;em&gt;Rectangle&lt;/em&gt; ，来存放地图切片、比例尺和属性信息等等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq25.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将这个小矩形放到图幅右上角，设置&lt;em&gt;Corner radius&lt;/em&gt; 为&lt;code&gt;10&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq26.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后在这个小矩形中添加一个 &lt;em&gt;Label&lt;/em&gt; 。输入你的地图名字&lt;code&gt;Average PM2.5 Concentration (µg/m3)&lt;/code&gt; 以及日期&lt;code&gt;15 February, 2022&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq27.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;还是在这个矩形中，再添加一个标签&lt;em&gt;Label&lt;/em&gt; ，设置文本为 &lt;code&gt;Data Source: Central Pollution Control Board, EPA AirNow DOS. Downloaded from OpenAQ.org&lt;/code&gt;。然后还要添加图例来解释图上的符号和颜色等等。到菜单栏中，找到&lt;strong&gt;Add Item → Add Legend&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq28.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拖动方框来插入图例到白色矩形中。然后再找到&lt;em&gt;Item Properties&lt;/em&gt; 标签页来关闭 &lt;em&gt;Auto update&lt;/em&gt;，移除 &lt;code&gt;OpenStreetMap monochrome&lt;/code&gt; 图层，然后设置 &lt;code&gt;openaq&lt;/code&gt;群标签为隐藏&lt;em&gt;Hidden&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq29.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;图例默认位置是淑芝的，单独一列。可以将其改成多列，弄成水平。滚轮找到&lt;em&gt;Columns&lt;/em&gt;区域，然后设置&lt;em&gt;Count&lt;/em&gt; 为&lt;code&gt;2&lt;/code&gt;，再选中 &lt;em&gt;Split layers&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq30.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;em&gt;Main Properties&lt;/em&gt;部分，输入一个比例尺的标题&lt;em&gt;Title&lt;/em&gt; ，比如 &lt;code&gt;Air Quality Index Category&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq31.png"&gt;&lt;/p&gt;
&lt;p&gt;彻底设置满意了，就可以将地图输出了。如果你想放在网站上，就可以用图像&lt;strong&gt;Image&lt;/strong&gt; 来导出。如果你以后可能要用矢量图编辑软件来修改，就可以考虑存成 &lt;strong&gt;SVG&lt;/strong&gt; 格式，这样你就可以使用 &lt;a href="https://inkscape.org/"&gt;InkScape&lt;/a&gt;来编辑了。不过一般更通用的可能还是PDF格式。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Credit: Atanas Entchev" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/shp_to_pdf.png"&gt;&lt;/p&gt;
&lt;p&gt;Credit: Atanas Entchev&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所以接下来就用PDF格式来导出吧。导出之前，切换到布局&lt;em&gt;Layout&lt;/em&gt;标签页。我们使用的是OpenStreetMap 的位图地图作为底层。这是使用对缩放有依赖的切片地图绘制的。所以有必要设置一个较高的导出分辨率，以便获得更清晰的更高分辨率的切片地图。另外导出的分辨率&lt;em&gt;Export resolution&lt;/em&gt; 可以设置到 &lt;code&gt;100&lt;/code&gt; dpi，更高当然也行。菜单栏中找到 &lt;strong&gt;Layout → Export as PDF&lt;/strong&gt;然后试试吧。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq32.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在导出选项&lt;em&gt;PDF Export Options&lt;/em&gt; 中选中 &lt;em&gt;Create Geospatial PDF (GeoPDF)&lt;/em&gt;，这个GeoPDF 是一种增强的PDF格式，具有空间感知，并且保留了图层和属性信息。点击&lt;em&gt;Save&lt;/em&gt; 将该文件保存为&lt;code&gt;air_quality.pdf&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq33.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果你在兼容的阅读其中打开对应的这个新生成的PDF文件，比如使用&lt;a href="https://get.adobe.com/reader/"&gt;Adobe Acrobat&lt;/a&gt;，你就能看到各个图层的元素，还可以读取特征属性，计算距离等等。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Adobe Reader 中，针对 GeoPDF 可以在工具-测量&lt;em&gt;Tools → Measure&lt;/em&gt;中启用测量工具。更多信息参考&lt;a href="https://helpx.adobe.com/in/acrobat/using/grids-guides-measurements-pdfs.html#measure_the_height_width_or_area_of_objects"&gt;Adobe 官方网站&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/aq34.png"&gt;&lt;/p&gt;
&lt;h2&gt;线条 Lines&lt;/h2&gt;
&lt;p&gt;路、桥、铁轨等很多交通设施，以及河流、溪水等自然景物，都可以用线条来建模。其它一些抽象概念，比如轮廓、轨迹等等也可以使用线性特征来建模。用于存储线条数据集的一般有Shapefiles、GeoJSON、GPX等文件格式。&lt;/p&gt;
&lt;h3&gt;练习：GPS轨迹可视化&lt;/h3&gt;
&lt;p&gt;如今生活里，GPS轨迹随处可见。大多数智能手机都内置了GPS系统，人们普遍用GPS来记录跑步或者骑行等户外活动。网约车公司也在乘客乘坐期间记录里程来计费。快递和物流公司从他们的快件中存储并分析了大规模的GPS数据来推导出位置智能（location intelligence）。&lt;/p&gt;
&lt;p&gt;这个练习中，我们使用的是一个开源的&lt;a href="https://www.basicairdata.eu/projects/android/android-gps-logger/"&gt;GPS位置记录APP&lt;/a&gt; ，可以运行在Android设备上。如果你用的是iOS设备，推荐你可以试试另一个开源应用&lt;a href="https://apps.apple.com/app/open-gpx-tracker/id984503772"&gt;Open GPX Tracker&lt;/a&gt;。存储GPS轨迹的默认格式是&lt;a href="https://en.wikipedia.org/wiki/GPS_Exchange_Format"&gt;GPS Exchange Format (GPX)&lt;/a&gt;。这实际上是一种基于XML的文本格式，允许在一个文件中存储点、轨迹和路径。本次练习使用的是&lt;code&gt;sample_gps_track.gpx&lt;/code&gt; 文件，目的是要创建一个动态的GIF图来展示整个行程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;code&gt;sample_gps_track.gpx&lt;/code&gt; 文件拖动添加到QGIS的画布上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于文件中有多条数据类型，程序会弹出一个窗口询问你选择要添加的图层（layers）。这时先按住 &lt;em&gt;Shift&lt;/em&gt; 键不放，然后同时选中&lt;code&gt;track_points&lt;/code&gt;和 &lt;code&gt;tracks&lt;/code&gt;这两项，然后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后要添加地图，对这种情况来说，暗一点的背景地图视觉效果比较好。在菜单栏中找到&lt;strong&gt;Web → QuickMapServices → CartoDB → Dark Matter&lt;/strong&gt;，点击后就在画布上添加了地图了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击 &lt;code&gt;sample_gps_track points&lt;/code&gt; 图层旁边的小方块，去掉勾选，在画布中就看不到这些点了。选中&lt;code&gt;sample_gps_track tracks&lt;/code&gt; 图层，然后点击 &lt;em&gt;Open the Layer Styling Panel&lt;/em&gt;。将颜色&lt;em&gt;Color&lt;/em&gt; 改成蓝色&lt;code&gt;Blue&lt;/code&gt; ，然后设置线宽度&lt;em&gt;Width&lt;/em&gt; 为&lt;code&gt;0.5&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;再选中 &lt;code&gt;sample_gps_track points&lt;/code&gt; 图层使之可见。在&lt;em&gt;Layer Styling Panel&lt;/em&gt;中，选择简单符号&lt;em&gt;Simple marker&lt;/em&gt; 。把点的大小&lt;em&gt;Size&lt;/em&gt; 设为&lt;code&gt;1&lt;/code&gt; 。选择一个浅蓝色作为填充色&lt;em&gt;Fill color&lt;/em&gt;，然手设置轮廓颜色&lt;em&gt;Stroke color&lt;/em&gt;为透明&lt;code&gt;Transparent Stroke&lt;/code&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们希望点动起来，所以要给他加一个辉光效果（glow effect）。右键&lt;code&gt;gps_points&lt;/code&gt;图层，然后选择复制图层&lt;em&gt;Duplicate Layer&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在图层面板&lt;em&gt;Layers&lt;/em&gt;中将复制出来的图层拖动到图层栈的最顶层。在复制的&lt;code&gt;sample_gps_track points_copy&lt;/code&gt; 的&lt;em&gt;Layer Styling Panel&lt;/em&gt;，选择一种明亮色彩作为&lt;em&gt;Color&lt;/em&gt;，然后增加尺寸到 &lt;code&gt;1.5&lt;/code&gt;，选中&lt;em&gt;Draw Effects&lt;/em&gt; ，然后点击旁边小星星样子的 &lt;em&gt;Effects&lt;/em&gt; 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后出现&lt;em&gt;Effects Properties&lt;/em&gt; 面板，选中 &lt;em&gt;Outer Glow&lt;/em&gt;，设置&lt;em&gt;Spread&lt;/em&gt; 和&lt;em&gt;Blue radius&lt;/em&gt;都为 &lt;code&gt;2.0&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在就可以让点动起来了。右键&lt;code&gt;sample_gps_track points_copy&lt;/code&gt;图层后选中属性&lt;em&gt;Properties&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps9.png"&gt;&lt;/p&gt;
&lt;p&gt;10.切换到&lt;em&gt;Temportal&lt;/em&gt; 标签，勾选上&lt;em&gt;Temportal&lt;/em&gt; 小方块。然后将设置&lt;em&gt;Configuration&lt;/em&gt;调整为&lt;code&gt;Single Field with Date/Time&lt;/code&gt;。设置&lt;em&gt;Field&lt;/em&gt;为时间&lt;code&gt;time&lt;/code&gt; ，然后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在你会发现刚刚修改的图层旁边出现了一个小时钟图标，这就表示这个图层可以通过&lt;em&gt;Temporal Controller&lt;/em&gt;来控制了。接下来，右键&lt;code&gt;sample_gps_track points&lt;/code&gt;图层点击&lt;em&gt;Properties&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重复上一次的设置操作。不过这回将设置&lt;em&gt;Configuration&lt;/em&gt;调整为&lt;em&gt;Accumulate features over time&lt;/em&gt;。这样设置是要让已经过去的时间点依然在图层上能显示出来。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在主界面的&lt;em&gt;Map Navigation Toolbar&lt;/em&gt;中找到&lt;em&gt;Temporal Controller Panel&lt;/em&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps13.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击之后， &lt;em&gt;Temporal Controller&lt;/em&gt; 面板就会出现在画布地图顶端了。点击像播放按钮一样的&lt;em&gt;Animated temportal navigation&lt;/em&gt; 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps14.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来，点击刷新形状的&lt;em&gt;Set to Full Range&lt;/em&gt;按钮来自动加载起止时间。将步长 &lt;em&gt;Step&lt;/em&gt; 设置为 &lt;code&gt;1&lt;/code&gt;，然后单位选择成秒 &lt;em&gt;seconds&lt;/em&gt;，点击右上角齿轮图标&lt;em&gt;Temporal Settings&lt;/em&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps15.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将帧率 &lt;em&gt;Frame rate&lt;/em&gt; 设置为 &lt;code&gt;10&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps16.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置完后返回刚刚的界面，选中循环&lt;em&gt;Loop&lt;/em&gt;，然后点击播放按钮 &lt;em&gt;Play&lt;/em&gt; 。你就能看到画布上的地图现实旅行过程了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps17.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将每个点所对应的时间显示在地图上应该挺有用，到菜单栏中找到&lt;strong&gt;View → Decorations → Title Label…&lt;/strong&gt;来设置。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps18.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在标题备注设置&lt;em&gt;Title Label Decoration&lt;/em&gt;中，点击插入表达式按钮 &lt;em&gt;Insert an Expression&lt;/em&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps19.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;地图的当前时间存储在&lt;code&gt;@map_start_time&lt;/code&gt;这个变量中，可以使用&lt;code&gt;format_date()&lt;/code&gt;函数将其转换成更可读的时间戳。但要注意 GPS系统的时间使用的是世界时(universal time，UTC)，所以要用&lt;code&gt;to_interval()&lt;/code&gt; 函数将其转换到 UTC+8:00 才对应了北京地区的时区，输入下面的表达式：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;format_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;@map_start_time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to_interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;8 hours&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yyyy-MM-dd hh:mm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps20.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击字体选项&lt;em&gt;Font&lt;/em&gt; ，把字号调整到 &lt;code&gt;24&lt;/code&gt;，设置背景色&lt;em&gt;Background bar color&lt;/em&gt; 为白色&lt;code&gt;White&lt;/code&gt;，点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps21.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在你再播放动画，时间戳就会随着动画中对应点的行进更新了。点击导出动画&lt;em&gt;Export Animation&lt;/em&gt; 按钮可以将动画逐帧保存。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps22.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在弹出的&lt;em&gt;Export Map Animation&lt;/em&gt; 对话框中，选择输出目录&lt;em&gt;Output directory&lt;/em&gt;。这个文静可能有超过500秒的长度，所以可以降低帧数,将步长&lt;em&gt;Step&lt;/em&gt; 设置为&lt;code&gt;5&lt;/code&gt;。然后点击保存&lt;em&gt;Save&lt;/em&gt; ，QGIS就会在你选的文件夹中输出一系列图片了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps23.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有了多张的逐帧图片后，就可以使用一些类似 &lt;a href="https://ezgif.com/"&gt;ezgif.com&lt;/a&gt; 的工具来创建GIF动图了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/gps24.png"&gt;&lt;/p&gt;
&lt;h2&gt;多边形&lt;/h2&gt;
&lt;p&gt;区域就用多边形来建模。一般用来表示行政区划、建筑物、地块等等。多边形在几何上就是用一系列的坐标来表示的。由于形状可能会非常复杂，多边形要有更加繁琐的几何解释，所以很少使用简单的CSV文件格式。GeoJSON和 ShapeFiles 是存储多边形数据集的常用文件格式。&lt;/p&gt;
&lt;h3&gt;练习：人口普查数据可视化&lt;/h3&gt;
&lt;p&gt;人口普查数据是一个国家二级数据的一个主要来源。很多空间分析都需要人口普查数据中的详细人口学信息。&lt;/p&gt;
&lt;p&gt;Census data is usually published as tables by aggregating the raw numbers to an administrative region - typically a &lt;em&gt;census block&lt;/em&gt;. To map these tables, one needs to know the &lt;em&gt;geometry&lt;/em&gt; of these regions - which are supplied separately as boundary files. Both of these can be joined to create a polygon layer that can be visualized and mapped. See on how this process is carried out in QGIS.&lt;/p&gt;
&lt;p&gt;人口普查数据一般都是按照行政区发布成一个个表格，表格里是对原始数据的汇总，这样一个行政区就成了一个人口区&lt;em&gt;census block&lt;/em&gt;。要将这样的表格可视化成地图，就需要知道这些区域的几何形态，也就是边界文件。人口数据和行政区划结合到一起就可以制作出一个多边形图层，这个图层就能放到地图上进行可视化了。这个过程在QGIS中的操作可以参考&lt;a href="https://www.qgistutorials.com/en/docs/3/performing_table_joins.html"&gt;这个教程&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;这个练习使用的是&lt;a href="https://sedac.ciesin.columbia.edu/data/set/india-india-village-level-geospatial-socio-econ-1991-2001"&gt;India Village-Level Geospatial Socio-Economic Data Set&lt;/a&gt; 这一数据集，由美国航天局社会经济数据和应用中心（NASA Socioeconomic Data and Applications Center，SEDAC）出版公布。此数据集中结合了村/镇一级的边界与印度人口普查的初级人口普查摘要（PCA）和村庄目录（VD）数据系列，使用 ShapeFiles 格式发布。&lt;/p&gt;
&lt;p&gt;这个练习中使用的是印度Karnataka州的ShapeFile数据，将Gulbarga地区的识字率投在地图上。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;code&gt;india-village-census-2001-KA.shp&lt;/code&gt; 文件拖动到QGIS画布上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这样在图层面板&lt;em&gt;Layers&lt;/em&gt;中就加入了新图层&lt;code&gt;india-village-census-2001-KA&lt;/code&gt;。使用&lt;em&gt;Identify&lt;/em&gt;工具来点击任意一个多边形来查看属性值。每一列的定义都在数据的附加文档中有解释。我们要找的是识字率，对应的后缀&lt;code&gt;_LIT&lt;/code&gt; 就很有用。&lt;code&gt;P_LIT&lt;/code&gt; 这列表示的是识字人口，而&lt;code&gt;TOT_P&lt;/code&gt;表示的是总人口&lt;em&gt;Total Population&lt;/em&gt;，借助这两样我们接下来就要计算识字率。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来要从这个图层的众多多边形中选中属于&lt;em&gt;Gulbarga&lt;/em&gt; 地区的子集。家在&lt;code&gt;gulbarga_district.shp&lt;/code&gt; 。数据中 &lt;code&gt;DT_CEN_CD&lt;/code&gt; 这一列包含的就是对应区域的ID。可以用这个 ID来过滤多边形区域，&lt;em&gt;Gulbarga&lt;/em&gt; 地区的这个ID是4。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在图层&lt;em&gt;Layers&lt;/em&gt;面板中，拖拽 &lt;code&gt;gulbarga_district&lt;/code&gt; 图层到 &lt;code&gt;india-village-census-2001-KA&lt;/code&gt; 图层下面。右键 &lt;code&gt;india-village-census-2001-KA&lt;/code&gt;图层然后选中&lt;em&gt;Filter&lt;/em&gt;进行筛选。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入表达式&lt;code&gt;DISTRICT = 4&lt;/code&gt; 来选择&lt;em&gt;Gulbarga&lt;/em&gt; 地区对应的部分，点击 &lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这时候在&lt;code&gt;india-village-census-2001-KA&lt;/code&gt; 图层旁边就能看到一个小漏斗图标，表示有一个筛选被施加在该图层上。同时地图画布上也会更新，只显示所筛选区域的多边形。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来我们要创建一个热力图&lt;em&gt;thematic&lt;/em&gt; 来展示该区域的识字率。这种场景下创建热力图（thematic (choropleth) map），需要对要投图的值进行标准化（normalize）。常见的错误是在这种地图上使用总数而非比率。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;点击&lt;em&gt;Open the Layer Styling Panel&lt;/em&gt;，选中&lt;em&gt;Graduated&lt;/em&gt; 着色器。在&lt;em&gt;Value&lt;/em&gt;列中点击表达式按钮 &lt;em&gt;Expression&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入下面的表达式，由于我们要投图的是识字率，就可以通过识字人口除以总人口来实现标准化。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;100&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;P_LIT&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TOT_P&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中一个配色方案和分类模式&lt;em&gt;Mode&lt;/em&gt;，然后点击分类按钮&lt;em&gt;Classify&lt;/em&gt;。这里可以选择下拉Color ramp然后选中&lt;em&gt;Invert color ramp&lt;/em&gt; 使得高值深色低值浅色。点击&lt;em&gt;Apply&lt;/em&gt;应用后，就能看到多边形已经根据识字率着色了。这样就很明显能看出各地区的识字率差异。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;将数据分类的方案有很多种，具体可以参考&lt;a href="https://gisgeography.com/choropleth-maps-data-classification/"&gt;这篇文章&lt;/a&gt; ，文中对各种分类模式的优劣进行了点评。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不过，如果你放大，就会发现多边形图层中间有空缺的地方。这是因为 you的城市没有对应的数据表格，因此就被排除在图层之外了。有这样的孔洞看着不太好，可以设计一种办法来插值推测这些缺少数据的值。选中 &lt;code&gt;gulbarga_district&lt;/code&gt; 图层，将 &lt;em&gt;Symbol layer type&lt;/em&gt;设置为 &lt;code&gt;Line pattern fill&lt;/code&gt;，其他参数随便设置就好。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后你会发现这里面没有交叉的填充样式。这很好办，只要用两个相互垂直的线条填充就可以实现了。在刚才的&lt;em&gt;Layer Styling Panel&lt;/em&gt;标签页中点击 &lt;em&gt;Duplicate the current layer&lt;/em&gt; 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在新添加的线条填充上设置旋转角度&lt;em&gt;Rotation&lt;/em&gt; 值为&lt;code&gt;-45.00&lt;/code&gt; 或者&lt;code&gt;135.00&lt;/code&gt;，然后就会发现图中空白的位置已经被十字交叉填充了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在你就有了一个对该区域的识字率的可视化地图了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/census13.png"&gt;&lt;/p&gt;
&lt;h2&gt;栅格数据（Raster）-照片（Photos）&lt;/h2&gt;
&lt;p&gt;风筝、热气球、飞机、直升机以及无人机等等空中设备的传感器获取的图像，是绘制地图的重要信息来源。这些图像通常都是位图（basemap），为其他空间数据提供了基础。从这些位图中也可以提取特征信息，再建立模型成为矢量数据。&lt;/p&gt;
&lt;p&gt;最常用的图像格式是 GeoTiff。一个 GeoTiff 文件包含了附加的元数据（metadata），允许用户将像素的行列位置与现实世界的经纬度位置进行对应。常规的照片也可以转换成这样带有空间感知的山歌数据，这种过程就叫做&lt;a href="https://en.wikipedia.org/wiki/Georeferencing"&gt;地理配准 GeoReferencing&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;练习：查看无人机图像&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://openaerialmap.org/"&gt;OpenAerialMap&lt;/a&gt; 是一个提供无人机图像的分享和下载服务的开放网站。本次练习使用的是 WeRobotics 提供的加德满都大学操场（Kathmandu University Grounds）的照片。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;code&gt;kathmandu_drone_imagery.tif&lt;/code&gt; 文件拖动到 QGIS 地图画布中，使用缩放和平移来查看这张图。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/drone1.png"&gt; &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在图像右下角，会发现坐标参考系（CRS）是 EPSG:32645，表示的是UTM分区45N。选中&lt;em&gt;Identify&lt;/em&gt; 工具然后在图片中四处点击。你会发现这个图像包含红绿蓝三色通道。坐标系是投影坐标（projected coordinates0而非地理坐标（geographic coordinates）。也就是公里网格模式，横轴&lt;em&gt;X (Easting)&lt;/em&gt;向东，纵轴&lt;em&gt;Y (Northing)&lt;/em&gt;向北。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/drone2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这张图经过了地理坐标配准，所以可以配合其他空间图层一起查看。菜单栏中选中 &lt;strong&gt;Web → QuickMapServices → OSM → OSM Standard&lt;/strong&gt;，就将叠瓦地图切片添加到图层面板&lt;em&gt;Layers&lt;/em&gt; ，你就能发现这两者之间位置是匹配的，因为原图已经进行过对准。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/drone3.png"&gt;&lt;/p&gt;
&lt;h2&gt;栅格数据（Raster）-卫星图像（Satellite Images）&lt;/h2&gt;
&lt;p&gt;地球外面有几百颗观测卫星在持续捕获地球表面的图像。全球很多航空机构都将这些数据公开分享了出来。这些数据集对科学家、研究人员、政府和商业机构等等来说都是无比珍贵的。&lt;/p&gt;
&lt;p&gt;和常规照片不同，卫星图像往往包含很多的波段信息，而常规照片往往只有红绿蓝三通道的信息。卫星图像的信息丰富就为利用机器学习模型来辨别不同物体提供了便利。例如，人工草坪和真正的草坪可能看着都是绿色的，但二者对红外光的反射差距非常显著。所以使用多光谱（multi-spectral）图像所提供的附加信息就能轻松分别出来。&lt;/p&gt;
&lt;h3&gt;练习：观看和使用哨兵2（Sentinel-2）卫星影像并建立拼接&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sentinel.esa.int/web/sentinel/missions/sentinel-2"&gt;哨兵2 Sentinel-2&lt;/a&gt; 是欧洲航天局（European Space Agency， ESA）发射的两颗卫星。所提供图像的像素分辨率是 10米。这个分辨率不如无人机和航拍的图像分辨率，但在城市和地区层次的分析上还是足够好了。更重要的是，这个系列的数据是用12个不同的波段拍摄的，这对于科学目的但应用来说非常重要。对每个地理位置，这套数据每隔5天采集一次，因此可以对全球进行连续观测。而且欧洲航天局将所有相关数据都公开了。&lt;/p&gt;
&lt;p&gt;此次练习中加载的是2020年2月18日班加罗尔（Bangalore）的数据。&lt;code&gt;sentinel-2&lt;/code&gt;文件夹下面有四个JPEG2000格式的文件，分别是红（B4）、绿（B3）、蓝（B2）和近红外（B8）四个波段。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将4个图像文件拖拽到QGIS地图画布上。放大到任意区域，在&lt;em&gt;Attributes Toolbar&lt;/em&gt;中选择&lt;em&gt;Identify&lt;/em&gt; 工具，然后点击图像。在&lt;em&gt;Identify Results&lt;/em&gt; 窗口中，设置&lt;em&gt;View&lt;/em&gt;为&lt;code&gt;Table&lt;/code&gt;，然后对比同一对象在不同波段下的反射率差别。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来可以将多个波段结合起来成为一个图像然后一起来进行可视化。这就叫「彩色合成 &lt;em&gt;Color Composites&lt;/em&gt;」。要将多个图像合并到一处，找到&lt;strong&gt;Processing → Toolbox&lt;/strong&gt;然后选中&lt;strong&gt;GDAL → Raster miscellaneous → Build virtual raster&lt;/strong&gt;。双击启动拼接工具。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中全部的4个图层作为输入层&lt;em&gt;Input layers&lt;/em&gt; ，然后选中 &lt;em&gt;Place each input file into a separate band&lt;/em&gt;（将每个输入文件作为单独波段）。接下来点击运行&lt;em&gt;Run&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这样，在图层&lt;em&gt;Layers&lt;/em&gt;中，就出现了拼合出来的新图层 &lt;code&gt;Virtual&lt;/code&gt; 。这一图层包含有四个不同波段，要注意其中的波段排列顺序是字母顺序的，所以获得的图片当中的四个通道（Band）与原图的对应关系如下所示：&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;strong&gt;Virtual Raster Band&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;Image&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Band 1&lt;/td&gt;
&lt;td align="left"&gt;B02 (Blue)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Band 2&lt;/td&gt;
&lt;td align="left"&gt;B03 (Green)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Band 3&lt;/td&gt;
&lt;td align="left"&gt;B04 (Red)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Band 4&lt;/td&gt;
&lt;td align="left"&gt;B08 (NIR)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;首先我们进行「真彩色合成&lt;em&gt;RGB Color Composite&lt;/em&gt;」。这也常被称作「自然彩色合成&lt;em&gt;Natural Color Composite&lt;/em&gt;」，因为这种图像和人在肉眼观看的效果是一样的。设置&lt;code&gt;Band 3&lt;/code&gt;、 &lt;code&gt;Band 2&lt;/code&gt; 、 &lt;code&gt;Band 1&lt;/code&gt; 作为对应的 &lt;em&gt;Red&lt;/em&gt;、&lt;em&gt;Green&lt;/em&gt; 、&lt;em&gt;Blue&lt;/em&gt; 三个通道。然后将&lt;em&gt;Min/Max Value Settings&lt;/em&gt;设置为&lt;code&gt;Cumulative count cut&lt;/code&gt;。然后就会发现画布上的图像呈现出自然的色彩。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来要试试的是另一种可视化方案，也就是「假彩色合成&lt;em&gt;False Color Composite&lt;/em&gt;」。这里我们创建一个近红外、红、绿的假彩色合成（&lt;em&gt;NRG Color Composite&lt;/em&gt; ）。也就是将近红外波段设置为R通道，红光波段设置为G通道，绿光波段设置为B通道。这种合成方式强调了红光下的植被，能够更容易地进行植被解译。注意，水体和植被在自然彩色合成下几乎是一样的颜色，而在NRG假彩色合成下就很好区分了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/satellite5.png"&gt;&lt;/p&gt;
&lt;h2&gt;点云（Point Clouds）&lt;/h2&gt;
&lt;p&gt;现代的地图绘制技术包括使用激光雷达传感器（LiDAR sensor）的各种航拍手段。LiDAR是“Light Detection and Ranging”的缩写。这种传感器使用激光脉冲来测量物体距离地面的距离。对每个发出的脉冲，系统都计算对象的X、Y、Z坐标。这个数据对空间数据来说并不新奇，但在一块小区域内使用这样的方法可以获得上百万的点，常规的观看和处理工具就不适用了。这样的点云（&lt;em&gt;Point Cloud&lt;/em&gt;）一般使用的是LAS或者LAZ的文件格式进行存储的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Credit: Cargyrak, Wikipedia" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/lidar.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Credit: Cargyrak, Wikipedia&lt;/p&gt;
&lt;h3&gt;练习：观看航拍的点云&lt;/h3&gt;
&lt;p&gt;英国环境食品与农村事务部（UK’s Department of Environment Food &amp;amp; Rural Affairs (DEFRA) ）提供了全国范围的LiDAR数据和产品，可以从&lt;a href="https://environment.data.gov.uk/"&gt;Defra 数据服务平台&lt;/a&gt; 来获得。本次练习使用LAZ格式的牛津大学点云数据集。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/verma/plasio"&gt;Plasio&lt;/a&gt; 是一个基于浏览器的 LAS/LAZ 格式点云查看器，访问&lt;a href="https://plas.io/"&gt;plas.io&lt;/a&gt;，点击&lt;em&gt;Browse&lt;/em&gt; 然后定位到&lt;code&gt;SP5008_P_10967_20161130_20161130.laz&lt;/code&gt;文件，点击&lt;em&gt;Open&lt;/em&gt;打开。要注意这么小的区域有超过三百五十万个数据点。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pointcloud1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据加载后，在右边的面板中滚动，找到&lt;em&gt;Intensity Source&lt;/em&gt; 部分，下拉选项，选中&lt;code&gt;Heightmap Grayscale&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pointcloud2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用鼠标左键和滚轮来缩放与平移视图，探索一下数据集吧。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pointcloud3.png"&gt;&lt;/p&gt;
&lt;h2&gt;栅格数据（Raster） - 高程数据（Elevation Data）&lt;/h2&gt;
&lt;p&gt;栅格数据很适合对连续对象进行建模，比如高程。栅格中的每个像素的值就是该点的高程。这是一种对地标建模的简单高效的方法。这种栅格数据也就是数字高程模型（Digital Elevation Model，DEM）。&lt;/p&gt;
&lt;p&gt;具体来说，数字高程模型还可以分为两个基本类别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数字地表模型（Digital Surface Model，DSM）：表示地球真实表面，包括植被覆盖和建筑物等等。&lt;/li&gt;
&lt;li&gt;数字地形模型（Digital Terrain Model，DTM）：表示裸地表和自然地形。DTM一般是基于DSM实用算法或人工处理而得到。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;练习：查看和对比 DSM 与 DTM&lt;/h3&gt;
&lt;p&gt;英国环境食品与农村事务部（UK’s Department of Environment Food &amp;amp; Rural Affairs (DEFRA) ）提供了全国范围的高程数据产品，可以从&lt;a href="https://environment.data.gov.uk/"&gt;Defra 数据服务平台&lt;/a&gt; 来获得。本次练习使用ASC格式的牛津大学高程数据：&lt;code&gt;dsm_F0195499_20161130_20161130_mm_units.asc&lt;/code&gt; 和&lt;code&gt;dtm_F0195499_20161130_20161130_mm_units.asc&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.asc&lt;/code&gt;文件是一种基于文本的 ASCII 编码的栅格文件格式。这种文件的数据格式很简单，头部介绍栅格信息，像素值就是对应的行列值。如果你使用文字编辑器打开，可能就像下面的样子。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cols          2000
nrows         2000
xllcorner     450000
yllcorner     208000
cellsize      1
NODATA_value  -9999
-9999 -9999 -9999 -9999 -9999 -9999 ...
...
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;头文件提供的信息中包含有左下角（11）的X、Y坐标。知道这个位置的坐标对，以及图像尺寸和坐标参考系（Coordinate Reference System，CRS），可以对整个图像进行地理配准了。关于坐标参考系的相关信息包含在元数据&lt;a href="https://ckan.publishing.service.gov.uk/harvest/object/2533c88a-ccf2-41d7-8ac7-704c46bfd177/html"&gt;metadata&lt;/a&gt; ，设置为&lt;em&gt;EPSG:27700 British National Grid&lt;/em&gt;。接下来就有足够的信息来查看这些栅格数据了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 QGIS，在加载数据之前，我们要先设置项目坐标参考系与栅格数据的坐标参考系一致。在菜单栏中找到&lt;strong&gt;Project → Properties&lt;/strong&gt;进行设置。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;切换到&lt;em&gt;CRS&lt;/em&gt; 标签页，然后搜索&lt;code&gt;EPSG:27700&lt;/code&gt;，选中后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;code&gt;dsm_F0195499_20161130_20161130_mm_units.asc&lt;/code&gt; 文件拖动到试图中。选中&lt;em&gt;Identify&lt;/em&gt; 然后在图像上点击任意位置。就会看到对应的&lt;em&gt;Band 1&lt;/em&gt; 就是对应像素位置的高程，单位是千米.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击 &lt;em&gt;Open the Layer Styling Panel&lt;/em&gt;，选中单波段假彩色 &lt;code&gt;Singleband pseudocolor&lt;/code&gt; 着色器。扩展到最小最大值设置&lt;em&gt;Min / Max Value Settings&lt;/em&gt;部分，选择 &lt;em&gt;Cumulative count cut&lt;/em&gt;。 Select a color ramp of your choice. Once the style is applied you will be able to see the building outlines, trees, riverbed etc clearly.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来将&lt;code&gt;dtm_F0195499_20161130_20161130_mm_units.asc&lt;/code&gt; 也拖到视图里。要对这两者进行对比，可以考虑使用同样的参数进行可视化。好在QGIS提供了一种简单办法复用图层设置，右键要复制设置的源图层&lt;code&gt;dsm_F0195499_20161130_20161130_mm_units&lt;/code&gt; 后选中 &lt;strong&gt;Styles → Copy Style&lt;/strong&gt;即可复制已经做好的图层设置。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后选中目标图层 &lt;code&gt;dtm_F0195499_20161130_20161130_mm_units&lt;/code&gt;，右键，然后&lt;strong&gt;Styles → Paste Style&lt;/strong&gt;，就可以把刚刚复制的图层粘贴上去了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;来回切换 DSM 和 DTM 的图层顺序就可以对比二者来。你会发现 DTM只包含了地表的高程，没有任何其他的自然或者人造物。&lt;a href="https://courses.spatialthoughts.com/images/spatial_data_viz/elevation7.gif"&gt;View Animated GIF ↗&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/elevation7.png"&gt;&lt;/p&gt;
&lt;h1&gt;分析&lt;/h1&gt;
&lt;h2&gt;练习：Uber交通分析&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://movement.uber.com/"&gt;Uber&lt;/a&gt;提供了超过一百亿次打车出行的匿名数据，旨在帮助全球的城市规划。这些数据都已经免费公开课下载。该数据集中包含了旅行时间和每段路上的速度等信息。&lt;/p&gt;
&lt;p&gt;本次练习使用的是班加罗尔（Bangalore）的 &lt;a href="https://movement.uber.com/explore/bangalore/travel-times/query?lang=hi-IN"&gt;旅行时间数据 Travel Times data&lt;/a&gt;来分析交通模式，发现30分钟车程可达地区。这种地图也叫做&lt;a href="https://en.wikipedia.org/wiki/Isochrone_map"&gt;等时线地图 Isochrone Map&lt;/a&gt; ，可以用于城市规划。&lt;/p&gt;
&lt;p&gt;这份数据有两部分，首先是一个GeoJSON文件&lt;code&gt;bangalore_wards.json&lt;/code&gt;描绘了城市内各区域的边界，另外有一个CSV文件&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate.csv&lt;/code&gt;包含了城市各区域和一天中各时段的旅行时间，日期是2019年的第三季度（789三个月）。&lt;a href="https://d3i4yxtzktqr9n.cloudfront.net/web-movement/76002ded222a46a02ae89f207e91e335.pdf"&gt;一份白皮书&lt;/a&gt;讲述了创建这些数据的方法。&lt;/p&gt;
&lt;p&gt;CSV格式文件的内容如下所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;strong&gt;sourceid&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;dstid&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;hod&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;mean_travel_time&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;…&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;55&lt;/td&gt;
&lt;td align="left"&gt;111&lt;/td&gt;
&lt;td align="left"&gt;8&lt;/td&gt;
&lt;td align="left"&gt;2026.76&lt;/td&gt;
&lt;td align="left"&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;22&lt;/td&gt;
&lt;td align="left"&gt;25&lt;/td&gt;
&lt;td align="left"&gt;13&lt;/td&gt;
&lt;td align="left"&gt;770.07&lt;/td&gt;
&lt;td align="left"&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;…&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;…&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;sourceid&lt;/strong&gt; 和 &lt;strong&gt;dstid&lt;/strong&gt; 指的是出发地和目的地的区块ID。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hod&lt;/strong&gt;: hour-of-day，一天中的时间，从0-23。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mean_travel_time&lt;/strong&gt;: 平均旅行时间，秒为单位，从所有旅行中提取。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;班加罗尔城区中有 198 个分区。CSV文件中包含任意两区之间的成对的旅行时间。总共的记录时间会有198 x 198 x 24 = 940896条。但由于在特定时间内不是所有的区都有充足的行程发生，就存在对应的空白。因此实际上这个数据是818263列。这数据规模还是挺大的，需要用一些分析方法来提取其中的正确数据集。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中&lt;code&gt;bangalore_wards.json&lt;/code&gt;拖拽到QGIS的地图画布。然后夹在一个街景地图作为地图层，在菜单栏找到&lt;strong&gt;Web → QuickMapServices → OSM → OSM Standard&lt;/strong&gt;，加载之后，点击 &lt;em&gt;Open Data Source Manager&lt;/em&gt; 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;切换到&lt;em&gt;Delimited Text&lt;/em&gt; 按钮，找到&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate.csv&lt;/code&gt; 文件并选中。由于CSV文件只是表格数据，选择&lt;em&gt;No geometry (attribute only table)&lt;/em&gt; 选项然后点击添加&lt;em&gt;Add&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CSV倒入后，图层界面&lt;em&gt;Layers&lt;/em&gt; 下面就有了 &lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt; 这一项，右键然后选中&lt;em&gt;Show Feature Count&lt;/em&gt;。全部的列数就出现在旁边了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于本次练习，要计算全部从&lt;a href="https://g.page/spatialthoughts?share"&gt;Spatial Thoughts office&lt;/a&gt;出发30分钟内车程能到达的位置。在地图上找到对应区域，可以选中&lt;em&gt;Identify&lt;/em&gt; 按钮来选择&lt;code&gt;bangalore_wards&lt;/code&gt;图层并点击，然后该地的位置结果就会出现，位于&lt;em&gt;JP Nagar&lt;/em&gt; 区，&lt;em&gt;MOVEMENT_ID&lt;/em&gt; 为&lt;strong&gt;193&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来可以筛选将这个区域作为目的地的行程记录。还可以限制分析范围在早高峰上午9-10点钟这个时间段内。右键&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt; 层然后选中筛选&lt;em&gt;Filter&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入下面的筛选表达式，然后点击 &lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;dstid&amp;quot; = 193 AND &amp;quot;hod&amp;quot; = 9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在返回到QGIS的主窗口，你会发现数据项目数已经缩减到了&lt;em&gt;197&lt;/em&gt;。这是因为城市中一共只有198个区，那以&lt;code&gt;193&lt;/code&gt;号位置为目的地的自然只有其他197个，也就是1个目的地，197个出发地。现在到&lt;em&gt;Attributes&lt;/em&gt;工具栏中使用&lt;em&gt;Open Attribute Table&lt;/em&gt; 打开各图层的属性表格。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在我们在图层 &lt;code&gt;bangalore_wards&lt;/code&gt;中有各区范围，在层&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt;中有表格信息。现在就可以使用一个公用属性（common attribute）来将属性信息连接起来。此处的 &lt;strong&gt;MOVEMENT_ID&lt;/strong&gt; 列来自 &lt;code&gt;bangalore_wards&lt;/code&gt; 图层，而 &lt;strong&gt;sourceid&lt;/strong&gt; 列来自 &lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt; ，这两个都是分区id，可以连接起来。这个操作就叫&lt;em&gt;Table Join&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在对两个图层进行联合（join）之前，要保证两列中的数值严格一直。比如看上去一样，可能有不同的数据类型。因为GeoJSON格式不允许指定属性的数值类型，所有的值都是存储成字符串&lt;em&gt;String&lt;/em&gt;，也就是文本。但当导入CSV到QGIS的时候，QGIS会智能地将这些列的类型根据值来进行解析，因此就会给&lt;strong&gt;sourceid&lt;/strong&gt;这列解析成整数&lt;em&gt;Integer&lt;/em&gt;。所以我们需要将GeoJSON里的列数据也转换到整数。在菜单栏中找到&lt;strong&gt;Processing → Toolbox&lt;/strong&gt;，搜索&lt;em&gt;Vector Table → Field Calculator&lt;/em&gt;算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择&lt;code&gt;bangalore_wards&lt;/code&gt; 作为输入层&lt;em&gt;Input Layer&lt;/em&gt;，将要合并的&lt;code&gt;Field name&lt;/code&gt;值为&lt;code&gt;joinfield&lt;/code&gt; ，然后选择&lt;em&gt;Result field type&lt;/em&gt; 作为整数&lt;code&gt;Integer&lt;/code&gt;，输入 &lt;code&gt;"MOVEMENT_ID"&lt;/code&gt;作为表达式。点击&lt;em&gt;…&lt;/em&gt; 按钮，就在&lt;em&gt;Calculated&lt;/em&gt;旁，然后选中&lt;em&gt;Save to File..&lt;/em&gt;，输入文件名，将文件保存成&lt;code&gt;bangalore_wards_fixed.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;，关闭&lt;code&gt;Field Calculator&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;经过上面的步骤，在图层&lt;em&gt;Layers&lt;/em&gt; 中就多了&lt;code&gt;bangalore_wards_fixed&lt;/code&gt; 这一个新图层了。现在就可以进行联接（join）操作了。在&lt;code&gt;Processing Toolbox&lt;/code&gt;里面搜索并找到&lt;em&gt;Join attributes by field value&lt;/em&gt;算法 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择刚刚生成的&lt;code&gt;bangalore_wards_fixed&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt; ，然后设&lt;em&gt;Table field&lt;/em&gt;为&lt;code&gt;joinfield&lt;/code&gt;。选择&lt;code&gt;bangalore-wards-2019-3-OnlyWeekdays-HourlyAggregate&lt;/code&gt;作为第二输入层&lt;em&gt;Input layer 2&lt;/em&gt;，并选择&lt;em&gt;Table field 2&lt;/em&gt;作为&lt;code&gt;sourceid&lt;/code&gt; 。将&lt;em&gt;Joined layer&lt;/em&gt; 命名为&lt;code&gt;uber_travel_times.gpkg&lt;/code&gt;然后点击&lt;em&gt;Run&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在一个新的 &lt;code&gt;uber_travel_times&lt;/code&gt;图层就出现在图层面板&lt;em&gt;Layers&lt;/em&gt;中了。接下来对其进行可视化的调整。点击&lt;em&gt;Open the Layer Styling Panel&lt;/em&gt;，选择&lt;code&gt;Graduated&lt;/code&gt;着色器，设置&lt;em&gt;Value&lt;/em&gt;为&lt;code&gt;mean_travel_time&lt;/code&gt;。选择一个配色方案然后点击&lt;em&gt;Classify&lt;/em&gt;进行分类。就能看到随着距离目的地越远颜色就越深。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber13.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;咱们想要提取和分析的是小于三十分钟的，所以还需要进一步处理一下。切换到&lt;em&gt;Single symbol&lt;/em&gt; 着色器，右键&lt;code&gt;uber_travel_times&lt;/code&gt; 图层选择 &lt;em&gt;Filter&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber14.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入下面的表达式，选择所有平均旅程时间（mean travel time）小于等于1800秒也就是30分钟的(30 minutes) 。另外还要包含目的区域本身。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;mean_travel_time&amp;quot; &amp;lt;= 1800 OR &amp;quot;MOVEMENT_ID&amp;quot; = 193
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber15.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在这个图层就显示的是我们感兴趣的区域的众多多边形了。接下来咱们将这些多边形合并成一个多边形。在处理工具箱&lt;code&gt;Processing Toolbox&lt;/code&gt;中搜索&lt;em&gt;Dissolve&lt;/em&gt;算法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber16.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择&lt;code&gt;uber_travel_times&lt;/code&gt; 作为输入图层&lt;em&gt;Input layer&lt;/em&gt;。将融合的&lt;em&gt;Dissolved&lt;/em&gt;图层命名为 &lt;code&gt;30min_isochrone.gpkg&lt;/code&gt;，点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber17.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这样得到的新图层&lt;code&gt;30min_isochrone&lt;/code&gt; 就出现在图层面板&lt;em&gt;Layers&lt;/em&gt;中了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/uber18.png"&gt;&lt;/p&gt;
&lt;h2&gt;练习：分析地铁可及性&lt;/h2&gt;
&lt;p&gt;在规划城市基础设施的时候，尤其是以交通为导向的发展规划（Transit-Oriented Development，TOD），一项指标就是公共交通可及性。 &lt;a href="https://www.livemint.com/news/india/india-s-public-transport-challenge-1568355574941.html"&gt;LiveMint&lt;/a&gt;上面有一篇关于印度公共交通挑战的文章对印度全国的地铁可及性进行了分析。这个练习中也要实现一个类似的分析过程。&lt;/p&gt;
&lt;p&gt;通过这个分析，我们要确定在班加罗尔城中有多少人口生活在地铁站1km范围内。要解决这个问题，需要用到GIS的线条，结合多个离散数据源的相关信息。要进行这次的分析，首先要查询OpenStreetMap数据库来获得班加罗尔的地铁站位置。然后计算1km范围内的缓冲区域，再将其和基于WorldPop的人口网格（population grid）来完成人口分析。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到&lt;code&gt;bangalore.geojson&lt;/code&gt; 文件，拖拽到QGIS的地图画布上。这个多边形表示的就是城市边界。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来查询OpenStreetMap来获得该城市上的铁路车站。到菜单栏中找到 &lt;strong&gt;Vector → QuickOSM → QuickOSM&lt;/strong&gt;。OpenStreetMap 利用一个标签系统（tagging system）来记录物理特征的属性。这种标签和键值对的具体细节可以参考&lt;a href="https://wiki.openstreetmap.org/wiki/Map_Features"&gt;OpenStreetMap wiki&lt;/a&gt;。铁路车站的标签是&lt;code&gt;railway=station&lt;/code&gt;。在键名&lt;em&gt;Key&lt;/em&gt;处设置为&lt;code&gt;railway&lt;/code&gt;，键值&lt;em&gt;Value&lt;/em&gt;设为&lt;code&gt;station&lt;/code&gt;，地理位置过滤选项&lt;em&gt;In&lt;/em&gt;设置为&lt;em&gt;Bangalore&lt;/em&gt; 。扩展&lt;em&gt;Advanced&lt;/em&gt; 区域，只选中 &lt;em&gt;Node&lt;/em&gt; 和&lt;em&gt;Points&lt;/em&gt; 两个勾选框。点击运行查询&lt;em&gt;Run Query&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查询完成后，你就能看到新图层&lt;code&gt;railway_station_Bangalore&lt;/code&gt;已经加载到地图画布上了。这个图层中包含铁路车站和在建设中的车站。接下来就要进行筛选，只保留我们关注的地铁车站。右键该新图层，选择筛选&lt;em&gt;Filter&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;em&gt;Query Builder&lt;/em&gt; 输入下面的表达式，然后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：这里的使用的是&lt;code&gt;IS NOT&lt;/code&gt; ，而不是 &lt;code&gt;!=&lt;/code&gt;。这是因为这些列当中有位置为&lt;strong&gt;NULL&lt;/strong&gt;。而&lt;em&gt;NULL&lt;/em&gt; 并不是一个值，不能和其他值进行等于、不等于这样的比较。而&lt;code&gt;IS NOT&lt;/code&gt;可以适用于所有类型，能够有效验证项目是否匹配，就包括&lt;strong&gt;NULL&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;operator&amp;quot; = &amp;#39;BMRCL&amp;#39; AND 
&amp;quot;disused&amp;quot; IS NOT &amp;#39;yes&amp;#39; AND 
&amp;quot;disused:railway&amp;quot; IS NOT &amp;#39;station&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;已建成但未连接到整个体系的车站是由于中间的车站还在建设。所以在可视化解译中，要再对这部分车站进行清洗。点击&lt;em&gt;Select Features&lt;/em&gt;按钮，选择未连接的地铁站。然后点击&lt;em&gt;Open Attribute Table&lt;/em&gt;图标。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在属性表格中，切换到显示所选特征&lt;em&gt;Show selected Features&lt;/em&gt;。然后直邮要删除的个别特征会显示出来。 然后就会凸显出刚刚选中的。现在点击左上角小铅笔图标进入编辑模式&lt;em&gt;Toggle editing mode&lt;/em&gt; 然后点击小垃圾桶图标删除选中特征&lt;em&gt;Delete selected features&lt;/em&gt;。完成之后，再点击小铅笔图标 &lt;em&gt;Toggle editing mode&lt;/em&gt;，然后再点击&lt;em&gt;Save&lt;/em&gt;保存。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在地图就更新了，只保留了咱们想要的城区地铁站。接下来需要对这些站点应用一个缓冲处理&lt;em&gt;Buffer&lt;/em&gt;来获得距离地铁站1km范围内的区域。但咱们的地图用的是EPSG:4326 WGS84地理投影，用的单位是度分秒。要将单位从度分秒转化到公里网格，就必须将图层重新投影到一个合适的坐标参考系统（coordinate reference system，CRS）。到菜单栏中找到&lt;strong&gt;Processing → Toolbox&lt;/strong&gt;，搜索定位到&lt;strong&gt;Vector general → Reproject layer&lt;/strong&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择 &lt;code&gt;railway_station_Bangalore&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;。点击下图所示的小图标，目标坐标参考系&lt;em&gt;Target CRS&lt;/em&gt;选择&lt;code&gt;EPSG:32643 - WGS 84 UTM Zone 43N&lt;/code&gt;。将重命名的&lt;em&gt;Reprojected&lt;/em&gt;图层命名为&lt;code&gt;metro_stations_reprojected.gpkg&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重新投影的&lt;code&gt;metro_stations_reprojected&lt;/code&gt;图层创建好后，在&lt;strong&gt;Processing Toolbox&lt;/strong&gt;中搜索&lt;strong&gt;Vector geometry → Buffer&lt;/strong&gt;然后双击运行算法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;code&gt;metro_stations_reprojected&lt;/code&gt; 设做输入层&lt;em&gt;Input layer&lt;/em&gt;。设置&lt;em&gt;Distance&lt;/em&gt;为 &lt;code&gt;1 kilometer&lt;/code&gt;。选中&lt;em&gt;Dissolve result&lt;/em&gt; 选项，然后将&lt;em&gt;Buffered&lt;/em&gt; 输出图层命名为&lt;code&gt;metro_stations_buffer.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;来运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop10.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在图层中就出现了刚刚得到的距离地铁站范围1km的多边形组成的新图层&lt;code&gt;metro_stations_buffer&lt;/code&gt;了。图层上的一个个圆表示的就是距离地铁站圆心1km范围。地理处理完成了，我们接下来将得到的图层再转换回原来的坐标参考系。在&lt;strong&gt;Processing Toolbox&lt;/strong&gt;中搜索&lt;strong&gt;Vector general → Reproject layer&lt;/strong&gt;算法然后运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop11.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择刚刚生成的&lt;code&gt;metro_stations_buffer&lt;/code&gt;图层作为输入图层&lt;em&gt;Input layer&lt;/em&gt;，然后设置&lt;em&gt;Target CRS&lt;/em&gt;为&lt;code&gt;EPSG:4326 -WGS 84&lt;/code&gt;。将新生成的图层命名为 &lt;code&gt;metro_station_buffer_reprojected.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop12.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新图层 &lt;code&gt;metro_station_buffer_reprojected&lt;/code&gt;就被添加到画布上了，表示的是距离地铁站1km范围内的地方。之前已经有了&lt;code&gt;bangalore&lt;/code&gt; 图层表示整个城区范围。接下来要给这些图层添加人口数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop13.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到&lt;code&gt;ind_ppp_2000_KA.tif&lt;/code&gt;文件，拖拽到画布上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop14.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择 &lt;code&gt;ind_ppp_2000_KA&lt;/code&gt; 图层，然后使用 &lt;em&gt;Identify&lt;/em&gt;工具查看像素质。这个栅格图像的分辨率大约是100m x 100m，单一通道，每个像素的值是对应大小区域的估计人口。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop15.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将所有落在多边形的区域中的像素加到一起就能获得对应区域的总人口。这个操作也叫区域统计&lt;em&gt;Zonal Statistics&lt;/em&gt;。在&lt;strong&gt;Processing Toolbox&lt;/strong&gt;中搜索&lt;strong&gt;Raster analysis → Zonal statistics&lt;/strong&gt;算法。这个算法是对每个层增加了一个新属性，这个属性存储的是每个层当中包含在多边形中的总人口。双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop16.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择&lt;code&gt;bangalore&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;，将&lt;code&gt;ind_ppp_2000_KA&lt;/code&gt;作为栅格层&lt;em&gt;Raster layer&lt;/em&gt;。输入&lt;code&gt;population_&lt;/code&gt;作为输出列前缀&lt;em&gt;Output column prefix&lt;/em&gt;。我们感兴趣的只是总和&lt;strong&gt;Sum&lt;/strong&gt;，所以点击&lt;em&gt;Statistics to calculate&lt;/em&gt;旁边的&lt;code&gt;...&lt;/code&gt;，然后只选中&lt;code&gt;Sum&lt;/code&gt;。在&lt;em&gt;Zonal Statistics&lt;/em&gt; 中点击&lt;code&gt;...&lt;/code&gt; 然后将生成文件设置保存为 &lt;code&gt;banglore_pop.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop17.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;算法完成后，选择&lt;code&gt;metro_station_buffer_reprojected&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;。然后再&lt;em&gt;Zonal Statistics&lt;/em&gt; 中点击 &lt;code&gt;...&lt;/code&gt;将生成层保存为&lt;code&gt;metro_station_buffer_pop.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop18.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在地图画布上就出现了新生成的两个图层了。点击&lt;code&gt;banglore_pop&lt;/code&gt;然后使用&lt;em&gt;Identify&lt;/em&gt;工具，然后点击多边形。里面的&lt;strong&gt;population_sum&lt;/strong&gt; 就应该是人口了。可以📧然后选择复制属性值&lt;em&gt;Copy Attribute Value&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop19.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;QGIS 有一个内置计算器。点击界面左下角的&lt;em&gt;Locator&lt;/em&gt;窗体然后输入等号&lt;code&gt;=&lt;/code&gt;。将&lt;code&gt;metro_station_buffer_pop&lt;/code&gt;和&lt;code&gt;banglore_pop&lt;/code&gt;的人口总数粘贴进去，算出比值。得到的结果就是班加罗尔城市中住在地铁周围1km范围内的人口比例。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;= 100 * pasted value from from metro_station_buffer_pop / pasted value from banglore_pop 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/pop20.png"&gt;&lt;/p&gt;
&lt;h2&gt;练习：绿地分布&lt;/h2&gt;
&lt;p&gt;拥挤的城市区域中，公园之类的开放空间很有必要。这些场所不仅能改善环境提供娱乐设施，还对人的心理健康有正面影响。&lt;/p&gt;
&lt;p&gt;本次练习中，我们使用来自Bruhat Bengaluru Mahanagara Palike (BBMP)出版的公园列表，计算城市中每个分区的公园面积。这个数据可以通过 &lt;a href="http://opencity.in"&gt;OpenCity - Urban Data Portal&lt;/a&gt; 获取到PDF格式的文件。本课程原作者将PDF格式数据文件使用&lt;a href="https://www.zamzar.com/convert/pdf-to-xls/"&gt;Zamzar Online file conversion&lt;/a&gt;转换成了表格文件&lt;code&gt;BBMP_Parks.xlsx&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，本练习只考虑每个区域的公园总面积。但实际上公园质量也很重要，对此的相关分析可以参考&lt;a href="https://www.ichangemycity.com/pdf/parks-playgrounds-survey-report.pdf"&gt;Parks and Playgrounds Score of Bengaluru Report&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;code&gt;bangalore_wards.json&lt;/code&gt;文件拖拽到QGIS地图画布上。然后找到&lt;code&gt;BBMP_Parks.xlsx&lt;/code&gt;文件。QGIS也可以直接读取Excel文件。拽到画布上就可以，现在就有&lt;code&gt;bangalore_wards&lt;/code&gt;和&lt;code&gt;BBMP_Parks_Area&lt;/code&gt; 两个图层出现在图层面板&lt;em&gt;Layers&lt;/em&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中 &lt;code&gt;BBMP_Parks_Area&lt;/code&gt; 图层然后点击&lt;em&gt;Open Attribute Table&lt;/em&gt;。可以看到数据有超过900多行，每行都描述了一个公园和对应的面积，单位是平方米。我们不需要提取公园的地理位置坐标，但需要知道归属的区。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来可以按照各个区计算每个区一共有多少个公园。打开&lt;em&gt;Processing Toolbox&lt;/em&gt;然后搜索&lt;strong&gt;Vector analysis → Statistics by categories&lt;/strong&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中&lt;code&gt;BBMP_Parks_Area&lt;/code&gt;图层作为输入向量层&lt;em&gt;Input vector layer&lt;/em&gt;。选中&lt;code&gt;Area&lt;/code&gt;作为&lt;em&gt;Field to calculate statistics on&lt;/em&gt;. 由于要按区分辨，选中&lt;code&gt;Ward&lt;/code&gt;作为&lt;em&gt;Field(s) with categories&lt;/em&gt;。将生成的&lt;em&gt;Statistics by category&lt;/em&gt;层存储为&lt;code&gt;park_area_by_ward.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来每一个区都有一个对应的面积总和&lt;em&gt;sum&lt;/em&gt;，然后可以将其于一个空间图层联接起来。在&lt;code&gt;Processing Toolbox&lt;/code&gt;里面搜索&lt;em&gt;Join attributes by field value&lt;/em&gt;算法。选中&lt;code&gt;bangalore_wards&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;，然后设置&lt;code&gt;WARD_NO&lt;/code&gt;作为&lt;em&gt;Table field&lt;/em&gt;。选择&lt;code&gt;park_area_by_ward&lt;/code&gt;作为第二输入层&lt;em&gt;Input layer 2&lt;/em&gt;，设置&lt;code&gt;Ward&lt;/code&gt;为&lt;em&gt;Table field 2&lt;/em&gt;。这里的&lt;code&gt;park_area_by_ward&lt;/code&gt;包含很多列，但我们要用的只有&lt;em&gt;sum&lt;/em&gt;。所以选中&lt;code&gt;sum&lt;/code&gt;作为&lt;em&gt;Layer 2 fields to copy&lt;/em&gt;。将输出层命名为&lt;code&gt;bangalore_wards_park_area_joined.gpkg&lt;/code&gt;然后点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;可能会有警告提示你不是所有的特征都成功联接。这是因为Excel文件并不能包涵覆盖所有区域的全部数据。这对于咱们的练习分析目的来说没啥影响，不用担心。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新图层&lt;code&gt;bangalore_wards_park_area_joined&lt;/code&gt;就出现在图层面板&lt;em&gt;Layers&lt;/em&gt;了。在完成结果之前，可以将每一列都重命名一下使之更容易理解。在&lt;em&gt;Processing Toolbox&lt;/em&gt;里面搜索找到&lt;strong&gt;Vector table → Refactor fields&lt;/strong&gt; 算法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中不需要的列，然后用&lt;em&gt;Delete field&lt;/em&gt;移除。对于&lt;em&gt;sum&lt;/em&gt;列，输入&lt;code&gt;PARK_AREA&lt;/code&gt;作为名称&lt;em&gt;Field name&lt;/em&gt;。然后将&lt;em&gt;Refactored&lt;/em&gt;输出的文件名设置为&lt;code&gt;bangalore_wards_park_area.gpkg&lt;/code&gt;，点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;得到的新图层&lt;code&gt;bangalore_wards_park_area&lt;/code&gt;也能在图层面板&lt;em&gt;Layers&lt;/em&gt;里看到了。打开一下属性表格查看各分区的公园面积吧。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/park8.png"&gt;&lt;/p&gt;
&lt;h2&gt;练习：选择最佳居住区&lt;/h2&gt;
&lt;p&gt;寻找最优区域是空间分析技术的常见实用场景。使用合适的模型，就可以将多种因素一起考虑，然后推断出排列顺序。这里我们使用的是一个真实的场景，要在一个城市中根据多个因素寻找最佳居住场所。&lt;/p&gt;
&lt;p&gt;本次练习所选用的优选因素如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;距离工作地必须在三十分钟车程范围内，办公地点设为&lt;a href="https://g.page/spatialthoughts?share"&gt;Spatial Thoughts office&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;距离地铁站点必须在1km范围内。&lt;/li&gt;
&lt;li&gt;要有公园，无公园的区域不考虑。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前面的练习已经为这次联系准备了数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;30min_isochrone.gpkg&lt;/code&gt; 图层表示的是距离工作地30分钟的区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metro_station_buffer_reprojected.gpkg&lt;/code&gt; 图层表示的是地铁周围1km范围。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bangalore_wards_park_area.gpkg&lt;/code&gt; 表示了每个区的公园面积。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来就把上面这几层都用上，交叉分析出来就可以了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;code&gt;30min_isochrone.gpkg&lt;/code&gt;、 &lt;code&gt;metro_station_buffer_reprojected.gpkg&lt;/code&gt;、&lt;code&gt;bangalore_wards_park_area.gpkg&lt;/code&gt;这三个文件拖拽到QGIS里面，然后在&lt;em&gt;Processing Toolbox&lt;/em&gt;里面搜索&lt;strong&gt;Vector overlay → Intersection&lt;/strong&gt;算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay1.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中&lt;code&gt;30min_isochrone&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;，选中&lt;code&gt;metro_station_buffer_reprojected&lt;/code&gt;作为叠覆层&lt;em&gt;Overlay layer&lt;/em&gt;。设置&lt;em&gt;Intersection&lt;/em&gt;交叉生成文件为&lt;code&gt;intersection.gpkg&lt;/code&gt;。点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;得到的&lt;code&gt;intersection&lt;/code&gt;图层表示符合地铁站1km和开车通勤时间30分钟内这两个条件。接下来要用第三个条件筛选。在&lt;em&gt;Processing Toolbox&lt;/em&gt;中搜索定位到&lt;strong&gt;Vector analysis → Overlap analysis&lt;/strong&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中&lt;code&gt;bangalore_wards_park_area.gpkg&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;。选中&lt;code&gt;intersection&lt;/code&gt;作为叠覆层&lt;em&gt;Overlay layer&lt;/em&gt;。将输出层&lt;em&gt;Output layer&lt;/em&gt;命名为&lt;code&gt;park_intersection_overlap.gpkg&lt;/code&gt;，然后点击&lt;em&gt;Run&lt;/em&gt;运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;得到的新图层 &lt;code&gt;park_intersection_overlap&lt;/code&gt; 比原来的多了两列：&lt;code&gt;intersection_area&lt;/code&gt;和&lt;code&gt;intersection_pc&lt;/code&gt;。对每个多边形，现在知道每个区域与我们感兴趣区域的交叉比例。如果假设公园在每个区都是均匀分布，就一使用&lt;code&gt;intersection_pc&lt;/code&gt;这个参数计算公园比例。在&lt;em&gt;Processing Toolbox&lt;/em&gt;中搜索定位到&lt;em&gt;Vector Table → Field Calculator&lt;/em&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay5.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输出文件&lt;em&gt;Output file&lt;/em&gt;设置为&lt;code&gt;park_intersection_percentage_area.gpkg&lt;/code&gt;。将输出域名&lt;em&gt;Output field name&lt;/em&gt;设置为&lt;code&gt;perc_area&lt;/code&gt;。输入下面的表达式，然后点击&lt;em&gt;OK&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(&amp;quot;intersection_pc&amp;quot; * &amp;quot;PARK_AREA&amp;quot;)/100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay6.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本就差不多了，现在就知道兴趣区内每个地区的公园总面积了。可以排一下顺序。在&lt;em&gt;ProcessingWe Toolbox&lt;/em&gt;里面搜索定位到 &lt;em&gt;Vector Table → Add autoincremental field&lt;/em&gt; 算法，双击运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay7.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择&lt;code&gt;park_intersection_percentage_area&lt;/code&gt;作为输入层&lt;em&gt;Input layer&lt;/em&gt;。输入&lt;code&gt;RANK&lt;/code&gt;作为&lt;em&gt;Field name&lt;/em&gt; ，输入&lt;code&gt;1&lt;/code&gt;作为&lt;em&gt;Start values at&lt;/em&gt;。扩展&lt;em&gt;Advanced parameter&lt;/em&gt;区域然后选&lt;code&gt;perc_area&lt;/code&gt;作为&lt;em&gt;Sort expression&lt;/em&gt;。去掉勾选&lt;em&gt;Sort ascending&lt;/em&gt;。将&lt;em&gt;Incremented&lt;/em&gt; 输出层命名为&lt;code&gt;bangalore_ward_rank.gpkg&lt;/code&gt;然后点击&lt;em&gt;Run&lt;/em&gt;保存。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay8.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;右键新生成的&lt;code&gt;bangalore_ward_rank&lt;/code&gt;图层选中筛选器&lt;em&gt;Filter&lt;/em&gt;。输入下面的表达式就获得前十个候选区域。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;RANK&amp;quot; &amp;lt;= 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay9.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接下来看到的就是排名最靠前的十个区域。点击&lt;em&gt;Open the Layer Styling Panel&lt;/em&gt; 切换到&lt;em&gt;Labels&lt;/em&gt;标签页。选择&lt;em&gt;Single labels&lt;/em&gt;然后设置&lt;code&gt;RANK&lt;/code&gt;作为&lt;em&gt;Value&lt;/em&gt;。这样地图上就显示出排序了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/overlay10.png"&gt;&lt;/p&gt;
&lt;h1&gt;补充资料&lt;/h1&gt;
&lt;h2&gt;查看云优化的无人机图像&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://map.openaerialmap.org/#/39.220848083496094,-6.162059582511514,11/user/5ac4842b26964b0010033104"&gt;Zanzibar Mapping Initiative (ZMI)&lt;/a&gt;是坦桑尼亚科学和技术委员会（Tanzania Commission for Science and Technology ，COSTECH）和桑吉巴尔革命政府（Revolutionary Government of Zanzibar，RGoZ）的一项合作计划。这个计划正在拍摄无人机照片来为桑吉巴尔创建航拍地图，并通过&lt;a href="https://openaerialmap.org/"&gt;开放航拍计划 OpenAerialMap&lt;/a&gt;公开。&lt;/p&gt;
&lt;p&gt;针对这样的大规模图像的使用和分析，有一种新文件格式叫做&lt;a href="https://www.cogeo.org/"&gt;云优化的地理信息位图 Cloud-Optimized GeoTIFF (COG)&lt;/a&gt; 。作为一种「云优化」（&lt;em&gt;Cloud-optimized&lt;/em&gt; ）的GeoTIFF格式，和之前我们看到的常规GeoTIFF一样有地理信息，但不需要将所有图像下载到本地，你就可以读取图像的一部分（&lt;em&gt;portions&lt;/em&gt;），使用的是云端服务推流技术，客户端就是QGIS这类软件。这就使得对这类数据的读取和分析非常简单方便，不用下载很大的文件了。&lt;/p&gt;
&lt;p&gt;桑吉巴尔测绘计划的所有图像的收集和处理都是以云优化的GeoTIFF格式存储在亚马逊S3云上。接下来我们用QGIS来查看一下。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先要在 OpenAerialMap 上访问&lt;a href="https://map.openaerialmap.org/#/39.220848083496094,-6.162059582511514,11/user/5ac4842b26964b0010033104"&gt;Zanzibar Mapping Initiative (ZMI)&lt;/a&gt; 的用户页面。找到你要用的图像，右键&lt;code&gt;Download raw .tiff image file&lt;/code&gt;按钮，然后选中复制链接地址&lt;em&gt;Copy Link Address&lt;/em&gt;。本次练习使用的是&lt;a href="https://oin-hotosm.s3.amazonaws.com/5b00370f2b6a08001185f125/10/5b00370f2b6a08001185f130.tif"&gt;这个图像链接&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog1.jpg"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在QGIS中，点击&lt;em&gt;Open Data Source Manager&lt;/em&gt;，或者使用快捷键&lt;code&gt;Ctrl+L&lt;/code&gt; / &lt;code&gt;Cmd +L&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;切换到栅格&lt;em&gt;Raster&lt;/em&gt;标签，然后选中协议&lt;code&gt;Protocol: HTTP(S), cloud etc.&lt;/code&gt;作为数据源&lt;em&gt;Source type&lt;/em&gt;。输入刚刚的geotiff链接地址作为&lt;em&gt;URI&lt;/em&gt;。然后点击&lt;em&gt;Add&lt;/em&gt;添加。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始化下载之后，图像就可以在QGIS中呈现为一个新图层了。要注意每个图像的原始大小可能有几百兆字节，但加载的时候其实只传输了必要的一小部分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog4.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;em&gt;Identify&lt;/em&gt; 工具来点一点图像。你会发现这是一个四通道的无人机图像，四个通道就是红、绿、蓝、明度（Red, Green, Blue, Alpha）。你不仅可以查看图像，还可以查询图像的像素值。这酒喝常规的GeoTIFF格式文件一样。如果你使用的是XYZ切片图层，是绝对无法实现这个效果的。所以一个云优化的GeoTIFF格式提供了这一独一无二的功能，具有这种快速流式访问的独特优势，同时保留了源数据的完全性。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/cycleuser/cycleuser.github.io/master/img/QGIS/cog5.png"&gt;&lt;/p&gt;
&lt;h1&gt;数据来源&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Delhi PM2.5 concentrations. Downloaded from &lt;a href="https://openaq.org/"&gt;OpenAQ&lt;/a&gt; &lt;a href="https://openaq.org/#/countries?_k=dmlk2k"&gt;data download&lt;/a&gt; service. Source data from Central Pollution Control Board (CPCB) India and EPAAirNow DOC.&lt;/li&gt;
&lt;li&gt;OSM Tile Layer, Bangalore Metro Stations : (c) OpenStreetMap contributors&lt;/li&gt;
&lt;li&gt;India Village-Level Geospatial Socio-Economic Data Set. Meiyappan, P., P. S. Roy, A. Soliman, T. Li, P. Mondal, S. Wang, and A. K. Jain. 2018. India Village-Level Geospatial Socio-Economic Data Set: 1991, 2001. Palisades, NY: NASA Socioeconomic Data and Applications Center (SEDAC). &lt;a href="https://doi.org/10.7927/H4CN71ZJ"&gt;https://doi.org/10.7927/H4CN71ZJ&lt;/a&gt;. Accessed 15 February 2020.&lt;/li&gt;
&lt;li&gt;Census 2001 Districts: Downloaded from &lt;a href="https://github.com/datameet/maps/tree/master/States"&gt;Datameet Spatial Data repository&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Oxford Point Cloud. DTM, and DSM. Downloaded from &lt;a href="https://environment.data.gov.uk/DefraDataDownload/"&gt;Defra Data Services Platform&lt;/a&gt;. Crown Copyright 2019&lt;/li&gt;
&lt;li&gt;Kathmandu University Ground Drone Imagery. Downloaded from &lt;a href="https://map.openaerialmap.org/#/85.53695037961006,27.61776421799196,20/user/59f0ecea31eff4000c3804fd/5a00c096bac48e5b1cf75232?_k=tkjpjw"&gt;OpenAerialMap&lt;/a&gt;. Captured by &lt;a href="https://werobotics.org/"&gt;WeRobotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zanzibar Cloud-Optimized GeoTiff and XYZ Layer. Accessed from &lt;a href="https://map.openaerialmap.org/#/39.220848083496094,-6.162059582511514,11/user/5ac4842b26964b0010033104"&gt;OpenAerialMap&lt;/a&gt;. Commission for Lands (COLA) ; Revolutionary Government of Zanzibar (RGoZ)&lt;/li&gt;
&lt;li&gt;Bangalore Sentinel-2 Imagery. Downloaded from &lt;a href="https://scihub.copernicus.eu/"&gt;Copernicus Open Access Hub&lt;/a&gt;. Copyright European Space Agency - ESA.&lt;/li&gt;
&lt;li&gt;Travel Times for Bangalore. Data retrieved from Uber Movement, (c) 2020 Uber Technologies, Inc., &lt;a href="https://movement.uber.com"&gt;https://movement.uber.com&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Bangalore Ward Maps Provided by &lt;a href="http://projects.datameet.org/Municipal_Spatial_Data/"&gt;Spatial Data of Municipalities (Maps) Project&lt;/a&gt; by Data{Meet}.&lt;/li&gt;
&lt;li&gt;Karnataka Population Grid 2020: Downloaded from &lt;a href="https://www.worldpop.org/geodata/summary?id=6527"&gt;WorldPop&lt;/a&gt; - School of Geography and Environmental Science, University of Southampton; Department of Geography and Geosciences, University of Louisville; Departement de Geographie, Universite de Namur) and Center for International Earth Science Information Network (CIESIN), Columbia University (2018). Global High Resolution Population Denominators Project - Funded by The Bill and Melinda Gates Foundation (OPP1134076). &lt;a href="https://dx.doi.org/10.5258/SOTON/WP00645"&gt;https://dx.doi.org/10.5258/SOTON/WP00645&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://opencity.in/documents/bbmp-list-of-parks-wardwise"&gt;BBMP: List of Parks - wardwise&lt;/a&gt;: Downloaded from OpenCity Urban Data Portal by Oorvani Foundation and DataMeet.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;授权协议&lt;/h1&gt;
&lt;p&gt;本课程材料采用&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;知识共享署名-非商业性4.0国际许可协议&lt;/a&gt;授权。你可以为任何非商业目的自由使用该材料。请适当注明原作者的名字。&lt;/p&gt;
&lt;p&gt;本中文翻译版本禁止商用。&lt;/p&gt;
&lt;p&gt;如果你想利用英文原版内容作为商业产品的一部分，需要 &lt;a href="https://spatialthoughts.com/contact/"&gt;联系英文原作者&lt;/a&gt; 询问价格和使用条款，获得&lt;em&gt;培训授权&lt;/em&gt;，付对应费用。&lt;/p&gt;
&lt;p&gt;© 2020 Ujaval Gandhi &lt;a href="https://spatialthoughts.com"&gt;www.spatialthoughts.com&lt;/a&gt;&lt;/p&gt;</content><category term="QGIS"></category><category term="GIS"></category><category term="QGIS"></category><category term="Python"></category><category term="Learning"></category><category term="Book"></category></entry></feed>